(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{372:function(s,t,n){"use strict";n.r(t);var a=n(0),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/",target:"_blank",rel:"noopener noreferrer"}},[s._v("转载:非商用-文章原地址"),n("OutboundLink")],1)]),s._v(" "),n("h1",{attrs:{id:"渲染器之patch"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#渲染器之patch"}},[s._v("#")]),s._v(" 渲染器之patch")]),s._v(" "),n("p",[s._v("在上一章中我们讲解并实现了渲染器的挂载逻辑，本质上就是将各种类型的 "),n("code",[s._v("VNode")]),s._v(" 渲染成真实DOM的过程。渲染器除了将全新的 "),n("code",[s._v("VNode")]),s._v(" 挂载成真实DOM之外，它的另外一个职责是负责对新旧 "),n("code",[s._v("VNode")]),s._v(" 进行比对，并以合适的方式更新DOM，也就是我们常说的 "),n("code",[s._v("patch")]),s._v("。本章内容除了让你了解基本的比对逻辑之外，还讲述了在新旧 "),n("code",[s._v("VNode")]),s._v(" 比对的过程中应该遵守怎样的原则，让我们开始吧！")]),s._v(" "),n("h2",{attrs:{id:"基本原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本原则"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E5%9F%BA%E6%9C%AC%E5%8E%9F%E5%88%99",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 基本原则")]),s._v(" "),n("p",[s._v("通常重渲染("),n("code",[s._v("re-render")]),s._v(")是由组件的更新开始的，因为在框架的使用层面开发者通过变更数据状态从而引起框架内部对UI的自动更新，但是组件的更新本质上还是对真实DOM的更新，或者说是对标签元素的更新，所以我们就优先来看一下如何更新一个标签元素。")]),s._v(" "),n("p",[s._v("我们首先回顾一下渲染器的代码，如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("vnode\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 没有旧的 VNode，使用 `mount` 函数挂载全新的 VNode")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将新的 VNode 添加到 container.vnode 属性下，这样下一次渲染时旧的 VNode 就存在了")]),s._v("\n      container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有旧的 VNode，则调用 `patch` 函数打补丁")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 container.vnode")]),s._v("\n      container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有旧的 VNode 但是没有新的 VNode，这说明应该移除 DOM，在浏览器中可以使用 removeChild 函数。")]),s._v("\n      container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("如上高亮的两句代码所示，当使用 "),n("code",[s._v("render")]),s._v(" 渲染器渲染一个全新的 "),n("code",[s._v("VNode")]),s._v(" 时，会调用 "),n("code",[s._v("mount")]),s._v(" 函数挂载该 "),n("code",[s._v("VNode")]),s._v("，同时让容器元素存储对该 "),n("code",[s._v("VNode")]),s._v(" 对象的引用，这样当再次调用渲染器渲染新的 "),n("code",[s._v("VNode")]),s._v(" 对象到相同的容器元素时，由于旧的 "),n("code",[s._v("VNode")]),s._v(" 已经存在，所以会调用 "),n("code",[s._v("patch")]),s._v(" 函数以合适的方式进行更新，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'span'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第一次渲染 VNode 到 #app，此时会调用 mount 函数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第二次渲染新的 VNode 到相同的 #app 元素，此时会调用 patch 函数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[n("code",[s._v("patch")]),s._v(" 函数会对新旧 "),n("code",[s._v("VNode")]),s._v(" 进行比对，也就是我们所说的 "),n("code",[s._v("diff")]),s._v("，那么不同的两个 "),n("code",[s._v("VNode")]),s._v(" 之间应该遵守怎样的比对规则呢？其实这个问题很容易回答，我们知道 "),n("code",[s._v("VNode")]),s._v(" 有类型之分，不同类型的 "),n("code",[s._v("VNode")]),s._v(" 之间存在一定的差异，所以不同的 "),n("code",[s._v("VNode")]),s._v(" 之间第一个比对原则就是："),n("strong",[s._v("只有相同类型的 "),n("code",[s._v("VNode")]),s._v(" 才有比对的意义")]),s._v("，例如我们有两个 "),n("code",[s._v("VNode")]),s._v("，其中一个 "),n("code",[s._v("VNode")]),s._v(" 的类型是标签元素，而另一个 "),n("code",[s._v("VNode")]),s._v(" 的类型是组件，当这两个 "),n("code",[s._v("VNode")]),s._v(" 进行比对时，最优的做法是"),n("strong",[s._v("使用新的 "),n("code",[s._v("VNode")]),s._v(" 完全替换旧的 "),n("code",[s._v("VNode")])]),s._v("，换句话说我们根本就没有做任何比对的操作，因为这完全没有意义，所以根据这个思想我们实现的 "),n("code",[s._v("patch")]),s._v(" 函数如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分别拿到新旧 VNode 的类型，即 flags")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flags\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flags\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 检查新旧 VNode 的类型是否相同，如果类型不同，则直接调用 replaceVNode 函数替换 VNode")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果新旧 VNode 的类型相同，则根据不同的类型调用不同的比对函数")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" nextFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ELEMENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMPONENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TEXT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FRAGMENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchFragment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PORTAL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchPortal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("如上代码所示，既然 "),n("code",[s._v("patch")]),s._v(" 函数的作用是用来比对新旧 "),n("code",[s._v("VNode")]),s._v("，那么 "),n("code",[s._v("patch")]),s._v(" 函数必然需要接收新旧 "),n("code",[s._v("VNode")]),s._v(" 作为参数，我们使用 "),n("code",[s._v("prevVNode")]),s._v(" 形参代表旧的 "),n("code",[s._v("VNode")]),s._v("，使用 "),n("code",[s._v("nextVNode")]),s._v(" 形参代表新的 "),n("code",[s._v("VNode")]),s._v("，如上是很清晰的一段比对逻辑，首先我们需要拿到新旧 "),n("code",[s._v("VNode")]),s._v(" 的类型("),n("code",[s._v("flags")]),s._v(")，接着是一连串的 "),n("code",[s._v("if...else if")]),s._v(" 语句，其核心原则是："),n("strong",[s._v("如果类型不同，则直接调用 "),n("code",[s._v("replaceVNode")]),s._v(" 函数使用新的 "),n("code",[s._v("VNode")]),s._v(" 替换旧的 "),n("code",[s._v("VNode")]),s._v("，否则根据不同的类型调用与之相符的比对函数")]),s._v("，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/flags-patch.6d43f459.png",alt:"img"}})]),s._v(" "),n("h2",{attrs:{id:"替换-vnode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#替换-vnode"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E6%9B%BF%E6%8D%A2-vnode",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 替换 VNode")]),s._v(" "),n("p",[s._v("我们首先来研究一下如何替换 "),n("code",[s._v("VNode")]),s._v("，即 "),n("code",[s._v("replaceVNode")]),s._v(" 函数应该做什么，我们先来复现需要替换 "),n("code",[s._v("VNode")]),s._v(" 的场景，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 VNode 是一个 div 标签")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'旧的 VNode'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyComponent")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'h1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'新的 VNode'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 VNode 是一个组件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MyComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先后渲染新旧 VNode 到 #app")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("在如上代码中，我们先后渲染了新旧 "),n("code",[s._v("VNode")]),s._v(" 到 "),n("code",[s._v("#app")]),s._v(" 元素，由于新旧 "),n("code",[s._v("VNode")]),s._v(" 具有不同的类型，所以此时会触发 "),n("code",[s._v("VNode")]),s._v(" 的替换操作，替换操作并不复杂，本质就是"),n("strong",[s._v("把旧的 "),n("code",[s._v("VNode")]),s._v(" 所渲染的DOM移除，再挂载新的 "),n("code",[s._v("VNode")])]),s._v("，如下是 "),n("code",[s._v("replaceVNode")]),s._v(" 函数的实现：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将旧的 VNode 所渲染的 DOM 从容器中移除")]),s._v("\n  container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 再把新的 VNode 挂载到容器中")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/jlxjk18vm5")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/jlxjk18vm5",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("看上去很简单，但实际上仅有这两行代码的话，是存在缺陷的。至于有何缺陷我们会在本章的后面讲解，因为目前我们的背景铺垫还不够。")]),s._v(" "),n("h2",{attrs:{id:"更新标签元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更新标签元素"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E6%9B%B4%E6%96%B0%E6%A0%87%E7%AD%BE%E5%85%83%E7%B4%A0",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 更新标签元素")]),s._v(" "),n("h3",{attrs:{id:"更新标签元素的基本原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更新标签元素的基本原则"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E6%9B%B4%E6%96%B0%E6%A0%87%E7%AD%BE%E5%85%83%E7%B4%A0%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E5%88%99",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 更新标签元素的基本原则")]),s._v(" "),n("p",[s._v("当新旧 "),n("code",[s._v("VNode")]),s._v(" 的类型不同时，会调用 "),n("code",[s._v("replaceVNode")]),s._v(" 函数直接使用新的 "),n("code",[s._v("VNode")]),s._v(" 替换旧的 "),n("code",[s._v("VNode")]),s._v("。但如果新旧 "),n("code",[s._v("VNode")]),s._v(" 的类型相同，则会根据不同的类型调用不同的比对函数，这一小节我们就来看看如何更新一个标签元素。")]),s._v(" "),n("p",[s._v("首先即使两个 "),n("code",[s._v("VNode")]),s._v(" 的类型同为标签元素，但它们也可能是不同的标签，也就是说它们的 "),n("code",[s._v("tag")]),s._v(" 属性值不尽相同。这就又引申出了一条更新原则："),n("strong",[s._v("我们认为不同的标签渲染的内容不同")]),s._v("，例如 "),n("code",[s._v("ul")]),s._v(" 标签下只能渲染 "),n("code",[s._v("li")]),s._v(" 标签，所以拿 "),n("code",[s._v("ul")]),s._v(" 标签和一个 "),n("code",[s._v("div")]),s._v(" 标签进行比对是没有任何意义的，这种情况下我们不会对旧的标签元素打补丁，而是使用新的标签元素替换旧的标签元素，这就需要用到我们前面讲过的 "),n("code",[s._v("replaceVNode")]),s._v(" 函数，如下 "),n("code",[s._v("patchElement")]),s._v(" 函数所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果新旧 VNode 描述的是不同的标签，则调用 replaceVNode 函数，使用新的 VNode 替换旧的 VNode")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("那么如果新旧 "),n("code",[s._v("VNode")]),s._v(" 描述的是相同的标签呢？如果标签相同，那两个 "),n("code",[s._v("VNode")]),s._v(" 之间的差异就只会出现在 "),n("code",[s._v("VNodeData")]),s._v(" 和 "),n("code",[s._v("children")]),s._v(" 上了，所以对于描述相同标签的两个 "),n("code",[s._v("VNode")]),s._v(" 之间的比对，本质上就是对 "),n("code",[s._v("VNodeData")]),s._v(" 和 "),n("code",[s._v("children")]),s._v(" 的比对，我们先来看一下如何更新 "),n("code",[s._v("VNodeData")]),s._v("，如下面两个 "),n("code",[s._v("VNode")]),s._v(" 所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  style"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    width"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    height"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    backgroundColor"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'red'")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  style"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    width"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    height"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    border"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1px solid green'")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("如上代码所示，新旧 "),n("code",[s._v("VNode")]),s._v(" 描述的都是 "),n("code",[s._v("div")]),s._v(" 标签，但是他们拥有不同的样式，旧的 "),n("code",[s._v("VNode")]),s._v(" 描述的是一个红色背景的 "),n("code",[s._v("div")]),s._v("，而新的 "),n("code",[s._v("VNode")]),s._v(" 描述的是拥有绿色边框的 "),n("code",[s._v("div")]),s._v("，如果仅针对这个案例而言，我们的更新规则应该是："),n("strong",[s._v("先将红色背景从元素上移除，再为元素添加绿色边框")]),s._v("。如果我们把问题的解决方案宏观化，就变成了："),n("strong",[s._v("将新的 VNodeData 全部应用到元素上，再把那些已经不存在于新的 "),n("code",[s._v("VNodeData")]),s._v(" 上的数据从元素上移除")]),s._v("，根据这个思想，我们为 "),n("code",[s._v("patchElement")]),s._v(" 函数增加如下高亮的代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果新旧 VNode 描述的是不同的标签，则调用 replaceVNode 函数，使用新的 VNode 替换旧的 VNode")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 拿到 el 元素，注意这时要让 nextVNode.el 也引用该元素")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 拿到 新旧 VNodeData")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevData "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextData "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 VNodeData 存在时才有必要更新")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历新的 VNodeData")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" key "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" nextData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据 key 拿到新旧 VNodeData 值")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'style'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历新 VNodeData 中的 style 数据，将新的样式应用到元素")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧 VNodeData 中的 style 数据，将已经不存在于新的 VNodeData 的数据移除")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" prevValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br")])]),n("p",[s._v("如上高亮代码所示，我们在更新 "),n("code",[s._v("VNodeData")]),s._v(" 时的思路分为以下几步：")]),s._v(" "),n("ul",[n("li",[s._v("第 1 步：当新的 "),n("code",[s._v("VNodeData")]),s._v(" 存在时，遍历新的 "),n("code",[s._v("VNodeData")]),s._v("。")]),s._v(" "),n("li",[s._v("第 2 步：根据新 "),n("code",[s._v("VNodeData")]),s._v(" 中的 "),n("code",[s._v("key")]),s._v("，分别尝试读取旧值和新值，即 "),n("code",[s._v("prevValue")]),s._v(" 和 "),n("code",[s._v("nextValue")]),s._v("。")]),s._v(" "),n("li",[s._v("第 3 步：使用 "),n("code",[s._v("switch...case")]),s._v(" 语句匹配不同的数据进行不同的更新操作")])]),s._v(" "),n("p",[s._v("以样式("),n("code",[s._v("style")]),s._v(")的更新为例，如上代码所展示的更新过程是：")]),s._v(" "),n("ul",[n("li",[s._v("1 ：遍历新的样式数据("),n("code",[s._v("prevValue")]),s._v(")，将新的样式数据全部应用到元素上")]),s._v(" "),n("li",[s._v("2 ：遍历旧的样式数据("),n("code",[s._v("nextValue")]),s._v(")，将那些已经不存在于新的样式数据中的样式从元素上移除，最终我们完成了元素样式的更新。")])]),s._v(" "),n("p",[s._v("这个过程实际上就是更新标签元素的基本规则。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/9l2mxjkw14")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/9l2mxjkw14",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"更新-vnodedata"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更新-vnodedata"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E6%9B%B4%E6%96%B0-vnodedata",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 更新 VNodeData")]),s._v(" "),n("p",[s._v("观察我们在 "),n("code",[s._v("patchElement")]),s._v(" 函数中用来更新样式的代码，大家有没有注意到似曾相识？没错，这段代码与 "),n("code",[s._v("mountElement")]),s._v(" 函数内用来处理 "),n("code",[s._v("VNodeData")]),s._v(" 的代码非常相似，这就指导我们封装一个函数用来统一处理 "),n("code",[s._v("VNodeData")]),s._v("，实际上无论是 "),n("code",[s._v("mountElement")]),s._v(" 函数中用来处理 "),n("code",[s._v("VNodeData")]),s._v(" 的代码还是 "),n("code",[s._v("patchElement")]),s._v(" 函数中用来处理 "),n("code",[s._v("VNodeData")]),s._v(" 的代码，它们的本质都是将 "),n("code",[s._v("VNodeData")]),s._v(" 中的数据应用到 DOM 元素上，唯一的区别就是在 "),n("code",[s._v("mountElement")]),s._v(" 函数中没有“旧”数据可言，而在 "),n("code",[s._v("patchElement")]),s._v(" 函数中既有旧数据也有新数据，所以我们完全可以封装一个叫做 "),n("code",[s._v("patchData")]),s._v(" 的函数，该函数接收新旧数据作为参数，对于 "),n("code",[s._v("mountElement")]),s._v(" 函数来讲，由于它没有旧数据可言，所以在调用 "),n("code",[s._v("patchData")]),s._v(" 函数时只需要传递 "),n("code",[s._v("null")]),s._v(" 作为旧数据即可。")]),s._v(" "),n("p",[s._v("我们先来使用 "),n("code",[s._v("patchData")]),s._v(" 函数修改 "),n("code",[s._v("patchElement")]),s._v(" 函数的代码，如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果新旧 VNode 描述的是不同的标签，则调用 replaceVNode 函数，使用新的 VNode 替换旧的 VNode")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 拿到 el 元素，注意这时要让 nextVNode.el 也引用该元素")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevData "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextData "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历新的 VNodeData，将旧值和新值都传递给 patchData 函数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" key "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" nextData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prevValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧的 VNodeData，将已经不存在于新的 VNodeData 中的数据移除")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" key "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" prevData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("nextData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第四个参数为 null，代表移除数据")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prevValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("如上高亮代码所示，使用 "),n("code",[s._v("patchData")]),s._v(" 函数改写之后的代码变得较之前简洁了许多，核心思想没有变，仍然是："),n("strong",[s._v("遍历新的 "),n("code",[s._v("VNodeData")]),s._v("，将旧值和新值都传递给 "),n("code",[s._v("patchData")]),s._v(" 函数，并由 "),n("code",[s._v("patchData")]),s._v(" 函数负责更新数据；同时也需要遍历旧的 "),n("code",[s._v("VNodeData")]),s._v("，将已经不存在于新的 "),n("code",[s._v("VNodeData")]),s._v(" 中的数据从元素上移除")]),s._v("，所以我们可以看到在遍历旧 "),n("code",[s._v("VNodeData")]),s._v(" 时如果没有旧数据，或者虽然有旧数据但旧数据已经不存在于新数据上了，这时我们传递给 "),n("code",[s._v("patchData")]),s._v(" 函数的第四个参数为 "),n("code",[s._v("null")]),s._v("，意味着将该数据从元素上移除。如下是 "),n("code",[s._v("patchData")]),s._v(" 函数的实现，本质就是把原来 "),n("code",[s._v("patchElement")]),s._v(" 函数中的 "),n("code",[s._v("switch")]),s._v(" 语句块移动到了 "),n("code",[s._v("patchData")]),s._v(" 函数中：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prevValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'style'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将新的样式数据应用到元素")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移除已经不存在的样式")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" prevValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[s._v("当然以上 "),n("code",[s._v("patchData")]),s._v(" 函数中的代码只包含对于样式("),n("code",[s._v("style")]),s._v(")数据的处理，实际上我们可以把上一章中 "),n("code",[s._v("mountElement")]),s._v(" 函数中完整的用来处理 "),n("code",[s._v("VNodeData")]),s._v(" 数据的代码拷贝到 "),n("code",[s._v("patchData")]),s._v(" 函数中，如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prevValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'style'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" prevValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'class'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("className "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextValue\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'o'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'n'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 事件")]),s._v("\n        el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("domPropsRE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当作 DOM Prop 处理")]),s._v("\n        el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextValue\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当作 Attr 处理")]),s._v("\n        el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setAttribute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("p",[s._v("这样 "),n("code",[s._v("patchData")]),s._v(" 函数就能够用来处理 "),n("code",[s._v("style")]),s._v("、"),n("code",[s._v("class")]),s._v("、"),n("code",[s._v("DOM Prop")]),s._v(" 以及 "),n("code",[s._v("Attr")]),s._v(" 的更新操作，并且可以同时满足 "),n("code",[s._v("mountElement")]),s._v(" 和 "),n("code",[s._v("patchElement")]),s._v(" 的需求。但 "),n("code",[s._v("patchData")]),s._v(" 函数还不能够满足事件的更新操作，因为当新的 "),n("code",[s._v("VNodeData")]),s._v(" 中已经不包含某个事件时，我们需要将旧的事件回调函数移除，解决办法很简单，如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prevValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'style'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略处理样式的代码...")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'class'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略处理 class 的代码...")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'o'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'n'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 事件")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移除旧事件")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prevValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 添加新事件")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("domPropsRE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当作 DOM Prop 处理")]),s._v("\n        el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextValue\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当作 Attr 处理")]),s._v("\n        el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setAttribute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("p",[s._v("如上高亮代码所示，如果旧的事件回调函数存在，我们先将其从 DOM 元素上移除，接着如果新的事件回调函数存在我们再将其添加到 DOM 元素中。至此我们的 "),n("code",[s._v("patchData")]),s._v(" 函数就算大功告成了。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/wk8pl46o18")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/wk8pl46o18",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"更新子节点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更新子节点"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E6%9B%B4%E6%96%B0%E5%AD%90%E8%8A%82%E7%82%B9",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 更新子节点")]),s._v(" "),n("p",[s._v("当 "),n("code",[s._v("VNodeData")]),s._v(" 更新完成之后，对于新旧两个标签来说，就剩下子节点的差异了，所以我们在 "),n("code",[s._v("patchElement")]),s._v(" 函数中最后一步需要做的事情就是递归地更新子节点，如下高亮的代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果新旧 VNode 描述的是不同的标签，则调用 replaceVNode 函数，使用新的 VNode 替换旧的 VNode")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 拿到 el 元素，注意这时要让 nextVNode.el 也引用该元素")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevData "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextData "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历新的 VNodeData，将旧值和新值都传递给 patchData 函数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" key "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" nextData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prevValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧的 VNodeData，将已经不存在于新的 VNodeData 中的数据移除")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" key "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" prevData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("nextData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第四个参数为 null，代表移除数据")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prevValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 patchChildren 函数递归地更新子节点")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 VNode 子节点的类型")]),s._v("\n    nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 VNode 子节点的类型")]),s._v("\n    prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 VNode 子节点")]),s._v("\n    nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 VNode 子节点")]),s._v("\n    el                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前标签元素，即这些子节点的父节点")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])]),n("p",[s._v("我们在 "),n("code",[s._v("patchElement")]),s._v(" 函数的最后调用了 "),n("code",[s._v("patchChildren")]),s._v(" 函数，"),n("code",[s._v("patchChildren")]),s._v(" 函数的作用就是对新旧 "),n("code",[s._v("VNode")]),s._v(" 的子节点进行"),n("strong",[s._v("同层级")]),s._v("的比较，它接收五个参数，前四个参数分别是新旧 "),n("code",[s._v("VNode")]),s._v(" 子节点以及子节点的类型，第五个参数 "),n("code",[s._v("el")]),s._v(" 是这些子节点的父节点，也就是当前被更新的标签元素。")]),s._v(" "),n("p",[s._v("在开始实现同层级子节点的更新之前，需要根据我们目前掌握的知识思考一下应该如何做，"),n("strong",[s._v("思路是能够写出代码的原因")]),s._v("。我们观察如下两个 "),n("code",[s._v("div")]),s._v(" 标签的子节点，我们用 "),n("code",[s._v("VNode")]),s._v(" 来表示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'span'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("如上代码所示， "),n("code",[s._v("prevVNode")]),s._v(" 所描述的 "),n("code",[s._v("div")]),s._v(" 标签只有一个子节点，所以 "),n("code",[s._v("prevVNode")]),s._v(" 的子节点类型应该是 "),n("code",[s._v("ChildrenFlags.SINGLE_VNODE")]),s._v("，而 "),n("code",[s._v("nextVNode")]),s._v(" 所描述的 "),n("code",[s._v("div")]),s._v(" 标签没有子节点，所以 "),n("code",[s._v("nextVNode")]),s._v(" 的子节点类型应该是 "),n("code",[s._v("ChildrenFlags.NO_CHILDREN")]),s._v("。如果单纯地看这个例子，我们应该如何更新呢？很简单，我们只需要把 "),n("code",[s._v("prevVNode")]),s._v(" 的子节点移除即可。再来看下面的两个 "),n("code",[s._v("VNode")]),s._v("：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'span'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("这个例子与之前的例子恰好相反，"),n("code",[s._v("prevVNode")]),s._v(" 没有子节点而 "),n("code",[s._v("nextVNode")]),s._v(" 有一个子节点，所以 "),n("code",[s._v("prevVNode")]),s._v(" 和 "),n("code",[s._v("nextVNode")]),s._v(" 的子节点的类型分别是 "),n("code",[s._v("ChildrenFlags.NO_CHILDREN")]),s._v(" 和 "),n("code",[s._v("ChildrenFlags.SINGLE_VNODE")]),s._v("，这时我们的更新操作也很简单，只需要把 "),n("code",[s._v("nextVNode")]),s._v(" 的子节点挂载到 "),n("code",[s._v("div")]),s._v(" 标签即可。再来看下面的例子：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'span'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("在这个例子中，新旧 "),n("code",[s._v("div")]),s._v(" 标签都有一个子节点，所以他们的子节点类型相同，这时子节点的更新操作就等价于两个子节点之间的 "),n("code",[s._v("patch")]),s._v("。")]),s._v(" "),n("p",[s._v("通过这些例子我们注意到，根据新旧标签的子节点的类型不同，我们可以轻松地找到合适的方式去更新它们，我们在讲解 "),n("code",[s._v("VNode")]),s._v(" 的种类时就曾经强调过，"),n("code",[s._v("VNode")]),s._v(" 的类型标识在 "),n("code",[s._v("patch")]),s._v(" 阶段是非常重要的信息，在这里就体现了出来。")]),s._v(" "),n("p",[s._v("但无论是新标签还是旧标签，该标签的子节点都可以分为三种情况：只有一个子节点、没有子节点 以及 有多个子节点。至于一个标签的子节点属于哪种类型是可以通过该标签所对应的 "),n("code",[s._v("VNode")]),s._v(" 对象的 "),n("code",[s._v("childFlags")]),s._v(" 属性得知的。最终在这个思路的引导下我们就可以编写出 "),n("code",[s._v("patchChildren")]),s._v(" 函数，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 children 是单个子节点，会执行该 case 语句块")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 也是单个子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中没有子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中有多个子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 children 中没有子节点时，会执行该 case 语句块")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 是单个子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中没有子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中有多个子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 children 中有多个子节点时，会执行该 case 语句块")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 是单个子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中没有子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中有多个子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br")])]),n("p",[s._v("如上代码所示，虽然看上去代码很长，但是很有规律，我们使用了嵌套的 "),n("code",[s._v("switch...case")]),s._v(" 语句，外层的 "),n("code",[s._v("switch...case")]),s._v(" 语句用来匹配旧的 "),n("code",[s._v("children")]),s._v(" 的类型，而内层的 "),n("code",[s._v("switch...case")]),s._v(" 语句则用来匹配新的 "),n("code",[s._v("children")]),s._v(" 的类型。由于新旧 "),n("code",[s._v("children")]),s._v(" 各有三种情况，所以合起来共有九种("),n("code",[s._v("3 * 3")]),s._v(")情况，根据不同的情况我们所做的操作也会不同。接下来我们逐个实现，当我们把这九种情况下的更新操作全部实现之后，我们的 "),n("code",[s._v("patchChildren")]),s._v(" 函数就大功告成了。")]),s._v(" "),n("p",[s._v("我们先来看一下当旧的 "),n("code",[s._v("children")]),s._v(" 类型为 "),n("code",[s._v("ChildrenFlags.SINGLE_VNODE")]),s._v(" 且新的 "),n("code",[s._v("children")]),s._v(" 类型也是 "),n("code",[s._v("ChildrenFlags.SINGLE_VNODE")]),s._v(" 的情况，即新旧 "),n("code",[s._v("children")]),s._v(" 都是单个子节点，我们上面提到过，在这种情况下新旧 "),n("code",[s._v("children")]),s._v(" 的比较等价于两个 "),n("code",[s._v("children(单个子节点)")]),s._v("之间的比较，所以只需要递归地调用 "),n("code",[s._v("patch")]),s._v(" 函数即可，如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时 prevChildren 和 nextChildren 都是 VNode 对象")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中没有子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中有多个子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("如上高亮代码所示，只需一行代码即可搞定，我们编写一个案例来测试我们的代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    style"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      height"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      width"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      background"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'red'")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    style"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      height"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      width"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      background"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'green'")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2秒后更新")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("p",[s._v("如上代码所示，新旧 "),n("code",[s._v("VNode")]),s._v(" 描述的都是只有一个 "),n("code",[s._v("p")]),s._v(" 标签作为子节点的 "),n("code",[s._v("div")]),s._v(" 标签，所以新旧 "),n("code",[s._v("div")]),s._v(" 标签的 "),n("code",[s._v("children")]),s._v(" 类型都是单个子节点，只不过这两个 "),n("code",[s._v("p")]),s._v(" 标签拥有不同的背景颜色，然后我们先后调用 "),n("code",[s._v("render")]),s._v(" 渲染器渲染了这两个 "),n("code",[s._v("VNode")]),s._v("，最终效果是 "),n("code",[s._v("p")]),s._v(" 标签的背景色被正确地更新了。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/m3oqr3knq9")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/m3oqr3knq9",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("接着我们来看一下当旧的 "),n("code",[s._v("children")]),s._v(" 类型为 "),n("code",[s._v("ChildrenFlags.SINGLE_VNODE")]),s._v("，而新的 "),n("code",[s._v("children")]),s._v(" 类型为 "),n("code",[s._v("ChildrenFlags.NO_CHILDREN")]),s._v(" 时的情况，也就是说旧的 "),n("code",[s._v("children")]),s._v(" 是单个子节点，而新的 "),n("code",[s._v("children")]),s._v(" 为 "),n("code",[s._v("null")]),s._v("，即新的 "),n("code",[s._v("VNode")]),s._v(" 没有子节点。在这种情况下我们只需要把旧的子节点移除即可，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 children 是单个子节点，会执行该 case 语句块")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 也是单个子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中没有子节点时，会执行该 case 语句块")]),s._v("\n          container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中有多个子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("p",[s._v("如上高亮代码所示，"),n("code",[s._v("container")]),s._v(" 是父级元素，我们调用父级元素的 "),n("code",[s._v("removeChild")]),s._v(" 方法将之前渲染好的 "),n("code",[s._v("prevChildren.el")]),s._v(" 移除即可，同样只使用了一行代码就实现了功能。不过可能很多同学已经发现了这么做的问题所在，假如 "),n("code",[s._v("prevChildren")]),s._v(" 的类型是一个片段的话，那么它可能渲染多个元素到容器中，所以我们需要对片段类型的 "),n("code",[s._v("VNode")]),s._v(" 额外处理。但本质不变："),n("strong",[s._v("想办法把已经渲染好了的 DOM 元素从页面上移除")]),s._v("。")]),s._v(" "),n("p",[s._v("最后我们使用如下例子测试我们的代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    style"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      height"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      width"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      background"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'red'")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2秒后更新")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("上例中 "),n("code",[s._v("prevVNode")]),s._v(" 描述的是：以一个红色背景的 "),n("code",[s._v("p")]),s._v(" 标签作为子节点的 "),n("code",[s._v("div")]),s._v(" 标签，而 "),n("code",[s._v("nextVNode")]),s._v(" 是一个没有子节点的 "),n("code",[s._v("div")]),s._v(" 标签，接着我们先后渲染了旧的和新的 "),n("code",[s._v("VNode")]),s._v("，最终效果是 "),n("code",[s._v("p")]),s._v(" 标签被移除了。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/3roo60w1kp")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/3roo60w1kp",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("接着我们再来看一下当旧的 "),n("code",[s._v("children")]),s._v(" 类型为 "),n("code",[s._v("ChildrenFlags.SINGLE_VNODE")]),s._v("，而新的 "),n("code",[s._v("children")]),s._v(" 类型为多个子节点时的情况，在这种情况下由于旧的子节点只有一个，而新的子节点有多个，所以我们可以采用"),n("strong",[s._v("将旧的单个子节点移除，再将新的多个子节点挂载上去")]),s._v("的方案，在这个思路下我们可以做出如下实现，修改我们的 "),n("code",[s._v("patchChildren")]),s._v(" 函数：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 children 是单个子节点，会执行该 case 语句块")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移除旧的单个子节点")]),s._v("\n          container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历新的多个子节点，逐个挂载到容器中")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("如上高亮代码所示，实现起来也非常简单，我们使用了与之前一样的方法将旧的单个子节点移除，然后遍历新的多个子节点，并调用 "),n("code",[s._v("mount")]),s._v(" 函数逐个将之挂载到容器中。我们可以使用下面的例子测试我们的代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'只有一个子节点'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'子节点 1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'子节点 2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2秒后更新")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("如上代码所示，旧的 "),n("code",[s._v("VNode")]),s._v(" 是一个只有一个子节点的 "),n("code",[s._v("div")]),s._v(" 标签，而新的 "),n("code",[s._v("VNode")]),s._v(" 是一个拥有多个子节点的 "),n("code",[s._v("div")]),s._v(" 标签。最终的效果是旧的单个子节点被移除，新的多个子节点全都被添加上去。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/lpm17161m")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/lpm17161m",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("以上我们讲解并实现了当旧的 "),n("code",[s._v("children")]),s._v(" 类型为单个子节点时，所有情况下的更新操作，可以用一张图来总结，如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/patch-children-1.39272592.png",alt:"img"}})]),s._v(" "),n("p",[s._v("类似的，当旧的 "),n("code",[s._v("children")]),s._v(" 类型为 "),n("code",[s._v("ChildrenFlags.NO_CHILDREN")]),s._v("，即没有子节点时，新的 "),n("code",[s._v("children")]),s._v(" 依然可能有三种情况，我们也可以用一张图来表示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/patch-children-2.31ddc8a6.png",alt:"img"}})]),s._v(" "),n("p",[s._v("我们来解释一下上图的操作：")]),s._v(" "),n("ul",[n("li",[s._v("情况一：没有旧的子节点、新的子节点为单个子节点，此时只需要把新的单个子节点添加到容器元素即可。")]),s._v(" "),n("li",[s._v("情况二：没有旧的子节点、同时也没有新的子节点，那自然什么都不用做了。")]),s._v(" "),n("li",[s._v("情况三：没有旧的子节点、但有多个新的子节点，那把这多个子节点都添加到容器元素即可。")])]),s._v(" "),n("p",[s._v("基于此，我们可以轻松编写出对应的逻辑，如下 "),n("code",[s._v("patchChildren")]),s._v(" 函数所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 children 中没有子节点时，会执行该 case 语句块")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 是单个子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用 mount 函数将新的子节点挂载到容器元素")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中没有子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 什么都不做")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中有多个子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历多个新的子节点，逐个使用 mount 函数挂载到容器元素")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br")])]),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/62x41myyrz")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/62x41myyrz",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("现在对于旧的 "),n("code",[s._v("children")]),s._v(" 类型来说，我们只剩下最后一种情况没有处理了，就是当旧的 "),n("code",[s._v("children")]),s._v(" 类型为多个子节点时，同样的我们来画一张图：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/patch-children-3.06453ea2.png",alt:"img"}})]),s._v(" "),n("p",[s._v("如上图所示，当旧的 "),n("code",[s._v("children")]),s._v(" 类型为多个子节点时，新的 "),n("code",[s._v("children")]),s._v(" 类型有三种情况，不同的情况采用不同的操作：")]),s._v(" "),n("ul",[n("li",[s._v("情况一：有多个旧的子节点，但新的子节点是单个子节点，这时只需要把所有旧的子节点移除，再将新的单个子节点添加到容器元素即可。")]),s._v(" "),n("li",[s._v("情况二：有多个旧的子节点，但没有新的子节点，这时只需要把所有旧的子节点移除即可。")]),s._v(" "),n("li",[s._v("情况三：新旧子节点都是多个子节点，这时将进入到至关重要的一步，即核心 "),n("code",[s._v("diff")]),s._v(" 算法的用武之地。")])]),s._v(" "),n("p",[s._v("实际上在整个新旧 "),n("code",[s._v("children")]),s._v(" 的比对中，只有当新旧子节点都是多个子节点时才有必要进行真正的核心 "),n("code",[s._v("diff")]),s._v("，从而尽可能的复用子节点。")]),s._v(" "),n("p",[s._v("对于"),n("strong",[s._v("情况一")]),s._v("和"),n("strong",[s._v("情况二")]),s._v("而言，实现起来相当容易，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中有多个子节点时，会执行该 case 语句块")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("p",[s._v("如上高亮代码所示，对于新的 "),n("code",[s._v("children")]),s._v(" 为单个子节点的情况，我们遍历旧的子节点逐个将之从容器元素中移除，并调用 "),n("code",[s._v("mount")]),s._v(" 函数将新的子节点挂载到容器元素中，对于新的 "),n("code",[s._v("children")]),s._v(" 为没有子节点的情况，我们则直接遍历旧的子节点将其全部从容器元素中移除即可。实际上整个 "),n("code",[s._v("children")]),s._v(" 的 "),n("code",[s._v("patch")]),s._v(" 过程中，最复杂的当属最后一种情况："),n("strong",[s._v("新旧子节点都是多个子节点的情况")]),s._v("，之所以在这种情况下更新操作会变的复杂，是因为我们对“自己”的要求较高，因为假设按照之前的思路我们完全可以采用 "),n("strong",[s._v("“将旧的子节点全部移除，再将所有新的子节点添加”")]),s._v(" 的思路来完成更新，这样事情就会简单许多，不过虽然这么做可以实现最终的目的，但所有 DOM 的更新都毫无复用可言。限于本章的篇幅我们暂时采用简单的办法完成子节点的更新，对于真正的核心 "),n("code",[s._v("diff")]),s._v(" 算法我们将会在下一章统一着重讲解，简化版本的实现如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 children 中有多个子节点时，会执行该 case 语句块")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧的子节点，将其全部移除")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历新的子节点，将其全部添加")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br")])]),n("p",[s._v("如上高亮代码所示，我们先遍历旧的子节点，将其全部从容器元素中移除。然后再遍历新的子节点，并将其全部添加到容器元素中。这样我们就完成了更新的操作，但这里再次强调：我们这么做是限于篇幅，同时为了方便后续案例代码的编写，在下一章中我们将着重讲解"),n("strong",[s._v("当新旧子节点都是多个子节点时，应该如何尽可能的复用子节点")]),s._v("。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/ym6k442lmj")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/ym6k442lmj",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"更新文本节点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更新文本节点"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E6%9B%B4%E6%96%B0%E6%96%87%E6%9C%AC%E8%8A%82%E7%82%B9",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 更新文本节点")]),s._v(" "),n("p",[s._v("我们花了很大的篇幅讲解了标签元素的更新，实际上标签元素的确是 DOM 更新中的主要操作，接下来我们讲解一下文本节点的更新。如果新旧两个 "),n("code",[s._v("VNode")]),s._v(" 的类型都是纯文本类型，那么在 "),n("code",[s._v("patch")]),s._v(" 内部会调用 "),n("code",[s._v("patchText")]),s._v(" 函数更新旧的文本节点。文本节点的更新非常简单，如果一个 DOM 元素是文本节点或注释节点，那么可以通过调用该 DOM 对象的 "),n("code",[s._v("nodeValue")]),s._v(" 属性读取或设置文本节点(或注释节点)的内容，例如：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个文本节点")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" textEl "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createTextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\ntextEl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nodeValue  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'a'")]),s._v("\n\ntextEl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nodeValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),s._v("\n\ntextEl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nodeValue  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'b'")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("利用这一点我们就可以轻松实现对于文本元素的更新，如下是 "),n("code",[s._v("patchText")]),s._v(" 函数的实现：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 拿到文本元素 el，同时让 nextVNode.el 指向该文本元素")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只有当新旧文本内容不一致时才有必要更新")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nodeValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[n("code",[s._v("patchText")]),s._v(" 函数接收新旧 "),n("code",[s._v("VNode")]),s._v(" 作为参数，首先我们需要通过旧的 "),n("code",[s._v("prevVNode.el")]),s._v(" 属性拿到已经渲染在页面上的文本节点元素，并让 "),n("code",[s._v("nextVNode.el")]),s._v(" 指向它。接着由于对纯文本类型的 "),n("code",[s._v("VNode")]),s._v(" 而言，它的 "),n("code",[s._v("children")]),s._v(" 属性存储的就是其文本内容，所以通过对比新旧文本内容是否一致来决定是否需要更新，只有新旧文本内容不一致时我们才会设置文本节点的 "),n("code",[s._v("el.nodeValue")]),s._v(" 属性的值，从而完成文本节点的更新。")]),s._v(" "),n("p",[s._v("我们可以使用如下例子测试我们的代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'旧文本'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'新文本'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2秒后更新")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("我们先后创建了两个带有文本子节点的 "),n("code",[s._v("p")]),s._v(" 标签，并调用 "),n("code",[s._v("render")]),s._v(" 渲染器渲染了旧的 "),n("code",[s._v("VNode")]),s._v(" 以及新的 "),n("code",[s._v("VNode")]),s._v("。最终效果是两秒之后文本被更新了。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/73zzzv9xn6")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/73zzzv9xn6",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"更新-fragment"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更新-fragment"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E6%9B%B4%E6%96%B0-fragment",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 更新 Fragment")]),s._v(" "),n("p",[s._v("如果两个 "),n("code",[s._v("VNode")]),s._v(" 的类型都是片段，则 "),n("code",[s._v("patch")]),s._v(" 函数会调用 "),n("code",[s._v("patchFragment")]),s._v(" 函数更新片段的内容。实际上"),n("strong",[s._v("片段的更新是简化版的标签元素的更新")]),s._v("，我们知道对于标签元素来说更新的过程分为两个步骤：首先需要更新标签本身的 "),n("code",[s._v("VNodeData")]),s._v("，其次更新其子节点。然而由于 "),n("code",[s._v("Fragment")]),s._v(" 没有包裹元素，只有子节点，所以我们对 "),n("code",[s._v("Fragment")]),s._v(" 的更新本质上就是更新两个片段的“子节点”。")]),s._v(" "),n("p",[s._v("如下是 "),n("code",[s._v("patchFragment")]),s._v(" 函数的实现：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchFragment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 直接调用 patchChildren 函数更新 新旧片段的子节点即可")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧片段的子节点类型")]),s._v("\n    nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新片段的子节点类型")]),s._v("\n    prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧片段的子节点")]),s._v("\n    nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新片段的子节点")]),s._v("\n    container\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("如上代码所示，我们直接调用 "),n("code",[s._v("patchChildren")]),s._v(" 函数更新新旧片段的子节点即可，但是不要忘记更新 "),n("code",[s._v("nextVNode.el")]),s._v(" 属性，就像我们当初实现 "),n("code",[s._v("mountFragment")]),s._v(" 时一样，根据子节点的类型不同，"),n("code",[s._v("VNode")]),s._v(" 所引用的元素也不同，我们为 "),n("code",[s._v("patchFragment")]),s._v(" 添加如下代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchFragment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 直接调用 patchChildren 函数更新 新旧片段的子节点即可")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧片段的子节点类型")]),s._v("\n    nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新片段的子节点类型")]),s._v("\n    prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧片段的子节点")]),s._v("\n    nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新片段的子节点")]),s._v("\n    container\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("如上高亮代码所示，我们通过检查新的片段的 "),n("code",[s._v("children")]),s._v(" 类型，如果新的片段的 "),n("code",[s._v("children")]),s._v(" 类型是单个子节点，则意味着其 "),n("code",[s._v("vnode.children")]),s._v(" 属性的值就是 "),n("code",[s._v("VNode")]),s._v(" 对象，所以直接将 "),n("code",[s._v("nextVNode.children.el")]),s._v(" 赋值给 "),n("code",[s._v("nextVNode.el")]),s._v(" 即可。如果新的片段没有子节点，我们知道对于没有子节点的片段我们会使用一个空的文本节点占位，而 "),n("code",[s._v("prevVNode.el")]),s._v(" 属性引用的就是该空文本节点，所以我们直接通过旧片段的 "),n("code",[s._v("prevVNode.el")]),s._v(" 拿到该空文本元素并赋值给新片段的 "),n("code",[s._v("nextVNode.el")]),s._v(" 即可。如果新的片段的类型是多个子节点，则 "),n("code",[s._v("nextVNode.children")]),s._v(" 是一个 "),n("code",[s._v("VNode")]),s._v(" 数组，我们会让新片段的 "),n("code",[s._v("nextVNode.el")]),s._v(" 属性引用数组中的第一个元素。实际上这段逻辑与我们在 "),n("code",[s._v("mountFragment")]),s._v(" 函数中所实现的逻辑是一致的。")]),s._v(" "),n("p",[s._v("我们可以使用下面的例子测试我们的代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Fragment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'旧片段子节点 1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'旧片段子节点 2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Fragment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'新片段子节点 1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'新片段子节点 2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2秒后更新")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[s._v("如上这段代码中我们创建了旧的和新的两个片段，并先后使用渲染器进行渲染，结果是片段得到了正确的更新。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/1r9k5y1ozq")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/1r9k5y1ozq",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"更新-portal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更新-portal"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E6%9B%B4%E6%96%B0-portal",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 更新 Portal")]),s._v(" "),n("p",[s._v("如果两个 "),n("code",[s._v("VNode")]),s._v(" 的类型都是 "),n("code",[s._v("Portal")]),s._v("，那么 "),n("code",[s._v("patch")]),s._v(" 函数内部会调用 "),n("code",[s._v("patchPortal")]),s._v(" 函数进行更新。我们在“渲染器之挂载”一章中曾做出一个不严谨但很直观的比喻：可以把 "),n("code",[s._v("Portal")]),s._v(" 当作可以到处挂载的 "),n("code",[s._v("Fragment")]),s._v("。实际上 "),n("code",[s._v("Portal")]),s._v(" 的更新与 "),n("code",[s._v("Fragment")]),s._v(" 类似，我们需要更新其子节点，但由于 "),n("code",[s._v("Portal")]),s._v(" 可以被到处挂载，所以新旧 "),n("code",[s._v("Portal")]),s._v(" 的挂载目标可能不同，所以对于 "),n("code",[s._v("Portal")]),s._v(" 的更新除了要更新其子节点之外，还要对比新旧挂载目标是否相同，如果新的 "),n("code",[s._v("Portal")]),s._v(" 的挂载目标变了我们就需要将 "),n("code",[s._v("Portal")]),s._v(" 的内容从旧的容器中搬运到新的容器中。我们首先来更新 "),n("code",[s._v("Portal")]),s._v(" 的子节点，如下代码所示，与更新 "),n("code",[s._v("Fragment")]),s._v(" 的子节点相同：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchPortal")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注意容器元素是旧的 container")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 让 nextVNode.el 指向 prevVNode.el")]),s._v("\n  nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("如上代码所示，我们首先调用 "),n("code",[s._v("patchChildren")]),s._v(" 函数更新 "),n("code",[s._v("Portal")]),s._v(" 的子节点，其中需要注意的是 "),n("code",[s._v("patchChildren")]),s._v(" 的第五个参数是旧的挂载容器，也就是说即使新的 "),n("code",[s._v("Portal")]),s._v(" 的挂载目标变了，但是在这一步的更新完成之后 "),n("code",[s._v("Portal")]),s._v(" 的内容仍然存在于旧的容器中。接着我们将 "),n("code",[s._v("prevVNode.el")]),s._v(" 赋值给 "),n("code",[s._v("nextVNode.el")]),s._v("，这一步要比 "),n("code",[s._v("Fragment")]),s._v(" 容易的多，因为我们知道对于 "),n("code",[s._v("Portal")]),s._v(" 类型的 "),n("code",[s._v("VNode")]),s._v(" 来说其 "),n("code",[s._v("el")]),s._v(" 属性始终是一个占位的文本节点。")]),s._v(" "),n("p",[s._v("在如上这些工作完成之后，我们要思考的问题就是挂载目标了，由于新旧 "),n("code",[s._v("Portal")]),s._v(" 的挂载目标可能是不同的，例如：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 挂载目标是 id="box1" 的元素')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevPortal "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Portal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" target"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'#box1'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 挂载目标是 id="box2" 的元素')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextPortal "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Portal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" target"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'#box2'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("可以看到，旧的 "),n("code",[s._v("Portal")]),s._v(" 的挂载目标是 "),n("code",[s._v('id="box1"')]),s._v(" 的容器元素，而新的 "),n("code",[s._v("Portal")]),s._v(" 的挂载目标是 "),n("code",[s._v('id="box2"')]),s._v(" 的容器元素。但是由于我们在更新子节点的过程中，传递给 "),n("code",[s._v("patchChildren")]),s._v(" 函数的容器元素始终都是旧的容器元素，所以最终结果是："),n("strong",[s._v("更新后的子节点也存在于旧的容器中")]),s._v("，所以我们还需要做最后一步工作，就是"),n("strong",[s._v("把旧容器内的元素都搬运到新容器中")]),s._v("，我们给 "),n("code",[s._v("patchPortal")]),s._v(" 函数增加如下代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchPortal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注意 container 是旧的 container")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 让 nextVNode.el 指向 prevVNode.el")]),s._v("\n  nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果新旧容器不同，才需要搬运")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取新的容器元素，即挂载目标")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" container "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'string'")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("querySelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果新的 Portal 是单个子节点，就把该节点搬运到新容器中")]),s._v("\n        container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 Portal 没有子节点，不需要搬运")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果新的 Portal 是多个子节点，遍历逐个将它们搬运到新容器中")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br")])]),n("p",[s._v("如上高亮代码所示，我们通过 "),n("code",[s._v("nextVNode.tag !== prevVNode.tag")]),s._v(" 来判断新旧 "),n("code",[s._v("Portal")]),s._v(" 的容器是否相同，只有容器不同的情况下才需要搬运工作。搬运的原理是什么呢？我们知道当我们调用 "),n("code",[s._v("appendChild")]),s._v(" 方法向 DOM 中添加元素时，如果被添加的元素已存在于页面上，那么就会移动该元素到目标容器元素下。我们利用这一点，由于经过 "),n("code",[s._v("patchChildren")]),s._v(" 函数的处理之后，新的子节点已经存在于旧的容器中了，所以我们只需要在新容器元素上调用 "),n("code",[s._v("appendChild")]),s._v(" 方法将这些已经存在于旧容器中的子节点搬运过去即可。")]),s._v(" "),n("p",[s._v("当然了，在搬运的过程中，我们要检查新的 "),n("code",[s._v("Portal")]),s._v(" 的子节点类型，并采用合适的处理方式。我们可以使用如下例子测试我们的代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  Portal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" target"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'#old-container'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'旧的 Portal'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  Portal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" target"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'#new-container'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'新的 Portal'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2秒后更新")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("如上代码所示，在这个例子中 "),n("code",[s._v("prevVNode")]),s._v(" 和 "),n("code",[s._v("nextVNode")]),s._v(" 的类型都是 "),n("code",[s._v("Portal")]),s._v("，并且新旧 "),n("code",[s._v("Portal")]),s._v(" 的挂载目标不同，分别是 "),n("code",[s._v("#old-container")]),s._v(" 和 "),n("code",[s._v("#new-container")]),s._v("，如下是完整的代码和在线体验地址。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/xj118zm82o")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/xj118zm82o",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"有状态组件的更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#有状态组件的更新"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E6%9C%89%E7%8A%B6%E6%80%81%E7%BB%84%E4%BB%B6%E7%9A%84%E6%9B%B4%E6%96%B0",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 有状态组件的更新")]),s._v(" "),n("p",[s._v("接下来我们要介绍的就是有状态组件的更新，首先我们需要思考的问题是：在什么情况下才会触发有状态组件的更新呢？实际上对于有状态组件来说它的更新方式有两种："),n("strong",[s._v("主动更新")]),s._v(" 和 "),n("strong",[s._v("被动更新")]),s._v("。")]),s._v(" "),n("p",[s._v("什么是"),n("strong",[s._v("主动更新")]),s._v("呢？所谓主动更新指的是组件自身的状态发生变化所导致的更新，例如组件的 "),n("code",[s._v("data")]),s._v(" 数据发生了变化就必然需要重渲染。但是大家不要忘记：一个组件所渲染的内容是很可能包含其它组件的，也就是子组件，对于子组件来讲，它除了自身状态之外，很可能还包含从父组件传递进来的外部状态("),n("code",[s._v("props")]),s._v(")，所以父组件自身状态的变化很可能引起子组件外部状态的变化，此时就需要更新子组件，像这种因为外部状态变化而导致的组件更新就叫做"),n("strong",[s._v("被动更新")]),s._v("。")]),s._v(" "),n("h3",{attrs:{id:"主动更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#主动更新"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E4%B8%BB%E5%8A%A8%E6%9B%B4%E6%96%B0",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 主动更新")]),s._v(" "),n("p",[s._v("我们先来讨论组件的主动更新，我们知道组件的核心是渲染函数，渲染函数会产出 "),n("code",[s._v("VNode")]),s._v("，渲染器会将渲染函数产出的 "),n("code",[s._v("VNode")]),s._v(" 渲染为真实 DOM，当组件的状态变化时我们需要做的就是重新执行渲染函数并产出新的 "),n("code",[s._v("VNode")]),s._v("，最后通过新旧 "),n("code",[s._v("VNode")]),s._v(" 之间的补丁算法完成真实 DOM 的更新。这里的关键点在于"),n("strong",[s._v("数据变化之后需要重新执行渲染函数，得到新的 VNode")]),s._v("，我们来回顾一下前面章节中讲解过的用于挂载有状态组件的 "),n("code",[s._v("mountStatefulComponent")]),s._v(" 函数：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountStatefulComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建组件实例")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 渲染VNode")]),s._v("\n  instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// el 属性值 和 组件实例的 $el 属性都引用组件的根DOM元素")]),s._v("\n  instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("组件挂载的核心步骤分为三步：1、创建组件实例，2、调用组件的 "),n("code",[s._v("render")]),s._v(" 获得 "),n("code",[s._v("VNode")]),s._v("，3、将 "),n("code",[s._v("VNode")]),s._v(" 挂载到容器元素。实际上我们可以把除了创建组件实例这一步之外的代码封装成一个函数，如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountStatefulComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建组件实例")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("_update")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1、渲染VNode")]),s._v("\n    instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2、挂载")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4、el 属性值 和 组件实例的 $el 属性都引用组件的根DOM元素")]),s._v("\n    instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("_update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("如上代码所示，在 "),n("code",[s._v("mountStatefulComponent")]),s._v(" 函数内部，我们将除了创建组件实例之外的所有工作封装到了组件实例对象的 "),n("code",[s._v("instance._update")]),s._v(" 函数中，紧接着在 "),n("code",[s._v("mountStatefulComponent")]),s._v(" 函数的最后立即调用了 "),n("code",[s._v("_update")]),s._v(" 函数，我们为什么要这么做呢？实际上 "),n("code",[s._v("_update")]),s._v(" 函数所做的工作就是渲染组件，这样当组件自身状态发生变化后，我们就可以再次调用 "),n("code",[s._v("_update")]),s._v(" 函数来完成组件的更新。")]),s._v(" "),n("p",[s._v("假设我们有 "),n("code",[s._v("MyComponent")]),s._v(" 组件，如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyComponent")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自身状态 or 本地状态")]),s._v("\n  localState "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'one'")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// mounted 钩子")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mounted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 两秒钟之后修改本地状态的值，并重新调用 _update() 函数更新组件")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("localState "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'two'")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("_update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("localState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("如上组件所示，该组件拥有一个叫做 "),n("code",[s._v("localState")]),s._v(" 的数据，并且 "),n("code",[s._v("render")]),s._v(" 函数中使用到了该数据。接着我们在组件的 "),n("code",[s._v("mounted")]),s._v(" 钩子函数中设置了一个定时器，两秒钟之后会修改自身状态 "),n("code",[s._v("localState")]),s._v(" 的值，由于我们目前没有讲解响应系统，所以我们暂时需要手动调用 "),n("code",[s._v("_update")]),s._v(" 函数来完成组件的更新，等到后面响应系统相关的章节中我们再来详细讲解如何完成自动更新。另外在如上组件中我们使用了 "),n("code",[s._v("mounted")]),s._v(" 生命周期钩子，但是就我们目前所实现的 "),n("code",[s._v("mountStatefulComponent")]),s._v(" 函数而言，它并没有调用组件的任何生命周期函数的能力，为了代码的正常运行，我们需要为 "),n("code",[s._v("mountStatefulComponent")]),s._v(" 函数添加执行 "),n("code",[s._v("mounted")]),s._v(" 回调的能力，很简单我们只需要在组件被渲染为真实 DOM 之后调用该组件实例的 "),n("code",[s._v("mounted")]),s._v(" 函数即可，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountStatefulComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建组件实例")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("_update")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1、渲染VNode")]),s._v("\n    instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2、挂载")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4、el 属性值 和 组件实例的 $el 属性都引用组件的根DOM元素")]),s._v("\n    instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5、调用 mounted 钩子")]),s._v("\n    instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mounted "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mounted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("_update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("这样当我们使用 "),n("code",[s._v("mountStatefulComponent")]),s._v(" 函数挂载有状态组件时，如果组件提供了 "),n("code",[s._v("mounted")]),s._v(" 方法，那么该方法就会被当作钩子函数调用，更多的关于生命周期钩子函数的内容我们暂且不做深入讨论，我们还是回到组件更新的问题上。现在 "),n("code",[s._v("MyComponent")]),s._v(" 组件的 "),n("code",[s._v("mounted")]),s._v(" 钩子函数已经可以被正确执行，我们在 "),n("code",[s._v("mounted")]),s._v(" 钩子函数内修改了组件的自身状态的值并再次调用了 "),n("code",[s._v("_update")]),s._v(" 函数进行组件的更新，但是在更新时我们不应该像初次挂载组件那样去调用 "),n("code",[s._v("mount")]),s._v(" 函数，而是应该调用 "),n("code",[s._v("patch")]),s._v(" 函数将组件新产出的 "),n("code",[s._v("VNode")]),s._v(" 与初次挂载时产出的旧 "),n("code",[s._v("VNode")]),s._v(" 做比较并完成更新，但无论是初次挂载还是后续更新我们调用的都是 "),n("code",[s._v("_update")]),s._v(" 函数，可是 "),n("code",[s._v("_update")]),s._v(" 函数怎么知道当前这次渲染到底是初次挂载还是后续更新呢？所以我们需要为组件实例设计一个 "),n("code",[s._v("boolean")]),s._v(" 类型的状态标识，用来标记组件是否已经被挂载，这样 "),n("code",[s._v("_update")]),s._v(" 函数就能够区分当前这次渲染到底是初次挂载还是后续更新了，如下是我们修改之后的 "),n("code",[s._v("mountStatefulComponent")]),s._v(" 函数的代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountStatefulComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建组件实例")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("_update")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 instance._mounted 为真，说明组件已挂载，应该执行更新操作")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_mounted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1、拿到旧的 VNode")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2、重渲染新的 VNode")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3、patch 更新")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parentNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4、更新 vnode.el 和 $el")]),s._v("\n      instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1、渲染VNode")]),s._v("\n      instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2、挂载")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3、组件已挂载的标识")]),s._v("\n      instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_mounted "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4、el 属性值 和 组件实例的 $el 属性都引用组件的根DOM元素")]),s._v("\n      instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5、调用 mounted 钩子")]),s._v("\n      instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mounted "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mounted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("_update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("如上代码所示，我们通过一个 "),n("code",[s._v("if...else")]),s._v(" 语句判断组件实例的 "),n("code",[s._v("instance._mounted")]),s._v(" 属性值的真假，来判断应该执行初次挂载操作还是更新操作。"),n("code",[s._v("if")]),s._v(" 语句块内的代码用于执行更新操作，大致分为四个步骤：")]),s._v(" "),n("ul",[n("li",[s._v("1、取得旧的 "),n("code",[s._v("VNode")]),s._v("，由于初次挂载组件时所产出的 "),n("code",[s._v("VNode")]),s._v(" 存储在组件实例的 "),n("code",[s._v("$vnode")]),s._v(" 属性中，所以我们可以通过 "),n("code",[s._v("$vnode")]),s._v(" 属性拿到旧的 "),n("code",[s._v("VNode")]),s._v("。")]),s._v(" "),n("li",[s._v("2、重新调用 "),n("code",[s._v("render")]),s._v(" 函数产出新的 "),n("code",[s._v("VNode")]),s._v("。")]),s._v(" "),n("li",[s._v("3、调用 "),n("code",[s._v("patch")]),s._v(" 函数对比新旧 "),n("code",[s._v("VNode")]),s._v("，完成更新操作。")])]),s._v(" "),n("p",[s._v("除了以上三步之外，我们还应该使用新的真实 DOM 元素去更新 "),n("code",[s._v("vnode.el")]),s._v(" 属性和组件实例的 "),n("code",[s._v("$el")]),s._v(" 属性的值。另外大家注意我们在第三步中传递给 "),n("code",[s._v("patch")]),s._v(" 函数的第三个参数，它是容器元素，这个容器元素可以通过获取旧的 "),n("code",[s._v("vnode.el")]),s._v(" 的父节点得到。")]),s._v(" "),n("p",[s._v("现在组件的主动更新我们就讲解完了，下面的链接是完整代码和线上体验地址。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/jzl0nk81xy")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/jzl0nk81xy",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"初步了解组件的外部状态-props"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初步了解组件的外部状态-props"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E5%88%9D%E6%AD%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%E7%9A%84%E5%A4%96%E9%83%A8%E7%8A%B6%E6%80%81-props",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 初步了解组件的外部状态 props")]),s._v(" "),n("p",[s._v("上面我们讲解了有状态组件的主动更新，接下来我们本应该继续讲解有状态组件的被动更新，但是在讲解被动更新之前，需要花点时间来做一些铺垫，我们先了解一下组件的 "),n("code",[s._v("props")]),s._v("，为什么需要了解 "),n("code",[s._v("props")]),s._v(" 呢？因为组件的被动更新是由组件的外部状态变化所导致的，而 "),n("code",[s._v("props")]),s._v(" 就是组件的外部状态。不过本节不会深入讨论 "),n("code",[s._v("props")]),s._v("，点到为止，我们会在后续的章节中专门详细地讲解 "),n("code",[s._v("props")]),s._v("。")]),s._v(" "),n("p",[s._v("假设父组件的模板如下：")]),s._v(" "),n("div",{staticClass:"language-html line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- 父组件模板 --\x3e")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("ChildComponent")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v(":text")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("localState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("/>")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("父组件的模板中渲染了 "),n("code",[s._v("ChildComponent")]),s._v(" 子组件，"),n("code",[s._v("ChildComponent")]),s._v(" 子组件有一个 "),n("code",[s._v("text")]),s._v(" 属性，它是一个绑定属性，绑定的变量是父组件的自身状态 "),n("code",[s._v("localState")]),s._v("。这段模板被编译后的渲染函数可以表示为：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ChildComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("localState\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("这段渲染函数就是父组件的渲染函数，所以我们可以这样定义父组件：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ParentComponent")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 本地状态")]),s._v("\n  localState "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'one'")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    childCompVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ChildComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("localState\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" childCompVNode\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("如上代码所示，父组件渲染函数所返回的就是子组件的 "),n("code",[s._v("VNode")]),s._v("，即 "),n("code",[s._v("childCompVNode")]),s._v("。"),n("code",[s._v("childCompVNode")]),s._v(" 将会被 "),n("code",[s._v("mountStatefulComponent")]),s._v(" 函数挂载，挂载的步骤我们已经再熟悉不过了：1、创建组件实例，2、调用组件实例的 "),n("code",[s._v("render")]),s._v(" 函数，3、调用 "),n("code",[s._v("mount")]),s._v(" 函数挂载。实际上我们可以在组件实例创建之后立即初始化组件的 "),n("code",[s._v("props")]),s._v("。为 "),n("code",[s._v("mountStatefulComponent")]),s._v(" 函数添加如下代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountStatefulComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建组件实例")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化 props")]),s._v("\n  instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$props "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("如上高亮代码所示，在组件实例创建完成之后，我们为组件实例添加了 "),n("code",[s._v("$props")]),s._v(" 属性，并且将 "),n("code",[s._v("vnode.data")]),s._v(" 赋值给 "),n("code",[s._v("$props")]),s._v("。这样，子组件中就可以通过 "),n("code",[s._v("this.$props.text")]),s._v(" 访问从父组件传递进来的 "),n("code",[s._v("props")]),s._v(" 数据。如下是 "),n("code",[s._v("ChildComponent")]),s._v(" 组件中使用外部数据的方式：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子组件类")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ChildComponent")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过 this.$props.text 访问外部数据")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("这样我们就实现了父组件向子组件传递 "),n("code",[s._v("props")]),s._v(" 的能力，不过在该实现中我们以最简单的方式，直接将 "),n("code",[s._v("VNodeData")]),s._v(" 赋值给 "),n("code",[s._v("$props")]),s._v("，我们知道 "),n("code",[s._v("VNodeData")]),s._v(" 中的数据并不全是 "),n("code",[s._v("props")]),s._v("，其中还包含事件以及其他重要的信息，所以在真正的实现中，我们会从 "),n("code",[s._v("VNodeData")]),s._v(" 中提取 "),n("code",[s._v("props")]),s._v("。不过这并不是本章的重点内容，我们一切从简。")]),s._v(" "),n("p",[s._v("现在子组件已经有能力拿到从父组件传递进来的 "),n("code",[s._v("props")]),s._v(" 数据了，我们可以使用如下例子测试我们的代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子组件类")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ChildComponent")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子组件中访问外部状态：this.$props.text")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 父组件类")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ParentComponent")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  localState "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'one'")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ChildComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 父组件向子组件传递的 props")]),s._v("\n      text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("localState\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有状态组件 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" compVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ParentComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("compVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("这里是完整的代码和在线体验地址：https://codesandbox.io/s/k5lll524m5")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/k5lll524m5",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("，可以看到如上代码能够正确运行，子组件中可以访问由父组件传递进来的数据。")]),s._v(" "),n("h3",{attrs:{id:"被动更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#被动更新"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E8%A2%AB%E5%8A%A8%E6%9B%B4%E6%96%B0",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 被动更新")]),s._v(" "),n("p",[s._v("有了 "),n("code",[s._v("props")]),s._v(" 的铺垫之后，我们可以开始讨论有状态组件的"),n("strong",[s._v("被动更新")]),s._v("了。如前所述，被动更新指的是由外部状态变化而引起的更新操作，通常父组件自身状态的变化可能会引起子组件的更新，我们可以修改上面的例子，为父组件添加 "),n("code",[s._v("mounted")]),s._v(" 钩子，并在该钩子函数中修改父组件的自身状态 "),n("code",[s._v("localState")]),s._v(" 的值，如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子组件类")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ChildComponent")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子组件中访问外部状态：this.$props.text")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 父组件类")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ParentComponent")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  localState "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'one'")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mounted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 两秒钟后将 localState 的值修改为 'two'")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("localState "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'two'")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("_update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ChildComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 父组件向子组件传递的 props")]),s._v("\n      text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("localState\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有状态组件 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" compVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ParentComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("compVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("p",[s._v("如上高亮代码所示，我们为父组件定义了 "),n("code",[s._v("mounted")]),s._v(" 钩子函数，在 "),n("code",[s._v("mounted")]),s._v(" 钩子函数内我们设置了一个定时器，两秒钟后修改 "),n("code",[s._v("localState")]),s._v(" 的值为 "),n("code",[s._v("'two'")]),s._v(" 并调用 "),n("code",[s._v("_update")]),s._v(" 方法更新父组件。这个过程我们可以理解为父组件 "),n("code",[s._v("ParentComponent")]),s._v(" 先后产出了两个不同的 "),n("code",[s._v("VNode")]),s._v("：第一次渲染产出的 "),n("code",[s._v("VNode")]),s._v(" 是：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevCompVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ChildComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'one'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("第二次由于自身状态变化所产出的 "),n("code",[s._v("VNode")]),s._v(" 为：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextCompVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ChildComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'two'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("所以在 "),n("code",[s._v("_update")]),s._v(" 函数内部的更新操作，等价于 "),n("code",[s._v("prevCompVNode")]),s._v(" 和 "),n("code",[s._v("nextCompVNode")]),s._v(" 之间的 "),n("code",[s._v("patch")]),s._v("，即：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevCompVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextCompVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prevCompVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parentNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("由于 "),n("code",[s._v("prevCompVNode")]),s._v(" 和 "),n("code",[s._v("nextCompVNode")]),s._v(" 的类型都是组件类型的 "),n("code",[s._v("VNode")]),s._v("，所以在 "),n("code",[s._v("patch")]),s._v(" 函数内部会调用 "),n("code",[s._v("patchComponent")]),s._v(" 函数进行更新，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flags\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flags\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" nextFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ELEMENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMPONENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TEXT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FRAGMENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchFragment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PORTAL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchPortal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[n("code",[s._v("patchComponent")]),s._v(" 函数接收三个参数，分别是旧的 "),n("code",[s._v("VNode")]),s._v(" 和新的 "),n("code",[s._v("VNode")]),s._v(" 以及容器元素 "),n("code",[s._v("container")]),s._v("，如下是 "),n("code",[s._v("patchComponent")]),s._v(" 函数的实现：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 检查组件是否是有状态组件")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMPONENT_STATEFUL_NORMAL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1、获取组件实例")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2、更新 props")]),s._v("\n    instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$props "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3、更新组件")]),s._v("\n    instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("_update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("如上代码所示，我们通过检查组件的 "),n("code",[s._v("flags")]),s._v(" 判断组件是否是有状态组件，如果是有状态组件则更新之。更新操作很简单，三步：")]),s._v(" "),n("ul",[n("li",[s._v("1、通过 "),n("code",[s._v("prevVNode.children")]),s._v(" 拿到组件实例")]),s._v(" "),n("li",[s._v("2、更新 "),n("code",[s._v("props")]),s._v("，使用新的 "),n("code",[s._v("VNodeData")]),s._v(" 重新设置组件实例的 "),n("code",[s._v("$props")]),s._v(" 属性")]),s._v(" "),n("li",[s._v("3、由于组件的 "),n("code",[s._v("$props")]),s._v(" 已更新，所以调用组件的 "),n("code",[s._v("_update")]),s._v(" 方法，让组件重渲染。")])]),s._v(" "),n("p",[s._v("这里需要澄清的一件事，我们之所以能够通过 "),n("code",[s._v("VNode")]),s._v(" 的 "),n("code",[s._v("children")]),s._v(" 属性来读取组件实例，例如上面代码中的 "),n("code",[s._v("prevVNode.children")]),s._v("，是因为每个类型为有状态组件的 "),n("code",[s._v("VNode")]),s._v("，在挂载期间我们都会让其 "),n("code",[s._v("children")]),s._v(" 属性引用组件的实例，以便能够通过 "),n("code",[s._v("VNode")]),s._v(" 访问组件实例对象。这一点我们早在“先设计 VNode 吧”一章中就有提及。所以我们需要修改 "),n("code",[s._v("mountStatefulComponent")]),s._v(" 函数的代码，在创建组件实例后需要将实例对象赋值给 "),n("code",[s._v("vnode.children")]),s._v(" 属性，如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountStatefulComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建组件实例")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("这样我们在 "),n("code",[s._v("patchComponent")]),s._v(" 函数中就能够通过 "),n("code",[s._v("VNode")]),s._v(" 拿到组件实例了，这里我们再次强调："),n("code",[s._v("VNode")]),s._v(" 的 "),n("code",[s._v("children")]),s._v(" 属性本应该用来存储子节点，但是对于组件类型的 "),n("code",[s._v("VNode")]),s._v(" 来说，它的子节点都应该作为插槽存在，并且我们选择将插槽内容存储在单独的 "),n("code",[s._v("slots")]),s._v(" 属性中，而非存储在 "),n("code",[s._v("children")]),s._v(" 属性中，这样 "),n("code",[s._v("children")]),s._v(" 属性就可以用来存储组件实例了，这些内容我们会在后面章节中讲解插槽时再次说明。")]),s._v(" "),n("p",[s._v("如下是完整代码以及在线体验地址：")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/2z7335kn5y")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/2z7335kn5y",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("在上面的讲解中，父组件自身状态变化之后，它渲染的子组件并没有变化，仍然是 "),n("code",[s._v("ChildComponent")]),s._v("，仅仅是传递给子组件的 "),n("code",[s._v("props")]),s._v(" 数据发生了变化。但是，有时父组件自身状态的变化会导致父组件渲染不同的子组件，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 父组件类")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ParentComponent")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  isTrue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mounted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isTrue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("_update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 this.isTrue 的值为真，则渲染 ChildComponent1，否则渲染 ChildComponent2")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isTrue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ChildComponent1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ChildComponent2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有状态组件 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" compVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ParentComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("compVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("如上代码所示，观察 "),n("code",[s._v("ParentComponent")]),s._v(" 组件的 "),n("code",[s._v("render")]),s._v(" 函数，当 "),n("code",[s._v("ParentComponent")]),s._v(" 组件的自身状态 "),n("code",[s._v("isTrue")]),s._v(" 为真时会渲染子组件 "),n("code",[s._v("ChildComponent1")]),s._v("，否则会渲染子组件 "),n("code",[s._v("ChildComponent2")]),s._v("。同时我们在 "),n("code",[s._v("mounted")]),s._v(" 钩子中设置了定时器，两秒钟后将 "),n("code",[s._v("isTrue")]),s._v(" 的值变更为 "),n("code",[s._v("false")]),s._v("，并调用 "),n("code",[s._v("_update")]),s._v(" 方法更新 "),n("code",[s._v("ParentComponent")]),s._v(" 组件。在这种情况下就会出现因父组件自身状态的变化而导致其渲染不同的组件，在初次挂载时 "),n("code",[s._v("ParentComponent")]),s._v(" 组件所产出的 "),n("code",[s._v("VNode")]),s._v(" 为：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" pervCompVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ChildComponent1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("更新之后 "),n("code",[s._v("ParentComponent")]),s._v(" 组件所产出的 "),n("code",[s._v("VNode")]),s._v(" 为：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextCompVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ChildComponent2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("虽然 "),n("code",[s._v("pervCompVNode")]),s._v(" 和 "),n("code",[s._v("nextCompVNode")]),s._v(" 的类型都是组件，但它们是不同的组件。拿上面的例子来说，"),n("code",[s._v("pervCompVNode")]),s._v(" 描述的是组件 "),n("code",[s._v("ChildComponent1")]),s._v("，"),n("code",[s._v("nextCompVNode")]),s._v(" 描述的是组件 "),n("code",[s._v("ChildComponent2")]),s._v("，也就是说新旧 "),n("code",[s._v("VNode")]),s._v(" 所描述的不是同一个组件，这就引申出我们更新组件的一个原则："),n("strong",[s._v("我们认为不同的组件渲染不同的内容")]),s._v("，所以对于不同的组件，我们采用的方案是使用新组件的内容替换旧组件渲染的内容。根据这个思想，我们修改 "),n("code",[s._v("patchComponent")]),s._v(" 函数的代码，如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// tag 属性的值是组件类，通过比较新旧组件类是否相等来判断是否是相同的组件")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMPONENT_STATEFUL_NORMAL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取组件实例")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 props")]),s._v("\n    instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$props "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新组件")]),s._v("\n    instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("_update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("如上 "),n("code",[s._v("patchComponent")]),s._v(" 函数中的高亮代码所示，增加了一个判断条件，我们知道对于组件类型的 "),n("code",[s._v("VNode")]),s._v(" 而言，它的 "),n("code",[s._v("tag")]),s._v(" 属性值引用的就是组件类本身，我们通过对比前后组件类是否相同来确定新旧组件是否是相同的组件，如果不相同则直接调用 "),n("code",[s._v("replaceVNode")]),s._v(" 函数使用新组件替换旧的组件。大家还记的 "),n("code",[s._v("replaceVNode")]),s._v(" 函数的实现方式吗？如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("这是我们之前实现过的 "),n("code",[s._v("replaceVNode")]),s._v(" 函数，它的原理就是将旧的 "),n("code",[s._v("VNode")]),s._v(" 所渲染的内容从容器元素中移除，并将新的 "),n("code",[s._v("VNode")]),s._v(" 挂载到容器元素中。这段代码同样适用于组件，但是对于组件来说我们不能仅仅将组件所渲染的内容移除就算大功告成，我们还有另外一件事需要做，即调用 "),n("code",[s._v("unmounted")]),s._v(" 钩子，所以我们为 "),n("code",[s._v("replaceVNode")]),s._v(" 函数添加如下代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果将要被移除的 VNode 类型是组件，则需要调用该组件实例的 unmounted 钩子函数")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMPONENT_STATEFUL_NORMAL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 类型为有状态组件的 VNode，其 children 属性被用来存储组件实例对象")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children\n    instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("unmounted "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("unmounted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("如上高亮代码所示，如果将要被移除的 "),n("code",[s._v("prevVNode")]),s._v(" 的类型是有状态组件，则需要调用该组件实例的 "),n("code",[s._v("unmounted")]),s._v(" 钩子函数。这里是完整的代码以及在线体验地址：https://codesandbox.io/s/ll92yq0o2l")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/ll92yq0o2l",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("。")]),s._v(" "),n("h3",{attrs:{id:"我们需要-shouldupdatecomponent"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#我们需要-shouldupdatecomponent"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81-shouldupdatecomponent",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 我们需要 shouldUpdateComponent")]),s._v(" "),n("p",[s._v("【占位】")]),s._v(" "),n("h2",{attrs:{id:"函数式组件的更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数式组件的更新"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-patch.html#%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BB%84%E4%BB%B6%E7%9A%84%E6%9B%B4%E6%96%B0",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 函数式组件的更新")]),s._v(" "),n("p",[s._v("接下来我们要讨论的是函数式组件的更新，其实无论是有状态组件还是函数式组件，它们的更新原理都是一样的：用组件新产出的 "),n("code",[s._v("VNode")]),s._v(" 与之前产出的旧 "),n("code",[s._v("VNode")]),s._v(" 进行比对，从而完成更新。为了让讲解不至于太抽象，我们还是拿一个具体的例子来说，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子组件 - 函数式组件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("MyFunctionalComp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("props")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 父组件的 render 函数中渲染了 MyFunctionalComp 子组件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ParentComponent")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  localState "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'one'")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mounted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("localState "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'two'")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("_update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MyFunctionalComp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("localState\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有状态组件 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" compVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ParentComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("compVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("p",[s._v("观察上面的代码，我们定义了 "),n("code",[s._v("ParentComponent")]),s._v(" 组件，它是一个有状态组件，在它的 "),n("code",[s._v("render")]),s._v(" 函数中渲染了 "),n("code",[s._v("MyFunctionalComp")]),s._v(" 子组件，这个子组件是一个函数式组件。观察 "),n("code",[s._v("MyFunctionalComp")]),s._v(" 函数的参数，由于函数式组件没有组件实例，所以在函数式组件中我们不能通过 "),n("code",[s._v("this.$props.xxx")]),s._v(" 访问 "),n("code",[s._v("props")]),s._v(" 数据，"),n("code",[s._v("props")]),s._v(" 数据是作为函数的参数传递进去的，如下是我们之前实现的 "),n("code",[s._v("mountFunctionalComponent")]),s._v(" 函数：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountFunctionalComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取 VNode")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" $vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// el 元素引用该组件的根元素")]),s._v("\n  vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" $vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("为了实现函数式组件的 "),n("code",[s._v("props")]),s._v(" 传递，我们需要修对 "),n("code",[s._v("mountFunctionalComponent")]),s._v(" 函数做一些修改，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountFunctionalComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取 props")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" props "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取 VNode")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" $vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// el 元素引用该组件的根元素")]),s._v("\n  vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" $vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("如上高亮代码所示，我们在调用组件函数获取 "),n("code",[s._v("VNode")]),s._v(" 之前，要先获取 "),n("code",[s._v("props")]),s._v("，这里我们同样直接将整个 "),n("code",[s._v("VNodeData")]),s._v(" 作为 "),n("code",[s._v("props")]),s._v(" 数据，前面我们已经解释了这么做的原因是出于简便。拿到 "),n("code",[s._v("props")]),s._v(" 数据之后，在调用组件函数 "),n("code",[s._v("vnode.tag(props)")]),s._v(" 时将 "),n("code",[s._v("props")]),s._v(" 作为参数传递过去，这样子组件就可以通过参数访问由父组件传递过来的数据了。另外，我们将组件产出的 "),n("code",[s._v("VNode")]),s._v(" 赋值给了 "),n("code",[s._v("vnode.children")]),s._v(" 属性，这里需要做一些说明，通过之前的讲解可知，对于有状态组件类型的 "),n("code",[s._v("VNode")]),s._v(" 来说，我们使用其 "),n("code",[s._v("children")]),s._v(" 属性存储组件实例，并在将来会用 "),n("code",[s._v("slots")]),s._v(" 属性存储插槽数据。同样的，在函数式组件中，由于函数式组件没有组件实例，所以对于函数式组件类型的 "),n("code",[s._v("VNode")]),s._v("，我们用其 "),n("code",[s._v("children")]),s._v(" 属性存储组件产出的 "),n("code",[s._v("VNode")]),s._v("，将来也会使用 "),n("code",[s._v("slots")]),s._v(" 属性存储插槽数据。这个是设计上的决定，并非一定要这么做，但为了与 "),n("code",[s._v("Vue3")]),s._v(" 的设计保持一致，所以我们就沿用 "),n("code",[s._v("Vue3")]),s._v(" 的设计。")]),s._v(" "),n("p",[s._v("现在我们已经实现了函数式组件接收 "),n("code",[s._v("props")]),s._v(" 数据的功能，我们再来观察一下上面的例子，在这个例子中我们为有状态组件 "),n("code",[s._v("ParentComponent")]),s._v(" 提供了 "),n("code",[s._v("mounted")]),s._v(" 钩子函数，两秒之后修改自身状态 "),n("code",[s._v("localState")]),s._v(" 的值，并调用 "),n("code",[s._v("_update")]),s._v(" 函数重渲染，在重渲染的过程中，"),n("code",[s._v("_update")]),s._v(" 函数内部发生的事情等价于：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MyFunctionalComp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'one'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 VNode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MyFunctionalComp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'two'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parentNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("由于 "),n("code",[s._v("prevVNode")]),s._v(" 和 "),n("code",[s._v("nextVNode")]),s._v(" 的类型都是组件，所以在 "),n("code",[s._v("patch")]),s._v(" 函数内部会调用 "),n("code",[s._v("patchComponent")]),s._v(" 函数更新，我们来回顾一下 "),n("code",[s._v("patchComponent")]),s._v(" 函数的代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMPONENT_STATEFUL_NORMAL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取组件实例")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 props")]),s._v("\n    instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$props "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新组件")]),s._v("\n    instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("_update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("在这段代码中 "),n("code",[s._v("if")]),s._v(" 语句块内的代码用于处理两个不同组件之间的更新，"),n("code",[s._v("else...if")]),s._v(" 语句块内的代码用于处理有状态组件的更新，所以"),n("code",[s._v("patchComponent")]),s._v(" 函数还不能完成函数式组件的更新。为了达到目的，我们需要为 "),n("code",[s._v("patchComponent")]),s._v(" 函数添加一段代码，用来处理函数式组件类型的 "),n("code",[s._v("VNode")]),s._v(" 的更新，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMPONENT_STATEFUL_NORMAL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在这里编写函数式组件的更新逻辑")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("如上高亮代码所示，我们只需要为其添加 "),n("code",[s._v("else")]),s._v(" 语句块即可，我们将在这里编写函数式组件的更新逻辑。但问题是，应该如何更新呢？在本节的开头我们就说过了，无论是有状态组件还是函数式组件，它们的更新原理不变，所以我们可以效仿有状态组件的实现方式。")]),s._v(" "),n("p",[s._v("挂载函数式组件的核心步骤只有两步：1、调用组件的定义函数，拿到组件产出的 "),n("code",[s._v("VNode")]),s._v("，2、将 "),n("code",[s._v("VNode")]),s._v(" 挂载到容器元素。与挂载有状态组件类似，我们可以把这些步骤封装到一个函数中，当组件更新时再次调用这个函数即可。但是，与有状态组件不同，函数式组件没有组件实例，所以我们没办法封装类似 "),n("code",[s._v("instance._update")]),s._v(" 这样的函数，那应该怎么办呢？很简单，我们把 "),n("code",[s._v("update")]),s._v(" 函数定义在函数式组件的 "),n("code",[s._v("VNode")]),s._v(" 上就可以了，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountFunctionalComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在函数式组件类型的 vnode 上添加 handle 属性，它是一个对象")]),s._v("\n  vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    prev"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    next"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化 props")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" props "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取 VNode")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" $vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// el 元素引用该组件的根元素")]),s._v("\n      vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" $vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 立即调用 vnode.handle.update 完成初次挂载")]),s._v("\n  vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("这是我们修改后的 "),n("code",[s._v("mountFunctionalComponent")]),s._v(" 函数，可以看到我们给函数式组件类型的 "),n("code",[s._v("VNode")]),s._v(" 添加了 "),n("code",[s._v("handle")]),s._v(" 属性，它是一个拥有四个属性的对象：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  prev"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  next"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*...*/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("我们把之前用于挂载函数式组件的代码移动到了 "),n("code",[s._v("vnode.handle.update")]),s._v(" 函数中，所以在 "),n("code",[s._v("mountFunctionalComponent")]),s._v(" 函数的最后立即调用了 "),n("code",[s._v("vnode.handle.update")]),s._v(" 函数，这样能够保证原始功能不变。"),n("code",[s._v("handle")]),s._v(" 对象除了 "),n("code",[s._v("update")]),s._v(" 方法之外还有其他三个属性，它们的作用分别是：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("handle.prev")]),s._v("：存储旧的函数式组件 "),n("code",[s._v("VNode")]),s._v("，在初次挂载时，没有旧的 "),n("code",[s._v("VNode")]),s._v(" 可言，所以初始值为 "),n("code",[s._v("null")]),s._v("。")]),s._v(" "),n("li",[n("code",[s._v("handle.next")]),s._v("：存储新的函数式组件 "),n("code",[s._v("VNode")]),s._v("，在初次挂载时，被赋值为当前正在挂载的函数式组件 "),n("code",[s._v("VNode")]),s._v("。")]),s._v(" "),n("li",[n("code",[s._v("handle.container")]),s._v("：存储的是挂载容器")])]),s._v(" "),n("p",[s._v("现在已经有了 "),n("code",[s._v("handle.update")]),s._v(" 函数，我们可以尝试在 "),n("code",[s._v("patchComponent")]),s._v(" 函数内部通过调用 "),n("code",[s._v("handle.update")]),s._v(" 函数完成函数式组件的更新，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMPONENT_STATEFUL_NORMAL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新函数式组件")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过 prevVNode.handle 拿到 handle 对象")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" handle "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 handle 对象")]),s._v("\n    handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prev "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode\n    handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode\n    handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("container "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" container\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 update 函数完成更新")]),s._v("\n    handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[s._v("如上高亮代码所示，我们首先通过旧的 "),n("code",[s._v("VNode(prevVNode)")]),s._v(" 拿到 "),n("code",[s._v("handle")]),s._v(" 对象，接着我们更新了 "),n("code",[s._v("handle")]),s._v(" 对象下各个属性的值：")]),s._v(" "),n("ul",[n("li",[s._v("1、将旧的函数式组件 "),n("code",[s._v("VNode(prevVNode)")]),s._v(" 赋值给 "),n("code",[s._v("handle.prev")]),s._v("。")]),s._v(" "),n("li",[s._v("2、将新的函数式组件 "),n("code",[s._v("VNode(nextVNode)")]),s._v(" 赋值给 "),n("code",[s._v("handle.next")]),s._v("。")]),s._v(" "),n("li",[s._v("3、更新 "),n("code",[s._v("container")]),s._v("（即使 "),n("code",[s._v("container")]),s._v(" 未必会变，但仍要更新之）。")])]),s._v(" "),n("p",[s._v("最后我们调用了 "),n("code",[s._v("handle.update")]),s._v(" 函数完成更新操作。我们再详细地了解一下在这个过程中发生了什么，在函数式组件初次挂载完成后 "),n("code",[s._v("handle")]),s._v(" 对象的值为：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("handle "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  prev"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  next"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("在经过 "),n("code",[s._v("patchComponent")]),s._v(" 函数对 "),n("code",[s._v("handle")]),s._v(" 对象进行更新之后，"),n("code",[s._v("handle")]),s._v(" 对象的值将变为：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("handle "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  prev"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  next"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("可以看到此时的 "),n("code",[s._v("handle.prev")]),s._v(" 属性已经非空了，"),n("code",[s._v("prev")]),s._v(" 和 "),n("code",[s._v("next")]),s._v(" 属性分别存储的是旧的和新的函数式组件类型的 "),n("code",[s._v("VNode")]),s._v("。这个更新的动作很关键。在更新完成之后，立即调用了 "),n("code",[s._v("handle.update")]),s._v(" 函数进行重渲染，如下是目前我们所实现的 "),n("code",[s._v("handle.update")]),s._v(" 函数：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountFunctionalComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在函数式组件类型的 vnode 上添加 handle 属性，它是一个对象")]),s._v("\n  vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    prev"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    next"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化 props")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" props "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取 VNode")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" $vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// el 元素引用该组件的根元素")]),s._v("\n      vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" $vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 立即调用 vnode.handle.update 完成初次挂载")]),s._v("\n  vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("如上高亮代码所示，现在的 "),n("code",[s._v("update")]),s._v(" 函数只能完成初次挂载的工作，当再次调用 "),n("code",[s._v("update")]),s._v(" 函数进行更新时，我们是不能再次执行这段用于挂载的代码的，就像有状态组件的 "),n("code",[s._v("instance.update")]),s._v(" 函数的实现一样，我们需要为 "),n("code",[s._v("handle.update")]),s._v(" 函数添加更新逻辑，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountFunctionalComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    prev"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    next"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新的逻辑写在这里")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取 props")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" props "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取 VNode")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" $vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// el 元素引用该组件的根元素")]),s._v("\n        vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" $vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 立即调用 vnode.handle.update 完成初次挂载")]),s._v("\n  vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("在上面的代码中，我们通过判断 "),n("code",[s._v("vnode.handle.prev")]),s._v(" 是否存在来判断该函数式组件是初次挂载还是后续更新，由于在 "),n("code",[s._v("patchComponent")]),s._v(" 函数内我们已经将 "),n("code",[s._v("vnode.handle.prev")]),s._v(" 属性赋值为旧的组件 "),n("code",[s._v("VNode")]),s._v("，所以如果 "),n("code",[s._v("vnode.handle.prev")]),s._v(" 存在则说明该函数式组件并非初次挂载，而是更新，所以我们会在 "),n("code",[s._v("if")]),s._v(" 语句块内编写更新逻辑，而用于初次挂载的代码被我们放到了 "),n("code",[s._v("else")]),s._v(" 语句块中。")]),s._v(" "),n("p",[s._v("那么更新的思路是什么呢？前面说过了，只要想办法分别拿到组件产出的新旧 "),n("code",[s._v("VNode")]),s._v(" 即可，这样我们就可以通过 "),n("code",[s._v("patch")]),s._v(" 函数更新之。如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountFunctionalComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    prev"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    next"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// prevVNode 是旧的组件VNode，nextVNode 是新的组件VNode")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prev\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// prevTree 是组件产出的旧的 VNode")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevTree "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 props 数据")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" props "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// nextTree 是组件产出的新的 VNode")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextTree "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 patch 函数更新")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevTree"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextTree"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 立即调用 vnode.handle.update 完成初次挂载")]),s._v("\n  vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("p",[s._v("如上高亮代码所示，由于我们在 "),n("code",[s._v("patchComponent")]),s._v(" 函数内已经更新过了 "),n("code",[s._v("handle")]),s._v(" 对象，所以此时我们可以通过 "),n("code",[s._v("vnode.handle.prev")]),s._v(" 和 "),n("code",[s._v("vnode.handle.next")]),s._v(" 分别拿到旧的组件 "),n("code",[s._v("VNode")]),s._v(" 和新的组件 "),n("code",[s._v("VNode")]),s._v("，但大家不要搞混的是："),n("code",[s._v("prevVNode")]),s._v(" 和 "),n("code",[s._v("nextVNode")]),s._v(" 是用来描述函数式组件的 "),n("code",[s._v("VNode")]),s._v("，并非函数式组件所产出的 "),n("code",[s._v("VNode")]),s._v("。因为函数式组件所产出的 "),n("code",[s._v("VNode")]),s._v(" 存放在用来描述函数式组件的 "),n("code",[s._v("VNode")]),s._v(" 的 "),n("code",[s._v("children")]),s._v(" 属性中，所以在如上代码中我们通过 "),n("code",[s._v("prevVNode.children")]),s._v(" 拿到了组件所产出的旧的 "),n("code",[s._v("VNode")]),s._v(" 即 "),n("code",[s._v("prevTree")]),s._v("，接着使用新的 "),n("code",[s._v("props")]),s._v(" 重新调用组件函数 "),n("code",[s._v("nextVNode.tag(props)")]),s._v(" 得到新产出的 "),n("code",[s._v("VNode")]),s._v(" 即 "),n("code",[s._v("nextTree")]),s._v("，有了 "),n("code",[s._v("prevTree")]),s._v(" 和 "),n("code",[s._v("nextTree")]),s._v(" 之后我们就可以调用 "),n("code",[s._v("patch")]),s._v(" 函数执行更新操作了。")]),s._v(" "),n("p",[s._v("以上就是函数式组件的更新过程。")]),s._v(" "),n("h1",{attrs:{id:"渲染器的核心-diff-算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#渲染器的核心-diff-算法"}},[s._v("#")]),s._v(" 渲染器的核心 Diff 算法")]),s._v(" "),n("h2",{attrs:{id:"减小dom操作的性能开销"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#减小dom操作的性能开销"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E5%87%8F%E5%B0%8Fdom%E6%93%8D%E4%BD%9C%E7%9A%84%E6%80%A7%E8%83%BD%E5%BC%80%E9%94%80",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 减小DOM操作的性能开销")]),s._v(" "),n("p",[s._v("上一章我们讨论了渲染器是如何更新各种类型的 "),n("code",[s._v("VNode")]),s._v(" 的，实际上，上一章所讲解的内容归属于完整的 "),n("code",[s._v("Diff")]),s._v(" 算法之内，但并不包含核心的 "),n("code",[s._v("Diff")]),s._v(" 算法。那什么才是核心的 "),n("code",[s._v("Diff")]),s._v(" 算法呢？看下图：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/patch-children-3.06453ea2.png",alt:"img"}})]),s._v(" "),n("p",[s._v("我们曾在上一章中讲解子节点更新的时候见到过这张图，当时我们提到"),n("strong",[s._v("只有当新旧子节点的类型都是多个子节点时，核心 "),n("code",[s._v("Diff")]),s._v(" 算法才派得上用场")]),s._v("，并且当时我们采用了一种仅能实现目标但并不完美的算法："),n("strong",[s._v("遍历旧的子节点，将其全部移除；再遍历新的子节点，将其全部添加")]),s._v("，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 children 中有多个子节点")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中有多个子节点")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧的子节点，将其全部移除")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历新的子节点，将其全部添加")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("p",[s._v("为了便于表述，我们把这个算法称为："),n("strong",[s._v("简单 Diff 算法")]),s._v("。"),n("strong",[s._v("简单 Diff 算法")]),s._v("虽然能够达到目的，但并非最佳处理方式。我们经常会遇到可排序的列表，假设我们有一个由 "),n("code",[s._v("li")]),s._v(" 标签组成的列表：")]),s._v(" "),n("div",{staticClass:"language-html line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("1"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("2"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("3"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("列表中的 "),n("code",[s._v("li")]),s._v(" 标签是 "),n("code",[s._v("ul")]),s._v(" 标签的子节点，我们可以使用下面的数组来表示 "),n("code",[s._v("ul")]),s._v(" 标签的 "),n("code",[s._v("children")]),s._v("：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("接着由于数据变化导致了列表的顺序发生了变化，新的列表顺序如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("新的列表和旧的列表构成了新旧 "),n("code",[s._v("children")]),s._v("，当我们使用"),n("strong",[s._v("简单 Diff 算法")]),s._v("更新这两个列表时，其操作行为可以用下图表示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-1.284cea98.png",alt:"img"}})]),s._v(" "),n("p",[s._v("在这张图中我们使用圆形表示真实 DOM 元素，用菱形表示 "),n("code",[s._v("VNode")]),s._v("，旧的 "),n("code",[s._v("VNode")]),s._v(" 保存着对真实 DOM 的引用(即 "),n("code",[s._v("vnode.el")]),s._v(" 属性)，新的 "),n("code",[s._v("VNode")]),s._v(" 是不存在对真实 DOM 的引用的。上图描述了"),n("strong",[s._v("简单 Diff 算法")]),s._v("的操作行为，首先遍历旧的 "),n("code",[s._v("VNode")]),s._v("，通过旧 "),n("code",[s._v("VNode")]),s._v(" 对真实 DOM 的引用取得真实 DOM，即可将已渲染的 DOM 移除。接着遍历新的 "),n("code",[s._v("VNode")]),s._v(" 并将其全部添加到页面中。")]),s._v(" "),n("p",[s._v("在这个过程中我们能够注意到：更新前后的真实 DOM 元素都是 "),n("code",[s._v("li")]),s._v(" 标签。那么可不可以复用 "),n("code",[s._v("li")]),s._v(" 标签呢？这样就能减少“移除”和“新建” DOM 元素带来的性能开销，实际上是可以的，我们在讲解 "),n("code",[s._v("pathcElement")]),s._v(" 函数时了解到，当新旧 "),n("code",[s._v("VNode")]),s._v(" 所描述的是相同标签时，那么这两个 "),n("code",[s._v("VNode")]),s._v(" 之间的差异就仅存在于 "),n("code",[s._v("VNodeData")]),s._v(" 和 "),n("code",[s._v("children")]),s._v(" 上，所以我们完全可以通过遍历新旧 "),n("code",[s._v("VNode")]),s._v("，并一一比对它们，这样对于任何一个 DOM 元素来说，由于它们都是相同的标签，所以更新的过程是不会“移除”和“新建”任何 DOM 元素的，而是复用已有 DOM 元素，需要更新的只有 "),n("code",[s._v("VNodeData")]),s._v(" 和 "),n("code",[s._v("children")]),s._v("。优化后的更新操作可以用下图表示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-2.8ce72d46.png",alt:"img"}})]),s._v(" "),n("p",[s._v("用代码实现起来也非常简单，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 children 中有多个子节点")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("通过遍历旧的 "),n("code",[s._v("children")]),s._v("，将新旧 "),n("code",[s._v("children")]),s._v(" 中相同位置的节点拿出来作为一对“新旧 "),n("code",[s._v("VNode")]),s._v("”，并调用 "),n("code",[s._v("patch")]),s._v(" 函数更新之。由于新旧列表的标签相同，所以这种更新方案较之前相比，省去了“移除”和“新建” DOM 元素的性能开销。而且从实现上看，代码也较之前少了一些，真可谓一举两得。但不要高兴的太早，细心的同学可能已经发现问题所在了，如上代码中我们遍历的是旧的 "),n("code",[s._v("children")]),s._v("，如果新旧 "),n("code",[s._v("children")]),s._v(" 的长度相同的话，则这段代码可以正常工作，但是一旦新旧 "),n("code",[s._v("children")]),s._v(" 的长度不同，这段代码就不能正常工作了，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-3.1d1958ef.png",alt:"img"}})]),s._v(" "),n("p",[s._v("当新的 "),n("code",[s._v("children")]),s._v(" 比旧的 "),n("code",[s._v("children")]),s._v(" 的长度要长时，多出来的子节点是没办法应用 "),n("code",[s._v("patch")]),s._v(" 函数的，此时我们应该把多出来的子节点作为新的节点添加上去。类似的，如果新的 "),n("code",[s._v("children")]),s._v(" 比旧的 "),n("code",[s._v("children")]),s._v(" 的长度要短时，我们应该把旧的 "),n("code",[s._v("children")]),s._v(" 中多出来的子节点移除，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-4.0adb55a1.png",alt:"img"}})]),s._v(" "),n("p",[s._v("通过分析我们得出一个规律，我们不应该总是遍历旧的 "),n("code",[s._v("children")]),s._v("，而是应该遍历新旧 "),n("code",[s._v("children")]),s._v(" 中长度较短的那一个，这样我们能够做到尽可能多的应用 "),n("code",[s._v("patch")]),s._v(" 函数进行更新，然后再对比新旧 "),n("code",[s._v("children")]),s._v(" 的长度，如果新的 "),n("code",[s._v("children")]),s._v(" 更长，则说明有新的节点需要添加，否则说明有旧的节点需要移除。最终我们得到如下实现：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的 children 中有多个子节点")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SINGLE_VNODE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ChildrenFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NO_CHILDREN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的 children 中有多个子节点")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取公共长度，取新旧 children 长度较小的那一个")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevLen "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextLen "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" commonLength "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevLen "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" nextLen "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" nextLen "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" prevLen\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" commonLength"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 nextLen > prevLen，将多出来的元素添加")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextLen "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" prevLen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" commonLength"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextLen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevLen "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" nextLen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 prevLen > nextLen，将多出来的元素移除")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" commonLength"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevLen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/qqxxlxzwm6")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/qqxxlxzwm6",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("实际上，这个算法就是在没有 "),n("code",[s._v("key")]),s._v(" 时所采用的算法，该算法是存在优化空间的，下面我们将分析如何进一步优化。")]),s._v(" "),n("h2",{attrs:{id:"尽可能的复用-dom-元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#尽可能的复用-dom-元素"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E5%B0%BD%E5%8F%AF%E8%83%BD%E7%9A%84%E5%A4%8D%E7%94%A8-dom-%E5%85%83%E7%B4%A0",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 尽可能的复用 DOM 元素")]),s._v(" "),n("h3",{attrs:{id:"key-的作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#key-的作用"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#key-%E7%9A%84%E4%BD%9C%E7%94%A8",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" key 的作用")]),s._v(" "),n("p",[s._v("在上一小节中，我们通过减少 DOM 操作的次数使得更新的性能得到了提升，但它仍然存在可优化的空间，要明白如何优化，那首先我们需要知道问题出在哪里。还是拿上一节的例子来说，假设旧的 "),n("code",[s._v("children")]),s._v(" 如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("新的 "),n("code",[s._v("children")]),s._v(" 如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("我们来看一下，如果使用前面讲解的 "),n("code",[s._v("Diff")]),s._v(" 算法来更新这对新旧 "),n("code",[s._v("children")]),s._v(" 的话，会进行哪些操作：首先，旧 "),n("code",[s._v("children")]),s._v(" 的第一个节点和新 "),n("code",[s._v("children")]),s._v(" 的第一个节点进行比对("),n("code",[s._v("patch")]),s._v(")，即：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// vs")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("code",[s._v("patch")]),s._v(" 函数知道它们是相同的标签，所以只会更新 "),n("code",[s._v("VNodeData")]),s._v(" 和子节点，由于这两个标签都没有 "),n("code",[s._v("VNodeData")]),s._v("，所以只需要更新它们的子节点，旧的 "),n("code",[s._v("li")]),s._v(" 元素的子节点是文本节点 "),n("code",[s._v("'1'")]),s._v("，而新的 "),n("code",[s._v("li")]),s._v(" 标签的子节点是文本节点 "),n("code",[s._v("'3'")]),s._v("，所以最终会调用一次 "),n("code",[s._v("patchText")]),s._v(" 函数将 "),n("code",[s._v("li")]),s._v(" 标签的文本子节点由 "),n("code",[s._v("'1'")]),s._v(" 更新为 "),n("code",[s._v("'3'")]),s._v("。接着，使用旧 "),n("code",[s._v("children")]),s._v(" 的第二个节点和新 "),n("code",[s._v("children")]),s._v(" 的第二个节点进行比对，结果同样是调用一次 "),n("code",[s._v("patchText")]),s._v(" 函数用以更新 "),n("code",[s._v("li")]),s._v(" 标签的文本子节点。类似的，对于新旧 "),n("code",[s._v("children")]),s._v(" 的第三个节点同样也会调用一次 "),n("code",[s._v("patchText")]),s._v(" 函数更新其文本子节点。而这，就是问题所在，实际上我们通过观察新旧 "),n("code",[s._v("children")]),s._v(" 可以很容易的发现：新旧 "),n("code",[s._v("children")]),s._v(" 中的节点只有顺序是不同的，所以最佳的操作应该是"),n("strong",[s._v("通过移动元素的位置来达到更新的目的")]),s._v("。")]),s._v(" "),n("p",[s._v("既然移动元素是最佳期望，那么我们就需要思考一下，能否通过移动元素来完成更新？能够移动元素的关键在于：我们需要在新旧 "),n("code",[s._v("children")]),s._v(" 的节点中保存映射关系，以便我们能够在旧 "),n("code",[s._v("children")]),s._v(" 的节点中找到可复用的节点。这时候我们就需要给 "),n("code",[s._v("children")]),s._v(" 中的节点添加唯一标识，也就是我们常说的 "),n("code",[s._v("key")]),s._v("，在没有 "),n("code",[s._v("key")]),s._v(" 的情况下，我们是没办法知道新 "),n("code",[s._v("children")]),s._v(" 中的节点是否可以在旧 "),n("code",[s._v("children")]),s._v(" 中找到可复用的节点的，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-5.ba7c26fa.png",alt:"img"}})]),s._v(" "),n("p",[s._v("新旧 "),n("code",[s._v("children")]),s._v(" 中的节点都是 "),n("code",[s._v("li")]),s._v(" 标签，以新 "),n("code",[s._v("children")]),s._v(" 的第一个 "),n("code",[s._v("li")]),s._v(" 标签为例，你能说出在旧 "),n("code",[s._v("children")]),s._v(" 中哪一个 "),n("code",[s._v("li")]),s._v(" 标签可被它复用吗？不能，所以，为了明确的知道新旧 "),n("code",[s._v("children")]),s._v(" 中节点的映射关系，我们需要在 "),n("code",[s._v("VNode")]),s._v(" 创建伊始就为其添加唯一的标识，即 "),n("code",[s._v("key")]),s._v(" 属性。")]),s._v(" "),n("p",[s._v("我们可以在使用 "),n("code",[s._v("h")]),s._v(" 函数创建 "),n("code",[s._v("VNode")]),s._v(" 时，通过 "),n("code",[s._v("VNodeData")]),s._v(" 为即将创建的 "),n("code",[s._v("VNode")]),s._v(" 设置一个 "),n("code",[s._v("key")]),s._v("：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("但是为了 "),n("code",[s._v("diff")]),s._v(" 算法更加方便的读取一个 "),n("code",[s._v("VNode")]),s._v(" 的 "),n("code",[s._v("key")]),s._v("，我们应该在创建 "),n("code",[s._v("VNode")]),s._v(" 时将 "),n("code",[s._v("VNodeData")]),s._v(" 中的 "),n("code",[s._v("key")]),s._v(" 添加到 "),n("code",[s._v("VNode")]),s._v(" 本身，所以我们需要修改一下 "),n("code",[s._v("h")]),s._v(" 函数，如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" data "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" children "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回 VNode 对象")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    _isVNode"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    flags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    key"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" data "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    childFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    el"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("如上代码所示，我们在创建 "),n("code",[s._v("VNode")]),s._v(" 时，如果 "),n("code",[s._v("VNodeData")]),s._v(" 中存在 "),n("code",[s._v("key")]),s._v(" 属性，则我们会把其添加到 "),n("code",[s._v("VNode")]),s._v(" 对象本身。")]),s._v(" "),n("p",[s._v("现在，在创建 "),n("code",[s._v("VNode")]),s._v(" 时已经可以为 "),n("code",[s._v("VNode")]),s._v(" 添加唯一标识了，我们使用 "),n("code",[s._v("key")]),s._v(" 来修改之前的例子，如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧 children")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新 children")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("h")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("有了 "),n("code",[s._v("key")]),s._v(" 我们就能够明确的知道新旧 "),n("code",[s._v("children")]),s._v(" 中节点的映射关系，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-6.1e914878.png",alt:"img"}})]),s._v(" "),n("p",[s._v("知道了映射关系，我们就很容易判断新 "),n("code",[s._v("children")]),s._v(" 中的节点是否可被复用：只需要遍历新 "),n("code",[s._v("children")]),s._v(" 中的每一个节点，并去旧 "),n("code",[s._v("children")]),s._v(" 中寻找是否存在具有相同 "),n("code",[s._v("key")]),s._v(" 值的节点，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历新的 children")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧的 children")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果找到了具有相同 key 值的两个节点，则调用 `patch` 函数更新之")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里需要 break")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("这段代码中有两层嵌套的 "),n("code",[s._v("for")]),s._v(" 循环语句，外层循环用于遍历新 "),n("code",[s._v("children")]),s._v("，内层循环用于遍历旧 "),n("code",[s._v("children")]),s._v("，其目的是尝试寻找具有相同 "),n("code",[s._v("key")]),s._v(" 值的两个节点，如果找到了，则认为新 "),n("code",[s._v("children")]),s._v(" 中的节点可以复用旧 "),n("code",[s._v("children")]),s._v(" 中已存在的节点，这时我们仍然需要调用 "),n("code",[s._v("patch")]),s._v(" 函数对节点进行更新，如果新节点相对于旧节点的 "),n("code",[s._v("VNodeData")]),s._v(" 和子节点都没有变化，则 "),n("code",[s._v("patch")]),s._v(" 函数什么都不会做(这是优化的关键所在)，如果新节点相对于旧节点的 "),n("code",[s._v("VNodeData")]),s._v(" 或子节点有变化，则 "),n("code",[s._v("patch")]),s._v(" 函数保证了更新的正确性。")]),s._v(" "),n("h3",{attrs:{id:"找到需要移动的节点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#找到需要移动的节点"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E6%89%BE%E5%88%B0%E9%9C%80%E8%A6%81%E7%A7%BB%E5%8A%A8%E7%9A%84%E8%8A%82%E7%82%B9",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 找到需要移动的节点")]),s._v(" "),n("p",[s._v("现在我们已经找到了可复用的节点，并进行了合适的更新操作，下一步需要做的，就是判断一个节点是否需要移动以及如何移动。如何判断节点是否需要移动呢？为了弄明白这个问题，我们可以先考虑不需要移动的情况，当新旧 "),n("code",[s._v("children")]),s._v(" 中的节点顺序不变时，就不需要额外的移动操作，如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-react-1.7b07877f.png",alt:"img"}})]),s._v(" "),n("p",[s._v("上图中的数字代表着节点在旧 "),n("code",[s._v("children")]),s._v(" 中的索引，我们来尝试执行一下本节介绍的算法，看看会发生什么：")]),s._v(" "),n("ul",[n("li",[s._v("1、取出新 "),n("code",[s._v("children")]),s._v(" 的第一个节点，即 "),n("code",[s._v("li-a")]),s._v("，并尝试在旧 "),n("code",[s._v("children")]),s._v(" 中寻找 "),n("code",[s._v("li-a")]),s._v("，结果是我们找到了，并且 "),n("code",[s._v("li-a")]),s._v(" 在旧 "),n("code",[s._v("children")]),s._v(" 中的索引为 "),n("code",[s._v("0")]),s._v("。")]),s._v(" "),n("li",[s._v("2、取出新 "),n("code",[s._v("children")]),s._v(" 的第二个节点，即 "),n("code",[s._v("li-b")]),s._v("，并尝试在旧 "),n("code",[s._v("children")]),s._v(" 中寻找 "),n("code",[s._v("li-b")]),s._v("，也找到了，并且 "),n("code",[s._v("li-b")]),s._v(" 在旧 "),n("code",[s._v("children")]),s._v(" 中的索引为 "),n("code",[s._v("1")]),s._v("。")]),s._v(" "),n("li",[s._v("3、取出新 "),n("code",[s._v("children")]),s._v(" 的第三个节点，即 "),n("code",[s._v("li-c")]),s._v("，并尝试在旧 "),n("code",[s._v("children")]),s._v(" 中寻找 "),n("code",[s._v("li-c")]),s._v("，同样找到了，并且 "),n("code",[s._v("li-c")]),s._v(" 在旧 "),n("code",[s._v("children")]),s._v(" 中的索引为 "),n("code",[s._v("2")]),s._v("。")])]),s._v(" "),n("p",[s._v("总结一下我们在“寻找”的过程中，先后遇到的索引顺序为："),n("code",[s._v("0")]),s._v("->"),n("code",[s._v("1")]),s._v("->"),n("code",[s._v("2")]),s._v("。这是一个递增的顺序，这说明"),n("strong",[s._v("如果在寻找的过程中遇到的索引呈现递增趋势，则说明新旧 "),n("code",[s._v("children")]),s._v(" 中节点顺序相同，不需要移动操作")]),s._v("。相反的，"),n("strong",[s._v("如果在寻找的过程中遇到的索引值不呈现递增趋势，则说明需要移动操作")]),s._v("，举个例子，下图展示了新旧 "),n("code",[s._v("children")]),s._v(" 中的节点顺序不一致的情况：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-react-2.e6cef98d.png",alt:"img"}})]),s._v(" "),n("p",[s._v("我们同样执行一下本节介绍的算法，看看会发生什么：")]),s._v(" "),n("ul",[n("li",[s._v("1、取出新 "),n("code",[s._v("children")]),s._v(" 的第一个节点，即 "),n("code",[s._v("li-c")]),s._v("，并尝试在旧 "),n("code",[s._v("children")]),s._v(" 中寻找 "),n("code",[s._v("li-c")]),s._v("，结果是我们找到了，并且 "),n("code",[s._v("li-c")]),s._v(" 在旧 "),n("code",[s._v("children")]),s._v(" 中的索引为 "),n("code",[s._v("2")]),s._v("。")]),s._v(" "),n("li",[s._v("2、取出新 "),n("code",[s._v("children")]),s._v(" 的第二个节点，即 "),n("code",[s._v("li-a")]),s._v("，并尝试在旧 "),n("code",[s._v("children")]),s._v(" 中寻找 "),n("code",[s._v("li-a")]),s._v("，也找到了，并且 "),n("code",[s._v("li-a")]),s._v(" 在旧 "),n("code",[s._v("children")]),s._v(" 中的索引为 "),n("code",[s._v("0")]),s._v("。")])]),s._v(" "),n("p",[s._v("到了这里，"),n("strong",[s._v("递增")]),s._v("的趋势被打破了，我们在寻找的过程中先遇到的索引值是 "),n("code",[s._v("2")]),s._v("，接着又遇到了比 "),n("code",[s._v("2")]),s._v(" 小的 "),n("code",[s._v("0")]),s._v("，这说明"),n("strong",[s._v("在旧 "),n("code",[s._v("children")]),s._v(" 中 "),n("code",[s._v("li-a")]),s._v(" 的位置要比 "),n("code",[s._v("li-c")]),s._v(" 靠前，但在新的 "),n("code",[s._v("children")]),s._v(" 中 "),n("code",[s._v("li-a")]),s._v(" 的位置要比 "),n("code",[s._v("li-c")]),s._v(" 靠后")]),s._v("。这时我们就知道了 "),n("code",[s._v("li-a")]),s._v(" 是那个需要被移动的节点，我们接着往下执行。")]),s._v(" "),n("ul",[n("li",[s._v("3、取出新 "),n("code",[s._v("children")]),s._v(" 的第三个节点，即 "),n("code",[s._v("li-b")]),s._v("，并尝试在旧 "),n("code",[s._v("children")]),s._v(" 中寻找 "),n("code",[s._v("li-b")]),s._v("，同样找到了，并且 "),n("code",[s._v("li-b")]),s._v(" 在旧 "),n("code",[s._v("children")]),s._v(" 中的索引为 "),n("code",[s._v("1")]),s._v("。")])]),s._v(" "),n("p",[s._v("我们发现 "),n("code",[s._v("1")]),s._v(" 同样小于 "),n("code",[s._v("2")]),s._v("，这说明"),n("strong",[s._v("在旧 "),n("code",[s._v("children")]),s._v(" 中节点 "),n("code",[s._v("li-b")]),s._v(" 的位置也要比 "),n("code",[s._v("li-c")]),s._v(" 的位置靠前，但在新的 "),n("code",[s._v("children")]),s._v(" 中 "),n("code",[s._v("li-b")]),s._v(" 的位置要比 "),n("code",[s._v("li-c")]),s._v(" 靠后")]),s._v("。所以 "),n("code",[s._v("li-b")]),s._v(" 也需要被移动。")]),s._v(" "),n("p",[s._v("以上我们过程就是我们寻找需要移动的节点的过程，在这个过程中我们发现一个重要的数字："),n("code",[s._v("2")]),s._v("，是这个数字的存在才使得我们能够知道哪些节点需要移动，我们可以给这个数字一个名字，叫做："),n("strong",[s._v("寻找过程中在旧 "),n("code",[s._v("children")]),s._v(" 中所遇到的最大索引值")]),s._v("。如果在后续寻找的过程中发现存在索引值比"),n("strong",[s._v("最大索引值")]),s._v("小的节点，意味着该节点需要被移动。")]),s._v(" "),n("p",[s._v("实际上，这就是 "),n("code",[s._v("React")]),s._v(" 所使用的算法。我们可以使用一个叫做 "),n("code",[s._v("lastIndex")]),s._v(" 的变量存储寻找过程中遇到的最大索引值，并且它的初始值为 "),n("code",[s._v("0")]),s._v("，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用来存储寻找过程中遇到的最大索引值")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历新的 children")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧的 children")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果找到了具有相同 key 值的两个节点，则调用 `patch` 函数更新之")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" lastIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 需要移动")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 lastIndex")]),s._v("\n        lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" j\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里需要 break")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("如上代码中，变量 "),n("code",[s._v("j")]),s._v(" 是节点在旧 "),n("code",[s._v("children")]),s._v(" 中的索引，如果它小于 "),n("code",[s._v("lastIndex")]),s._v(" 则代表当前遍历到的节点需要移动，否则我们就使用 "),n("code",[s._v("j")]),s._v(" 的值更新 "),n("code",[s._v("lastIndex")]),s._v(" 变量的值，这就保证了 "),n("code",[s._v("lastIndex")]),s._v(" 所存储的总是我们在旧 "),n("code",[s._v("children")]),s._v(" 中所遇到的最大索引。")]),s._v(" "),n("h3",{attrs:{id:"移动节点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#移动节点"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E7%A7%BB%E5%8A%A8%E8%8A%82%E7%82%B9",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 移动节点")]),s._v(" "),n("p",[s._v("现在我们已经有办法找到需要移动的节点了，接下来要解决的问题就是：应该如何移动这些节点？为了弄明白这个问题，我们还是先来看下图：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-react-2.e6cef98d.png",alt:"img"}})]),s._v(" "),n("p",[s._v("新 "),n("code",[s._v("children")]),s._v(" 中的第一个节点是 "),n("code",[s._v("li-c")]),s._v("，它在旧 "),n("code",[s._v("children")]),s._v(" 中的索引为 "),n("code",[s._v("2")]),s._v("，由于 "),n("code",[s._v("li-c")]),s._v(" 是新 "),n("code",[s._v("children")]),s._v(" 中的第一个节点，所以它始终都是不需要移动的，只需要调用 "),n("code",[s._v("patch")]),s._v(" 函数更新即可，如下图：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-react-3.dbc9ff62.png",alt:"img"}})]),s._v(" "),n("p",[s._v("这里我们需要注意的，也是非常重要的一点是："),n("strong",[s._v("新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 节点在经过 "),n("code",[s._v("patch")]),s._v(" 函数之后，也将存在对真实 DOM 元素的引用")]),s._v("。下面的代码可以证明这一点：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 拿到 el 元素，注意这时要让 nextVNode.el 也引用该元素")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("beforeCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("如上代码所示，这是 "),n("code",[s._v("patchElement")]),s._v(" 函数中的一段代码，在更新"),n("strong",[s._v("新旧")]),s._v(" "),n("code",[s._v("VNode")]),s._v(" 时，新的 "),n("code",[s._v("VNode")]),s._v(" 通过旧 "),n("code",[s._v("VNode")]),s._v(" 的 "),n("code",[s._v("el")]),s._v(" 属性实现了对真实 DOM 的引用。为什么说这一点很关键呢？继续往下看。")]),s._v(" "),n("p",[n("code",[s._v("li-c")]),s._v(" 节点更新完毕，接下来是新 "),n("code",[s._v("children")]),s._v(" 中的第二个节点 "),n("code",[s._v("li-a")]),s._v("，它在旧 "),n("code",[s._v("children")]),s._v(" 中的索引是 "),n("code",[s._v("0")]),s._v("，由于 "),n("code",[s._v("0 < 2")]),s._v(" 所以 "),n("code",[s._v("li-a")]),s._v(" 是需要移动的节点，那应该怎么移动呢？很简单，新 "),n("code",[s._v("children")]),s._v(" 中的节点顺序实际上就是更新完成之后，节点应有的最终顺序，通过观察新 "),n("code",[s._v("children")]),s._v(" 可知，新 "),n("code",[s._v("children")]),s._v(" 中 "),n("code",[s._v("li-a")]),s._v(" 节点的前一个节点是 "),n("code",[s._v("li-c")]),s._v("，所以我们的移动方案应该是："),n("strong",[s._v("把 "),n("code",[s._v("li-a")]),s._v(" 节点对应的真实 DOM 移动到 "),n("code",[s._v("li-c")]),s._v(" 节点所对应真实 DOM 的后面")]),s._v("。这里的关键在于"),n("strong",[s._v("移动的是真实 DOM 而非 VNode")]),s._v("。所以我们需要分别拿到 "),n("code",[s._v("li-c")]),s._v(" 和 "),n("code",[s._v("li-a")]),s._v(" 所对应的真实 DOM，这时就体现出了上面提到的关键点："),n("strong",[s._v("新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 已经存在对真实 DOM 的引用了")]),s._v("，所以我们很容易就能拿到 "),n("code",[s._v("li-c")]),s._v(" 对应的真实 DOM。对于获取 "),n("code",[s._v("li-a")]),s._v(" 节点所对应的真实 DOM 将更加容易，由于我们当前遍历到的节点就是 "),n("code",[s._v("li-a")]),s._v("，所以我们可以直接通过旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 节点拿到其真实 DOM 的引用，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用来存储寻找过程中遇到的最大索引值")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历新的 children")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧的 children")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果找到了具有相同 key 值的两个节点，则调用 `patch` 函数更新之")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" lastIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 需要移动")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// refNode 是为了下面调用 insertBefore 函数准备的")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" refNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nextSibling\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 insertBefore 函数移动 DOM")]),s._v("\n        container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 lastIndex")]),s._v("\n        lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" j\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里需要 break")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("观察如上代码段中高亮的部分，实际上这两句代码即可完成 DOM 的移动操作。我们来对这两句代码的工作方式做一个详细的解释，假设我们当前正在更新的节点是 "),n("code",[s._v("li-a")]),s._v("，那么如上代码中的变量 "),n("code",[s._v("i")]),s._v(" 就是节点 "),n("code",[s._v("li-a")]),s._v(" 在新 "),n("code",[s._v("children")]),s._v(" 中的位置索引。所以 "),n("code",[s._v("nextChildren[i - 1]")]),s._v(" 就是 "),n("code",[s._v("li-a")]),s._v(" 节点的前一个节点，也就是 "),n("code",[s._v("li-c")]),s._v(" 节点，由于 "),n("code",[s._v("li-c")]),s._v(" 节点存在对真实 DOM 的引用，所以我们可以通过其 "),n("code",[s._v("el")]),s._v(" 属性拿到真实 DOM，到了这一步，"),n("code",[s._v("li-c")]),s._v(" 节点的所对应的真实 DOM 我们已经得到了。但不要忘记我们的目标是："),n("strong",[s._v("把 "),n("code",[s._v("li-a")]),s._v(" 节点对应的真实 DOM 移动到 "),n("code",[s._v("li-c")]),s._v(" 节点所对应真实 DOM 的后面")]),s._v("，所以我们的思路应该是"),n("strong",[s._v("想办法拿到 "),n("code",[s._v("li-c")]),s._v(" 节点对应真实 DOM 的下一个兄弟节点，并把 "),n("code",[s._v("li-a")]),s._v(" 节点所对应真实 DOM 插到该节点的前面")]),s._v("，这才能保证移动的正确性。所以上面的代码中常量 "),n("code",[s._v("refNode")]),s._v(" 引用是 "),n("code",[s._v("li-c")]),s._v(" 节点对应真实 DOM 的下一个兄弟节点。拿到了正确的 "),n("code",[s._v("refNode")]),s._v(" 之后，我们就可以调用容器元素的 "),n("code",[s._v("insertBefore")]),s._v(" 方法来完成 DOM 的移动了，移动的对象就是 "),n("code",[s._v("li-a")]),s._v(" 节点所对应的真实 DOM，由于当前正在处理的就是 "),n("code",[s._v("li-a")]),s._v(" 节点，所以 "),n("code",[s._v("prevVNode")]),s._v(" 就是旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 节点，它是存在对真实 DOM 的引用的，即 "),n("code",[s._v("prevVNode.el")]),s._v("。万事俱备，移动工作将顺利完成。说起来有些抽象，用一张图可以更加清晰的描述这个过程：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-react-4.7443f559.png",alt:"img"}})]),s._v(" "),n("p",[s._v("观察不同颜色的线条，关键在于我们要找到 "),n("code",[s._v("VNode")]),s._v(" 所引用的真实 DOM，然后把真实 DOM 按照新 "),n("code",[s._v("children")]),s._v(" 中节点间的关系进行移动，由于新 "),n("code",[s._v("children")]),s._v(" 中节点的顺序就是最终的目标顺序，所以移动之后的真实 DOM 的顺序也会是最终的目标顺序。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/4x6qo5w34w")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/4x6qo5w34w",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"添加新元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加新元素"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E6%B7%BB%E5%8A%A0%E6%96%B0%E5%85%83%E7%B4%A0",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 添加新元素")]),s._v(" "),n("p",[s._v("在上面的讲解中，我们一直忽略了一个问题，即新 "),n("code",[s._v("children")]),s._v(" 中可能包含那些不能够通过移动来完成更新的节点，例如新 "),n("code",[s._v("children")]),s._v(" 中包含了一个全新的节点，这意味着在旧 "),n("code",[s._v("children")]),s._v(" 中是找不到该节点的，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-react-5.d12b2ed9.png",alt:"img"}})]),s._v(" "),n("p",[s._v("节点 "),n("code",[s._v("li-d")]),s._v(" 在旧的 "),n("code",[s._v("children")]),s._v(" 中是不存在的，所以当我们尝试在旧的 "),n("code",[s._v("children")]),s._v(" 中寻找 "),n("code",[s._v("li-d")]),s._v(" 节点时，是找不到可复用节点的，这时就没办法通过移动节点来完成更新操作，所以我们应该使用 "),n("code",[s._v("mount")]),s._v(" 函数将 "),n("code",[s._v("li-d")]),s._v(" 节点作为全新的 "),n("code",[s._v("VNode")]),s._v(" 挂载到合适的位置。")]),s._v(" "),n("p",[s._v("我们将面临两个问题，第一个问题是：如何知道一个节点在旧的 "),n("code",[s._v("children")]),s._v(" 中是不存在的？这个问题比较好解决，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    find "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      find "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" lastIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 需要移动")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" refNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nextSibling\n        container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 lastIndex")]),s._v("\n        lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" j\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("如上高亮代码所示，我们在原来的基础上添加了变量 "),n("code",[s._v("find")]),s._v("，它将作为一个标志，代表新 "),n("code",[s._v("children")]),s._v(" 中的节点是否存在于旧 "),n("code",[s._v("children")]),s._v(" 中，初始值为 "),n("code",[s._v("false")]),s._v("，一旦在旧 "),n("code",[s._v("children")]),s._v(" 中寻找到了相应的节点，我们就将变量 "),n("code",[s._v("find")]),s._v(" 的值设置为 "),n("code",[s._v("true")]),s._v("，所以"),n("strong",[s._v("如果内层循环结束后，变量 "),n("code",[s._v("find")]),s._v(" 的值仍然为 "),n("code",[s._v("false")]),s._v("，则说明在旧的 "),n("code",[s._v("children")]),s._v(" 中找不到可复用的节点")]),s._v("，这时我们就需要使用 "),n("code",[s._v("mount")]),s._v(" 函数将当前遍历到的节点挂载到容器元素，如下高亮的代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    find "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      find "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" lastIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 需要移动")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" refNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nextSibling\n        container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 lastIndex")]),s._v("\n        lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" j\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("find"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载新节点")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("当内层循环结束之后，如果变量 "),n("code",[s._v("find")]),s._v(" 的值仍然为 "),n("code",[s._v("false")]),s._v("，则说明 "),n("code",[s._v("nextVNode")]),s._v(" 是全新的节点，所以我们直接调用 "),n("code",[s._v("mount")]),s._v(" 函数将其挂载到容器元素 "),n("code",[s._v("container")]),s._v(" 中。但是很遗憾，这段代码不能正常的工作，这是因为"),n("strong",[s._v("我们之前编写的 "),n("code",[s._v("mountElement")]),s._v(" 函数存在缺陷，它总是调用 "),n("code",[s._v("appendChild")]),s._v(" 方法插入 DOM 元素")]),s._v("，所以上面的代码始终会把新的节点作为容器元素的最后一个子节点添加到末尾，这不是我们想要的结果，我们应该按照节点在新的 "),n("code",[s._v("children")]),s._v(" 中的位置将其添加到正确的地方，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-react-5.d12b2ed9.png",alt:"img"}})]),s._v(" "),n("p",[s._v("新的 "),n("code",[s._v("li-d")]),s._v(" 节点紧跟在 "),n("code",[s._v("li-a")]),s._v(" 节点的后面，所以正确的做法应该是把 "),n("code",[s._v("li-d")]),s._v(" 节点添加到 "),n("code",[s._v("li-a")]),s._v(" 节点所对应真实 DOM 的后面才行。如何才能保证 "),n("code",[s._v("li-d")]),s._v(" 节点始终被添加到 "),n("code",[s._v("li-a")]),s._v(" 节点的后面呢？答案是使用 "),n("code",[s._v("insertBefore")]),s._v(" 方法代替 "),n("code",[s._v("appendChild")]),s._v(" 方法，我们可以找到 "),n("code",[s._v("li-a")]),s._v(" 节点所对应真实 DOM 的下一个节点，然后将 "),n("code",[s._v("li-d")]),s._v(" 节点插入到该节点之前即可，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    find "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      find "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" lastIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 需要移动")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" refNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nextSibling\n        container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 lastIndex")]),s._v("\n        lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" j\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("find"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载新节点")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 找到 refNode")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" refNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n      i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nextSibling\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("我们先找到当前遍历到的节点的前一个节点，即 "),n("code",[s._v("nextChildren[i - 1]")]),s._v("，接着找到该节点所对应真实 DOM 的下一个子节点作为 "),n("code",[s._v("refNode")]),s._v("，即 "),n("code",[s._v("nextChildren[i - 1].el.nextSibling")]),s._v("，但是由于当前遍历到的节点有可能是新 "),n("code",[s._v("children")]),s._v(" 的第一个节点，这时 "),n("code",[s._v("i - 1 < 0")]),s._v("，这将导致 "),n("code",[s._v("nextChildren[i - 1]")]),s._v(" 不存在，所以当 "),n("code",[s._v("i - 1 < 0")]),s._v(" 时，我们就知道"),n("strong",[s._v("新的节点是作为第一个节点而存在的")]),s._v("，这时我们只需要把新的节点插入到最前面即可，所以我们使用 "),n("code",[s._v("prevChildren[0].el")]),s._v(" 作为 "),n("code",[s._v("refNode")]),s._v("。最后调用 "),n("code",[s._v("mount")]),s._v(" 函数挂载新节点时，我们为其传递了第四个参数 "),n("code",[s._v("refNode")]),s._v("，当 "),n("code",[s._v("refNode")]),s._v(" 存在时，我们应该使用 "),n("code",[s._v("insertBefore")]),s._v(" 方法代替 "),n("code",[s._v("appendChild")]),s._v(" 方法，这就需要我们修改之前实现的 "),n("code",[s._v("mount")]),s._v(" 函数了 "),n("code",[s._v("mountElement")]),s._v(" 函数，为它们添加第四个参数，如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// mount 函数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" flags "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" vnode\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ELEMENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载普通标签")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// mountElement 函数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n\n  refNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("这样，当新 "),n("code",[s._v("children")]),s._v(" 中存在全新的节点时，我们就能够保证正确的将其添加到容器元素内了。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/54215km3vn")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/54215km3vn",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("实际上，所有与挂载和 "),n("code",[s._v("patch")]),s._v(" 相关的函数都应该接收 "),n("code",[s._v("refNode")]),s._v(" 作为参数，这里我们旨在让读者掌握核心思路，避免讲解过程的冗杂。")]),s._v(" "),n("h3",{attrs:{id:"移除不存在的元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#移除不存在的元素"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E7%A7%BB%E9%99%A4%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E5%85%83%E7%B4%A0",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 移除不存在的元素")]),s._v(" "),n("p",[s._v("除了要将全新的节点添加到容器元素之外，我们还应该把已经不存在了的节点移除，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-react-6.4ad1a4c1.png",alt:"img"}})]),s._v(" "),n("p",[s._v("可以看出，新的 "),n("code",[s._v("children")]),s._v(" 中已经不存在 "),n("code",[s._v("li-c")]),s._v(" 节点了，所以我们应该想办法将 "),n("code",[s._v("li-c")]),s._v(" 节点对应的真实 DOM 从容器元素内移除。但我们之前编写的算法还不能完成这个任务，因为外层循环遍历的是新的 "),n("code",[s._v("children")]),s._v("，所以外层循环会执行两次，第一次用于处理 "),n("code",[s._v("li-a")]),s._v(" 节点，第二次用于处理 "),n("code",[s._v("li-b")]),s._v(" 节点，此时整个算法已经运行结束了。所以，我们需要在外层循环结束之后，再优先遍历一次旧的 "),n("code",[s._v("children")]),s._v("，并尝试拿着旧 "),n("code",[s._v("children")]),s._v(" 中的节点去新 "),n("code",[s._v("children")]),s._v(" 中寻找相同的节点，如果找不到则说明该节点已经不存在于新 "),n("code",[s._v("children")]),s._v(" 中了，这时我们应该将该节点对应的真实 DOM 移除，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    find "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("find"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载新节点")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移除已经不存在的节点")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧的节点")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 拿着旧 VNode 去新 children 中寻找相同的节点")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" has "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("nextVNode")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("has"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果没有找到相同的节点，则移除")]),s._v("\n    container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/844lp3mq72")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/844lp3mq72",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("至此，第一个完整的 "),n("code",[s._v("Diff")]),s._v(" 算法我们就讲解完毕了，这个算法就是 "),n("code",[s._v("React")]),s._v(" 所采用的 "),n("code",[s._v("Diff")]),s._v(" 算法。但该算法仍然存在可优化的空间，我们将在下一小节继续讨论。")]),s._v(" "),n("h2",{attrs:{id:"另一个思路-双端比较"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#另一个思路-双端比较"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%80%9D%E8%B7%AF-%E5%8F%8C%E7%AB%AF%E6%AF%94%E8%BE%83",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 另一个思路 - 双端比较")]),s._v(" "),n("h3",{attrs:{id:"双端比较的原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双端比较的原理"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E5%8F%8C%E7%AB%AF%E6%AF%94%E8%BE%83%E7%9A%84%E5%8E%9F%E7%90%86",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 双端比较的原理")]),s._v(" "),n("p",[s._v("刚刚提到了 "),n("code",[s._v("React")]),s._v(" 的 "),n("code",[s._v("Diff")]),s._v(" 算法是存在优化空间的，想要要找到优化的关键点，我们首先要知道它存在什么问题。来看下图：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-1.216b174f.png",alt:"img"}})]),s._v(" "),n("p",[s._v("在这个例子中，我们可以通过肉眼观察从而得知最优的解决方案应该是："),n("strong",[s._v("把 "),n("code",[s._v("li-c")]),s._v(" 节点对应的真实 DOM 移动到最前面即可")]),s._v("，只需要一次移动即可完成更新。然而，"),n("code",[s._v("React")]),s._v(" 所采用的 "),n("code",[s._v("Diff")]),s._v(" 算法在更新如上案例的时候，会进行两次移动：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-2.65a1bd51.png",alt:"img"}})]),s._v(" "),n("p",[s._v("显然，这种做法必然会造成额外的性能开销。那么有没有办法来避免这种多余的 DOM 移动呢？当然有办法，那就是我们接下来要介绍的一个新的思路："),n("strong",[s._v("双端比较")]),s._v("。")]),s._v(" "),n("p",[s._v("所谓双端比较，就是同时从新旧 "),n("code",[s._v("children")]),s._v(" 的两端开始进行比较的一种方式，所以我们需要四个索引值，分别指向新旧 "),n("code",[s._v("children")]),s._v(" 的两端，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-3.933b8708.png",alt:"img"}})]),s._v(" "),n("p",[s._v("我们使用四个变量 "),n("code",[s._v("oldStartIdx")]),s._v("、"),n("code",[s._v("oldEndIdx")]),s._v("、"),n("code",[s._v("newStartIdx")]),s._v(" 以及 "),n("code",[s._v("newEndIdx")]),s._v(" 分别存储旧 "),n("code",[s._v("children")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 的两个端点的位置索引，可以用如下代码来表示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" newEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("除了位置索引之外，我们还需要拿到四个位置索引所指向的 "),n("code",[s._v("VNode")]),s._v("：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" oldStartVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("oldStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" oldEndVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" newStartVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" newEndVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("有了这些基础信息，我们就可以开始执行双端比较了，在一次比较过程中，最多需要进行四次比较：")]),s._v(" "),n("ul",[n("li",[s._v("1、使用旧 "),n("code",[s._v("children")]),s._v(" 的头一个 "),n("code",[s._v("VNode")]),s._v(" 与新 "),n("code",[s._v("children")]),s._v(" 的头一个 "),n("code",[s._v("VNode")]),s._v(" 比对，即 "),n("code",[s._v("oldStartVNode")]),s._v(" 和 "),n("code",[s._v("newStartVNode")]),s._v(" 比较对。")]),s._v(" "),n("li",[s._v("2、使用旧 "),n("code",[s._v("children")]),s._v(" 的最后一个 "),n("code",[s._v("VNode")]),s._v(" 与新 "),n("code",[s._v("children")]),s._v(" 的最后一个 "),n("code",[s._v("VNode")]),s._v(" 比对，即 "),n("code",[s._v("oldEndVNode")]),s._v(" 和 "),n("code",[s._v("newEndVNode")]),s._v(" 比对。")]),s._v(" "),n("li",[s._v("3、使用旧 "),n("code",[s._v("children")]),s._v(" 的头一个 "),n("code",[s._v("VNode")]),s._v(" 与新 "),n("code",[s._v("children")]),s._v(" 的最后一个 "),n("code",[s._v("VNode")]),s._v(" 比对，即 "),n("code",[s._v("oldStartVNode")]),s._v(" 和 "),n("code",[s._v("newEndVNode")]),s._v(" 比对。")]),s._v(" "),n("li",[s._v("4、使用旧 "),n("code",[s._v("children")]),s._v(" 的最后一个 "),n("code",[s._v("VNode")]),s._v(" 与新 "),n("code",[s._v("children")]),s._v(" 的头一个 "),n("code",[s._v("VNode")]),s._v(" 比对，即 "),n("code",[s._v("oldEndVNode")]),s._v(" 和 "),n("code",[s._v("newStartVNode")]),s._v(" 比对。")])]),s._v(" "),n("p",[s._v("在如上四步比对过程中，试图去寻找可复用的节点，即拥有相同 "),n("code",[s._v("key")]),s._v(" 值的节点。这四步比对中，在任何一步中寻找到了可复用节点，则会停止后续的步骤，可以用下图来描述在一次比对过程中的四个步骤：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-4.b1c3cc2a.png",alt:"img"}})]),s._v(" "),n("p",[s._v("如下代码是该比对过程的实现：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤一：oldStartVNode 和 newStartVNode 比对")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤二：oldEndVNode 和 newEndVNode 比对")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤三：oldStartVNode 和 newEndVNode 比对")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤四：oldEndVNode 和 newStartVNode 比对")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("每次比对完成之后，如果在某一步骤中找到了可复用的节点，我们就需要将相应的位置索引"),n("strong",[s._v("后移/前移")]),s._v("一位。以上图为例：")]),s._v(" "),n("ul",[n("li",[s._v("第一步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-d")]),s._v(" 进行比对，由于二者 "),n("code",[s._v("key")]),s._v(" 值不同，所以不可复用，什么都不做。")]),s._v(" "),n("li",[s._v("第二步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-d")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 进行比对，同样不可复用，什么都不做。")]),s._v(" "),n("li",[s._v("第三步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 进行比对，什么都不做。")]),s._v(" "),n("li",[s._v("第四部：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-d")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-d")]),s._v(" 进行比对，由于这两个节点拥有相同的 "),n("code",[s._v("key")]),s._v(" 值，所以我们在这次比对的过程中找到了可复用的节点。")])]),s._v(" "),n("p",[s._v("由于我们在第四步的比对中找到了可复用的节点，即 "),n("code",[s._v("oldEndVNode")]),s._v(" 和 "),n("code",[s._v("newStartVNode")]),s._v(" 拥有相同的 "),n("code",[s._v("key")]),s._v(" 值，这说明："),n("strong",[n("code",[s._v("li-d")]),s._v(" 节点所对应的真实 DOM 原本是最后一个子节点，并且更新之后它应该变成第一个子节点")]),s._v("。所以我们需要把 "),n("code",[s._v("li-d")]),s._v(" 所对应的真实 DOM 移动到最前方即可：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤一：oldStartVNode 和 newStartVNode 比对")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤二：oldEndVNode 和 newEndVNode 比对")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤三：oldStartVNode 和 newEndVNode 比对")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤四：oldEndVNode 和 newStartVNode 比对")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先调用 patch 函数完成更新")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新完成后，将容器中最后一个子节点移动到最前面，使其成为第一个子节点")]),s._v("\n  container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新索引，指向下一个位置")]),s._v("\n  oldEndVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  newStartVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("这一步更新完成之后，新的索引关系可以用下图来表示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-5.0c42d714.png",alt:"img"}})]),s._v(" "),n("p",[s._v("由于 "),n("code",[s._v("li-d")]),s._v(" 节点所对应的真实 DOM 元素已经更新完成且被移动，所以现在真实 DOM 的顺序是："),n("code",[s._v("li-d")]),s._v("、"),n("code",[s._v("li-a")]),s._v("、"),n("code",[s._v("li-b")]),s._v("、"),n("code",[s._v("li-c")]),s._v("，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-6.80733f9c.png",alt:"img"}})]),s._v(" "),n("p",[s._v("这样，一次比对就完成了，并且位置索引已经更新，我们需要进行下轮的比对，那么什么时候比对才能结束呢？如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤一：oldStartVNode 和 newStartVNode 比对")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤二：oldEndVNode 和 newEndVNode 比对")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤三：oldStartVNode 和 newEndVNode 比对")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤四：oldEndVNode 和 newStartVNode 比对")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("我们将每一轮比对所做的工作封装到一个 "),n("code",[s._v("while")]),s._v(" 循环内，循环结束的条件是要么 "),n("code",[s._v("oldStartIdx")]),s._v(" 大于 "),n("code",[s._v("oldEndIdx")]),s._v("，要么 "),n("code",[s._v("newStartIdx")]),s._v(" 大于 "),n("code",[s._v("newEndIdx")]),s._v("。")]),s._v(" "),n("p",[s._v("还是观察上图，我们继续进行第二轮的比对：")]),s._v(" "),n("ul",[n("li",[s._v("第一步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-b")]),s._v(" 进行比对，由于二者 "),n("code",[s._v("key")]),s._v(" 值不同，所以不可复用，什么都不做。")]),s._v(" "),n("li",[s._v("第二步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 进行比对，此时，由于二者拥有相同的 "),n("code",[s._v("key")]),s._v("，所以是可复用的节点，但是由于二者在新旧 "),n("code",[s._v("children")]),s._v(" 中都是最末尾的一个节点，所以是不需要进行移动操作的，只需要调用 "),n("code",[s._v("patch")]),s._v(" 函数更新即可，同时将相应的索引前移一位，如下高亮代码所示：")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤一：oldStartVNode 和 newStartVNode 比对")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤二：oldEndVNode 和 newEndVNode 比对")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 patch 函数更新")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新索引，指向下一个位置")]),s._v("\n    oldEndVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    newEndVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤三：oldStartVNode 和 newEndVNode 比对")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤四：oldEndVNode 和 newStartVNode 比对")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先调用 patch 函数完成更新")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新完成后，将容器中最后一个子节点移动到最前面，使其成为第一个子节点")]),s._v("\n    container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新索引，指向下一个位置")]),s._v("\n    oldEndVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    newStartVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("p",[s._v("由于没有进行移动操作，所以在这一轮比对中，真实 DOM 的顺序没有发生变化，下图表示了在这一轮比对结束之后的状况：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-7.6474272b.png",alt:"img"}})]),s._v(" "),n("p",[s._v("由于此时循环条件成立，所以会继续下一轮的比较：")]),s._v(" "),n("ul",[n("li",[s._v("第一步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-b")]),s._v(" 进行比对，由于二者 "),n("code",[s._v("key")]),s._v(" 值不同，所以不可复用，什么都不做。")]),s._v(" "),n("li",[s._v("第二步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-b")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 进行比对，不可复用，什么都不做。")]),s._v(" "),n("li",[s._v("第三步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 进行比对，此时，我们找到了可复用的节点。")])]),s._v(" "),n("p",[s._v("这一次满足的条件是："),n("strong",[n("code",[s._v("oldStartVNode.key === newEndVNode.key")])]),s._v("，这说明："),n("strong",[n("code",[s._v("li-a")]),s._v(" 节点所对应的真实 DOM 原本是第一个子节点，但现在变成了“最后”一个子节点")]),s._v("，这里的“最后”一词使用了引号，这是因为大家要明白“最后”的真正含义，它并不是指真正意义上的最后一个节点，而是指当前索引范围内的最后一个节点。所以移动操作也是比较明显的，我们将 "),n("code",[s._v("oldStartVNode")]),s._v(" 对应的真实 DOM 移动到 "),n("code",[s._v("oldEndVNode")]),s._v(" 所对应真实 DOM 的后面即可，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤一：oldStartVNode 和 newStartVNode 比对")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤二：oldEndVNode 和 newEndVNode 比对")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 patch 函数更新")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新索引，指向下一个位置")]),s._v("\n    oldEndVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    newEndVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤三：oldStartVNode 和 newEndVNode 比对")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 patch 函数更新")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 oldStartVNode.el 移动到 oldEndVNode.el 的后面，也就是 oldEndVNode.el.nextSibling 的前面")]),s._v("\n    container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n      oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nextSibling\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新索引，指向下一个位置")]),s._v("\n    oldStartVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("oldStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    newEndVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤四：oldEndVNode 和 newStartVNode 比对")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先调用 patch 函数完成更新")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新完成后，将容器中最后一个子节点移动到最前面，使其成为第一个子节点")]),s._v("\n    container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新索引，指向下一个位置")]),s._v("\n    oldEndVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    newStartVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br")])]),n("p",[s._v("在这一步的更新中，真实 DOM 的顺序是有变化的，"),n("code",[s._v("li-a")]),s._v(" 节点对应的真实 DOM 被移到了 "),n("code",[s._v("li-b")]),s._v(" 节点对应真实 DOM 的后面，同时由于位置索引也在相应的移动，所以在这一轮更新之后，现在的结果看上去应该如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-8.562f3899.png",alt:"img"}})]),s._v(" "),n("p",[s._v("现在 "),n("code",[s._v("oldStartIdx")]),s._v(" 和 "),n("code",[s._v("oldEndIdx")]),s._v(" 指向了同一个位置，即旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-b")]),s._v(" 节点。同样的 "),n("code",[s._v("newStartIdx")]),s._v(" 和 "),n("code",[s._v("newEndIdx")]),s._v(" 也指向了同样的位置，即新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-b")]),s._v("。由于此时仍然满足循环条件，所以会继续下一轮的比对：")]),s._v(" "),n("ul",[n("li",[s._v("第一步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-b")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-b")]),s._v(" 进行比对，二者拥有相同的 "),n("code",[s._v("key")]),s._v("，可复用。")])]),s._v(" "),n("p",[s._v("此时，在第一步的时候就已经找到了可复用的节点，满足的条件是："),n("strong",[s._v("oldStartVNode.key === newStartVNode.key")]),s._v("，但是由于该节点无论是在新 "),n("code",[s._v("children")]),s._v(" 中还是旧 "),n("code",[s._v("children")]),s._v(" 中，都是“第一个”节点，所以位置不需要变化，即不需要移动操作，只需要调用 "),n("code",[s._v("patch")]),s._v(" 函数更新即可，同时也要将相应的位置所以下移一位，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 步骤一：oldStartVNode 和 newStartVNode 比对")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 patch 函数更新")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新索引，指向下一个位置")]),s._v("\n    oldStartVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("oldStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    newStartVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("在这一轮更新完成之后，虽然没有进行任何移动操作，但是我们发现，真实 DOM 的顺序，已经与新 "),n("code",[s._v("children")]),s._v(" 中节点的顺序保持一致了，也就是说我们圆满的完成了目标，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-9.532508e2.png",alt:"img"}})]),s._v(" "),n("p",[s._v("另外，观察上图可以发现，此时 "),n("code",[s._v("oldStartIdx")]),s._v(" 和 "),n("code",[s._v("newStartIdx")]),s._v(" 分别比 "),n("code",[s._v("oldEndIdx")]),s._v(" 和 "),n("code",[s._v("newEndIdx")]),s._v(" 要大，所以这将是最后一轮的比对，循环将终止，以上就是双端比较的核心原理。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/xvmqn58jqw")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/xvmqn58jqw",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"双端比较的优势"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双端比较的优势"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E5%8F%8C%E7%AB%AF%E6%AF%94%E8%BE%83%E7%9A%84%E4%BC%98%E5%8A%BF",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 双端比较的优势")]),s._v(" "),n("p",[s._v("理解了双端比较的原理之后，我们来看一下双端比较所带来的优势，还是拿之前的例子，如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-react-2.e6cef98d.png",alt:"img"}})]),s._v(" "),n("p",[s._v("前面分析过，如果采用 "),n("code",[s._v("React")]),s._v(" 的方式来对上例进行更新，则会执行两次移动操作，首先会把 "),n("code",[s._v("li-a")]),s._v(" 节点对应的真实 DOM 移动到 "),n("code",[s._v("li-c")]),s._v(" 节点对应的真实 DOM 的后面，接着再把 "),n("code",[s._v("li-b")]),s._v(" 节点所对应的真实 DOM 移动到 "),n("code",[s._v("li-a")]),s._v(" 节点所对应真实 DOM 的后面，即：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-2.65a1bd51.png",alt:"img"}})]),s._v(" "),n("p",[s._v("接下来我们采用双端比较的方式，来完成上例的更新，看看会有什么不同，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-10.2a5c7497.png",alt:"img"}})]),s._v(" "),n("p",[s._v("我们按照双端比较的思路开始第一轮比较，按步骤执行：")]),s._v(" "),n("ul",[n("li",[s._v("第一步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 进行比对，由于二者 "),n("code",[s._v("key")]),s._v(" 值不同，所以不可复用，什么都不做。")]),s._v(" "),n("li",[s._v("第二步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-b")]),s._v(" 进行比对，不可复用，什么都不做。")]),s._v(" "),n("li",[s._v("第三步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-b")]),s._v(" 进行比对，不可复用，什么都不做。")]),s._v(" "),n("li",[s._v("第四步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 进行比对，此时，两个节点拥有相同的 "),n("code",[s._v("key")]),s._v(" 值，可复用。")])]),s._v(" "),n("p",[s._v("到了第四步，对于 "),n("code",[s._v("li-c")]),s._v(" 节点来说，它原本是整个 "),n("code",[s._v("children")]),s._v(" 的最后一个子节点，但是现在变成了新 "),n("code",[s._v("children")]),s._v(" 的第一个子节点，按照上端比较的算法逻辑，此时会把 "),n("code",[s._v("li-c")]),s._v(" 节点所对应的真实 DOM 移动到 "),n("code",[s._v("li-a")]),s._v(" 节点所对应真实 DOM 的前面，即：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-11.dfc7860f.png",alt:"img"}})]),s._v(" "),n("p",[s._v("可以看到，我们只通过一次 DOM 移动，就使得真实 DOM 的顺序与新 "),n("code",[s._v("children")]),s._v(" 中节点的顺序一致，完成了更新。换句话说，双端比较在移动 DOM 方面更具有普适性，不会因为 DOM 结构的差异而产生影响。")]),s._v(" "),n("h3",{attrs:{id:"非理想情况的处理方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#非理想情况的处理方式"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E9%9D%9E%E7%90%86%E6%83%B3%E6%83%85%E5%86%B5%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 非理想情况的处理方式")]),s._v(" "),n("p",[s._v("在之前的讲解中，我们所采用的是较理想的例子，换句话说，在每一轮的比对过程中，总会满足四个步骤中的一步，但实际上大多数情况下并不会这么理想，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-12.06bed8e2.png",alt:"img"}})]),s._v(" "),n("p",[s._v("上图中 ①、②、③、④ 这四步中的每一步比对，都无法找到可复用的节点，这时应该怎么办呢？没办法，我们只能拿新 "),n("code",[s._v("children")]),s._v(" 中的第一个节点尝试去旧 "),n("code",[s._v("children")]),s._v(" 中寻找，试图找到拥有相同 "),n("code",[s._v("key")]),s._v(" 值的节点，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧 children，试图寻找与 newStartVNode 拥有相同 key 值的元素")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" idxInOld "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("findIndex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("node")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("这段代码增加了 "),n("code",[s._v("else")]),s._v(" 分支，用来处理在四个步骤的比对中都没有成功的情况，我们遍历了旧的 "),n("code",[s._v("children")]),s._v("，并试图找到与新 "),n("code",[s._v("children")]),s._v(" 中第一个节点拥有相同 "),n("code",[s._v("key")]),s._v(" 值的节点，并把该节点在旧 "),n("code",[s._v("children")]),s._v(" 中的位置索引记录下来，存储到 "),n("code",[s._v("idxInOld")]),s._v(" 常量中。这里的关键点并不在于我们找到了位置索引，而是要明白**在旧的 "),n("code",[s._v("children")]),s._v(" 中找到了与新 "),n("code",[s._v("children")]),s._v(" 中第一个节点拥有相同 "),n("code",[s._v("key")]),s._v(" 值的节点，意味着什么？**这意味着："),n("strong",[s._v("旧 "),n("code",[s._v("children")]),s._v(" 中的这个节点所对应的真实 DOM 在新 "),n("code",[s._v("children")]),s._v(" 的顺序中，已经变成了第一个节点")]),s._v("。所以我们需要把该节点所对应的真实 DOM 移动到最前头，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-13.b88d7abb.png",alt:"img"}})]),s._v(" "),n("p",[s._v("可以用如下高亮的代码来实现这个过程：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧 children，试图寻找与 newStartVNode 拥有相同 key 值的元素")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" idxInOld "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("findIndex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("node")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("idxInOld "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// vnodeToMove 就是在旧 children 中找到的节点，该节点所对应的真实 DOM 应该被移动到最前面")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" vnodeToMove "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("idxInOld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 patch 函数完成更新")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnodeToMove"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 把 vnodeToMove.el 移动到最前面，即 oldStartVNode.el 的前面")]),s._v("\n      container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnodeToMove"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由于旧 children 中该位置的节点所对应的真实 DOM 已经被移动，所以将其设置为 undefined")]),s._v("\n      prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("idxInOld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 newStartIdx 下移一位")]),s._v("\n    newStartVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("p",[s._v("如果 "),n("code",[s._v("idxInOld")]),s._v(" 存在，说明我们在旧 "),n("code",[s._v("children")]),s._v(" 中找到了相应的节点，于是我们拿到该节点，将其赋值给 "),n("code",[s._v("vnodeToMove")]),s._v(" 常量，意味着该节点是需要被移动的节点，同时调用 "),n("code",[s._v("patch")]),s._v(" 函数完成更新，接着将该节点所对应的真实 DOM 移动到最前面，也就是 "),n("code",[s._v("oldStartVNode.el")]),s._v(" 前面，由于该节点所对应的真实 DOM 已经被移动，所以我们将该节点置为 "),n("code",[s._v("undefined")]),s._v("，这是很关键的异步，最后我们将 "),n("code",[s._v("newStartIdx")]),s._v(" 下移一位，准备进行下一轮的比较。我们用一张图来描述这个过程结束之后的状态：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-14.ca021a85.png",alt:"img"}})]),s._v(" "),n("p",[s._v("这里大家需要注意，由上图可知，由于原本旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-b")]),s._v(" 节点，此时已经变成了 "),n("code",[s._v("undefined")]),s._v("，所以在后续的比对过程中 "),n("code",[s._v("oldStartIdx")]),s._v(" 或 "),n("code",[s._v("oldEndIdx")]),s._v(" 二者当中总会有一个位置索引优先达到这个位置，也就是说此时 "),n("code",[s._v("oldStartVNode")]),s._v(" 或 "),n("code",[s._v("oldEndVNode")]),s._v(" 两者之一可能是 "),n("code",[s._v("undefined")]),s._v("，这说明该位置的元素在之前的比对中被移动到别的位置了，所以不再需要处理该位置的节点，这时我们需要跳过这一位置，所以我们需要增加如下高亮代码来完善我们的算法：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    oldStartVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("oldStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    oldEndVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" idxInOld "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("findIndex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("node")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("idxInOld "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" vnodeToMove "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("idxInOld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnodeToMove"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("idxInOld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v("\n      container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnodeToMove"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    newStartVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("当 "),n("code",[s._v("oldStartVNode")]),s._v(" 或 "),n("code",[s._v("oldEndVNode")]),s._v(" 不存在时，说明该节点已经被移动了，我们只需要跳过该位置即可。以上就是我们所说的双端比较的非理想情况的处理方式。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/vjp265qxnl")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/vjp265qxnl",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"添加新元素-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加新元素-2"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E6%B7%BB%E5%8A%A0%E6%96%B0%E5%85%83%E7%B4%A0-2",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 添加新元素")]),s._v(" "),n("p",[s._v("在上一小节中，我们尝试拿着新 "),n("code",[s._v("children")]),s._v(" 中的第一个节点去旧 "),n("code",[s._v("children")]),s._v(" 中寻找与之拥有相同 "),n("code",[s._v("key")]),s._v(" 值的可复用节点，然后并非总是能够找得到，当新的 "),n("code",[s._v("children")]),s._v(" 中拥有全新的节点时，就会出现找不到的情况，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-15.08ec9ab8.png",alt:"img"}})]),s._v(" "),n("p",[s._v("在新 "),n("code",[s._v("children")]),s._v(" 中，节点 "),n("code",[s._v("li-d")]),s._v(" 是一个全新的节点。在这个例子中 ①、②、③、④ 这四步的比对仍然无法找到可复用节点，所以我们会尝试拿着新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-d")]),s._v(" 节点去旧的 "),n("code",[s._v("children")]),s._v(" 寻找与之拥有相同 "),n("code",[s._v("key")]),s._v(" 值的节点，结果很显然，我们无法找到这样的节点。这时说明该节点是一个全新的节点，我们应该将其挂载到容器中，不过应该将其挂载到哪里呢？稍作分析即可得出结论，由于 "),n("code",[s._v("li-d")]),s._v(" 节点的位置索引是 "),n("code",[s._v("newStartIdx")]),s._v("，这说明 "),n("code",[s._v("li-d")]),s._v(" 节点是当前这一轮比较中的“第一个”节点，所以只要把它挂载到位于 "),n("code",[s._v("oldStartIdx")]),s._v(" 位置的节点所对应的真实 DOM 前面就可以了，即 "),n("code",[s._v("oldStartVNode.el")]),s._v("，我们只需要增加一行代码即可实现该功能：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    oldStartVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("oldStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    oldEndVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" idxInOld "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("findIndex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("node")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("idxInOld "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" vnodeToMove "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("idxInOld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnodeToMove"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("idxInOld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v("\n      container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnodeToMove"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用 mount 函数挂载新节点")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("newStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    newStartVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("p",[s._v("如上高亮代码所示，如果条件 "),n("code",[s._v("idxInOld >= 0")]),s._v(" 不成立，则说明 "),n("code",[s._v("newStartVNode")]),s._v(" 是一个全新的节点，我们添加了 "),n("code",[s._v("else")]),s._v(" 语句块用来处理全新的节点，在 "),n("code",[s._v("else")]),s._v(" 语句块内调用 "),n("code",[s._v("mount")]),s._v(" 函数挂载该全新的节点，根据上面的分析，我们只需要把该节点挂载到 "),n("code",[s._v("oldStartVNode.el")]),s._v(" 之前即可，所以我们传递给 "),n("code",[s._v("mount")]),s._v(" 函数的第四个参数就是 "),n("code",[s._v("oldStartVNode.el")]),s._v("。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/n7y46ojv4m")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/n7y46ojv4m",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("但这么做真的就完美了吗？不是的，来看下面这个例子，我们更换新 "),n("code",[s._v("children")]),s._v(" 中节点的顺序，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-16.ce5c6d2b.png",alt:"img"}})]),s._v(" "),n("p",[s._v("与之前的案例不同，在之前的案例中新 "),n("code",[s._v("children")]),s._v(" 中节点的顺序为 "),n("code",[s._v("li-d")]),s._v("、"),n("code",[s._v("li-a")]),s._v("、"),n("code",[s._v("li-c")]),s._v(" 最后是 "),n("code",[s._v("li-b")]),s._v("，我们观察上图可以发现，本例中新 "),n("code",[s._v("children")]),s._v(" 的节点顺序为 "),n("code",[s._v("li-d")]),s._v("、"),n("code",[s._v("li-a")]),s._v("、"),n("code",[s._v("li-b")]),s._v(" 最后是 "),n("code",[s._v("li-c")]),s._v("，那么顺序的不同会对结果产生影响吗？想弄明白这个问题很简单，我们只需要按照双端比较算法的思路来模拟执行一次即可得出结论：")]),s._v(" "),n("ul",[n("li",[s._v("第一步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-d")]),s._v(" 进行比对，由于二者 "),n("code",[s._v("key")]),s._v(" 值不同，所以不可复用，什么都不做。")]),s._v(" "),n("li",[s._v("第二步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 进行比对，此时，二者拥有相同的 "),n("code",[s._v("key")]),s._v(" 值。")])]),s._v(" "),n("p",[s._v("在第二步中找到了可复用节点，接着使用 "),n("code",[s._v("patch")]),s._v(" 函数对该节点进行更新，同时将相应的位置索引下移一位，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-17.b4d9f7a4.png",alt:"img"}})]),s._v(" "),n("p",[s._v("接着，开始下一轮的比较，重新从第一步开始。结果和上一轮相似，同样在第二步中找到可复用的节点，所以在在这一轮的更新完成之后，其状态如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-18.cc8a1fae.png",alt:"img"}})]),s._v(" "),n("p",[s._v("由上图可知，此时的 "),n("code",[s._v("oldStartIdx")]),s._v(" 与 "),n("code",[s._v("oldEndIdx")]),s._v(" 已经重合，它们的值都是 "),n("code",[s._v("0")]),s._v("，但是此时仍然满足循环条件，所以比对不会停止，会继续下一轮的比较。在新的一轮比较中，仍然会在第二步找到可复用的节点，所以在这一轮更新完成之后 "),n("code",[s._v("oldEndIdx")]),s._v(" 将比 "),n("code",[s._v("oldStartIdx")]),s._v(" 的值要小，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-19.1d4087f6.png",alt:"img"}})]),s._v(" "),n("p",[s._v("此时 "),n("code",[s._v("oldEndIdx")]),s._v(" 的值将变成 "),n("code",[s._v("-1")]),s._v("，它要小于 "),n("code",[s._v("oldStartIdx")]),s._v(" 的值，这时循环的条件不在满足，意味着更新完成。然而通过上图可以很容易的发现 "),n("code",[s._v("li-d")]),s._v(" 节点被遗漏了，它没有得到任何的处理，通过这个案例我们意识到了之前的算法是存在缺陷的，为了弥补这个缺陷，我们需要在循环终止之后，对 "),n("code",[s._v("oldEndIdx")]),s._v(" 和 "),n("code",[s._v("oldStartIdx")]),s._v(" 的值进行检查，如果在循环结束之后 "),n("code",[s._v("oldEndIdx")]),s._v(" 的值小于 "),n("code",[s._v("oldStartIdx")]),s._v(" 的值则说明新的 "),n("code",[s._v("children")]),s._v(" 中存在"),n("strong",[s._v("还没有被处理的全新节点")]),s._v("，这时我们应该调用 "),n("code",[s._v("mount")]),s._v(" 函数将其挂载到容器元素中，观察上图可知，我们只需要把这些全新的节点添加到 "),n("code",[s._v("oldStartIdx")]),s._v(" 索引所指向的节点之前即可，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" oldStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 添加新节点")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("我们在循环结束之后，立即判断 "),n("code",[s._v("oldEndIdx")]),s._v(" 的值是否小于 "),n("code",[s._v("oldStartIdx")]),s._v(" 的值，如果条件成立，则需要使用 "),n("code",[s._v("for")]),s._v(" 循环把所有位于 "),n("code",[s._v("newStartIdx")]),s._v(" 到 "),n("code",[s._v("newEndIdx")]),s._v(" 之间的元素都当做全新的节点添加到容器元素中，这样我们就完整的实现了完整的添加新节点的功能。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/ryryx6n42m")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/ryryx6n42m",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"移除不存在的元素-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#移除不存在的元素-2"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E7%A7%BB%E9%99%A4%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E5%85%83%E7%B4%A0-2",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 移除不存在的元素")]),s._v(" "),n("p",[s._v("对于双端比较，最后一个需要考虑的情况是：当有元素被移除时的情况，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-20.a80cbba0.png",alt:"img"}})]),s._v(" "),n("p",[s._v("观察上图可以发现，在新 "),n("code",[s._v("children")]),s._v(" 中 "),n("code",[s._v("li-b")]),s._v(" 节点已经不存在了，所以完整的更新过程应该包含："),n("strong",[s._v("移除已不存在节点所对应真实 DOM 的功能")]),s._v("。为了找到哪些节点需要移除，我们首先还是按照双端比较的算法步骤模拟执行一下即可：")]),s._v(" "),n("ul",[n("li",[s._v("第一步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-a")]),s._v(" 进行比对，此时，二者拥有相同的 "),n("code",[s._v("key")]),s._v(" 值。")])]),s._v(" "),n("p",[s._v("在第一轮的第一步比对中，我们就找到了可复用节点，所以此时会调用 "),n("code",[s._v("patch")]),s._v(" 函数更新该节点，并更新相应的索引值，可以用下图表示这一轮更新完成之后算法所处的状态：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-21.f4b83431.png",alt:"img"}})]),s._v(" "),n("p",[s._v("这时 "),n("code",[s._v("newStartIdx")]),s._v(" 和 "),n("code",[s._v("newEndIdx")]),s._v(" 的值相等，都是 "),n("code",[s._v("1")]),s._v("，不过循环的条件仍然满足，所以会立即进行下一轮比较：")]),s._v(" "),n("ul",[n("li",[s._v("第一步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-b")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 进行比对，由于二者 "),n("code",[s._v("key")]),s._v(" 值不同，所以不可复用，什么都不做。")]),s._v(" "),n("li",[s._v("第二步：拿旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 和新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-c")]),s._v(" 进行比对，此时，二者拥有相同的 "),n("code",[s._v("key")]),s._v(" 值。")])]),s._v(" "),n("p",[s._v("在第二步的比对中找到了可复用节点 "),n("code",[s._v("li-c")]),s._v("，接着更新该节点，并将 "),n("code",[s._v("oldEndIdx")]),s._v(" 和 "),n("code",[s._v("newEndIdx")]),s._v(" 分别前移一位，最终结果如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-vue2-22.cb427ed4.png",alt:"img"}})]),s._v(" "),n("p",[s._v("由于此时 "),n("code",[s._v("newEndIdx")]),s._v(" 的值小于 "),n("code",[s._v("newStartIdx")]),s._v(" 的值，所以循环将终止，但是通过上图可以发现，旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-b")]),s._v(" 节点没有得到被处理的机会，我们应该将其移除才行，然后本次循环结束之后并不满足条件 "),n("code",[s._v("oldEndIdx < oldStartIdx")]),s._v(" 而是满足条件 "),n("code",[s._v("newEndIdx < newStartIdx")]),s._v("，基于此，我们可以认为"),n("strong",[s._v("循环结束后，一旦满足条件 "),n("code",[s._v("newEndIdx < newStartId")]),s._v(" 则说明有元素需要被移除")]),s._v("。我们增加如下代码来实现该功能：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" oldStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 添加新节点")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldStartVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("newEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移除操作")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" oldStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("如上高亮代码所示，增加 "),n("code",[s._v("else...if")]),s._v(" 语句块，用来处理当 "),n("code",[s._v("newEndIdx < newStartIdx")]),s._v(" 时的情况，我们同样开启一个 "),n("code",[s._v("for")]),s._v(" 循环，把所有位于 "),n("code",[s._v("oldStartIdx")]),s._v(" 和 "),n("code",[s._v("oldEndIdx")]),s._v(" 之间的节点所对应的真实 DOM 全部移除即可。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/9jnvjj1mko")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/9jnvjj1mko",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v("以上就是相对完整的双端比较算法的实现，这是  所采用的算法，借鉴于开源项目："),n("a",{attrs:{href:"https://github.com/snabbdom/snabbdom",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),n("a",{attrs:{href:"https://github.com/joelrich/citojs",target:"_blank",rel:"noopener noreferrer"}},[s._v("citojs"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("。")]),s._v(" "),n("h2",{attrs:{id:"inferno-所采用的核心-diff-算法及原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#inferno-所采用的核心-diff-算法及原理"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#inferno-%E6%89%80%E9%87%87%E7%94%A8%E7%9A%84%E6%A0%B8%E5%BF%83-diff-%E7%AE%97%E6%B3%95%E5%8F%8A%E5%8E%9F%E7%90%86",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" inferno 所采用的核心 Diff 算法及原理")]),s._v(" "),n("p",[s._v("在 "),n("code",[s._v("Vue3")]),s._v(" 中将采用另外一种核心 "),n("code",[s._v("Diff")]),s._v(" 算法，它借鉴于 "),n("a",{attrs:{href:"https://github.com/localvoid/ivi",target:"_blank",rel:"noopener noreferrer"}},[s._v("ivi"),n("OutboundLink")],1)]),s._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/localvoid/ivi",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 和 "),n("a",{attrs:{href:"https://github.com/infernojs/inferno",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff-benchmark.6d4927ac.png",alt:"img"}})]),s._v(" "),n("p",[s._v("这张图来自 "),n("a",{attrs:{href:"https://krausest.github.io/js-framework-benchmark/current.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("js-framework-benchmark"),n("OutboundLink")],1)]),s._v(" "),n("p",[n("a",{attrs:{href:"https://krausest.github.io/js-framework-benchmark/current.html",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("，从上图中可以看到，在 DOM 操作的各个方面，"),n("code",[s._v("ivi")]),s._v(" 和 "),n("code",[s._v("inferno")]),s._v(" 都要稍优于 "),n("code",[s._v("vue2")]),s._v(" 的双端比较。但总体上的性能表现并不是单纯的由核心 "),n("code",[s._v("Diff")]),s._v(" 算法来决定的，我们在前面章节的讲解中已经了解到的了一些优化手段，例如"),n("strong",[s._v("在创建 "),n("code",[s._v("VNode")]),s._v(" 时就确定其类型，以及在 "),n("code",[s._v("mount/patch")]),s._v(" 的过程中采用位运算来判断一个 "),n("code",[s._v("VNode")]),s._v(" 的类型")]),s._v("，在这个基础之上再配合核心的 "),n("code",[s._v("Diff")]),s._v(" 算法，才使得性能上产生一定的优势，这也是 "),n("code",[s._v("Vue3")]),s._v(" 接纳这种算法的原因之一，本节我们就着重讨论该核心 "),n("code",[s._v("Diff")]),s._v(" 算法的实现原理。")]),s._v(" "),n("h3",{attrs:{id:"相同的前置和后置元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#相同的前置和后置元素"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E7%9B%B8%E5%90%8C%E7%9A%84%E5%89%8D%E7%BD%AE%E5%92%8C%E5%90%8E%E7%BD%AE%E5%85%83%E7%B4%A0",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 相同的前置和后置元素")]),s._v(" "),n("p",[s._v("实际上本节介绍的 "),n("code",[s._v("Diff")]),s._v(" 算法最早应用于两个不同文本之间的差异比较，在文本 "),n("code",[s._v("Diff")]),s._v(" 中，真正进行核心的 "),n("code",[s._v("Diff")]),s._v(" 算法之前，会有一个预处理的过程，例如可以先对两个文本进行“相等”比较：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("text1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" text2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("如果两个文本相等，则无需进行真正的 "),n("code",[s._v("Diff")]),s._v("，预处理的好处之一就是"),n("strong",[s._v("在某些情况下能够避免 "),n("code",[s._v("Diff")]),s._v(" 算法的执行")]),s._v("，还有比这更加高效的方式吗？当然，这是一个简单的情形，除此之外，在文本的 "),n("code",[s._v("Diff")]),s._v(" 中还有其他的预处理过程，其中就包含：去除"),n("strong",[s._v("相同的前缀和后缀")]),s._v("。什么意思呢？假设我们有如下两个文本：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("TEXT1: I use vue for app development\ntext2: I use react for app development\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("我们通过肉眼可以很容易的发现，这两段文本头部和尾部分别有一段相同的文本：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff1.7cd0d7d1.png",alt:"img"}})]),s._v(" "),n("p",[s._v("所以真正需要进行 "),n("code",[s._v("Diff")]),s._v(" 的部分就变成了：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("text1: vue\ntext2: react\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("这么做的好处是：在某些情况下，我们能够轻松的判断出单独的文本插入和删除，例如下面的例子：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("text1: I like you\ntext2: I like you too\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("这两个文本在经过去除相同的前缀和后缀之后将变成：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("text1:\ntext2: too\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("所以当预处理结束之后，如果 "),n("code",[s._v("text1")]),s._v(" 为空且 "),n("code",[s._v("text2")]),s._v(" 不为空，则可以认为这是一个文本插入，相反的，如果将这两个文本互换位置就是一个文本删除的案例：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("text1: I like you too\ntext2: I like you\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("则经过预处理之后将变成：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("text1: too\ntext2:\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("这代表文本被删除。")]),s._v(" "),n("p",[s._v("很显然，该预处理过程在上例的情况下能够避免 "),n("code",[s._v("Diff")]),s._v(" 算法的执行，从而提高 "),n("code",[s._v("Diff")]),s._v(" 效率。当然，换一个角度来看的话，这本身也是 "),n("code",[s._v("Diff")]),s._v(" 策略的一部分，不过这显然要更高效。所以我们能否将此预处理步骤应用到 "),n("code",[s._v("VNode")]),s._v(" 的 "),n("code",[s._v("Diff")]),s._v(" 中呢？当然可以，来看下面的例子：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff2.469b3f9b.png",alt:"img"}})]),s._v(" "),n("p",[s._v("如上图所示，新旧 "),n("code",[s._v("children")]),s._v(" 拥有相同的前缀节点和后缀节点，对于前缀节点，我们可以建立一个索引，指向新旧 "),n("code",[s._v("children")]),s._v(" 中的第一个节点，并逐步向后遍历，直到遇到两个拥有不同 "),n("code",[s._v("key")]),s._v(" 值的节点为止，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新相同的前缀节点")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// j 为指向新旧 children 中第一个节点的索引")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// while 循环向后遍历，直到遇到拥有不同 key 值的节点为止")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 patch 函数更新")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n  prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("可以用下图描述这一步操作完成之后的状态：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff3.58e3c241.png",alt:"img"}})]),s._v(" "),n("p",[s._v("这里大家需要注意的是，当 "),n("code",[s._v("while")]),s._v(" 循环终止时，索引 "),n("code",[s._v("j")]),s._v(" 的值为 "),n("code",[s._v("1")]),s._v("。接着，我们需要处理的是相同的后缀节点，由于新旧 "),n("code",[s._v("children")]),s._v(" 中节点的数量可能不同，所以我们需要两个索引分别指向新旧 "),n("code",[s._v("children")]),s._v(" 的最后一个节点，并逐步向前遍历，直到遇到两个拥有不同 "),n("code",[s._v("key")]),s._v(" 值的节点为止，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新相同的后缀节点")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指向旧 children 最后一个节点的索引")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" prevEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指向新 children 最后一个节点的索引")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" nextEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\nprevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("prevEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nnextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// while 循环向前遍历，直到遇到拥有不同 key 值的节点为止")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 patch 函数更新")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  prevEnd"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n  nextEnd"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n  prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("prevEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("可以用下图来表示这一步更新完成之后的状态：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff4.b6517d9f.png",alt:"img"}})]),s._v(" "),n("p",[s._v("同样需要注意的是，在这一步更新完成之后 "),n("code",[s._v("prevEnd")]),s._v(" 的值为 "),n("code",[s._v("0")]),s._v("，"),n("code",[s._v("nextEnd")]),s._v(" 的值为 "),n("code",[s._v("1")]),s._v("。实际上三个索引 "),n("code",[s._v("j")]),s._v("、"),n("code",[s._v("prevEnd")]),s._v(" 和 "),n("code",[s._v("nextEnd")]),s._v(" 的值至关重要，它们之间的大小关系反映了新旧 "),n("code",[s._v("children")]),s._v(" 的节点状况。前面我们在讲解文本 "),n("code",[s._v("Diff")]),s._v(" 的时候曾说过，当“去掉”相同的前缀和后缀之后，如果旧文本为空，且新文本不为空，则说明有新的文本内容被添加，反之则说明有旧的文本被移除。现在三个索引的值如下：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("j: 1\nprevEnd: 0\nnextEnd: 1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("我们发现 "),n("code",[s._v("j > prevEnd")]),s._v(" 并且 "),n("code",[s._v("j <= nextEnd")]),s._v("，这说明当新旧 "),n("code",[s._v("children")]),s._v(" 中相同的前缀和后缀被更新之后，旧 "),n("code",[s._v("children")]),s._v(" 中的节点已经被更新完毕了，而新 "),n("code",[s._v("children")]),s._v(" 中仍然有剩余节点，通过上图可以发现，新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-d")]),s._v(" 节点，就是这个剩余的节点。实际上新 "),n("code",[s._v("children")]),s._v(" 中位于 "),n("code",[s._v("j")]),s._v(" 到 "),n("code",[s._v("nextEnd")]),s._v(" 之间的所有节点都应该是新插入的节点：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff5.edd80c32.png",alt:"img"}})]),s._v(" "),n("p",[s._v("那么应该将这些新的节点插入到什么位置呢？观察上图，从新 "),n("code",[s._v("children")]),s._v(" 中的节点顺序可以发现，新的节点都出现在 "),n("code",[s._v("li-b")]),s._v(" 节点的前面，所以我们可以使用一个循环遍历索引 "),n("code",[s._v("j -> nextEnd")]),s._v(" 之间的节点，并逐个将其插入到 "),n("code",[s._v("li-b")]),s._v(" 节点之前，这样当循环结束之后，新的节点就被插入到了正确的位置。我们还能发现 "),n("code",[s._v("li-b")]),s._v(" 节点的位置可以用 "),n("code",[s._v("nextEnd + 1")]),s._v(" 表示，最终我们可以使用如下代码来实现节点的插入：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 满足条件，则说明从 j -> nextEnd 之间的节点应作为新节点插入")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" prevEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 所有新节点应该插入到位于 nextPos 位置的节点的前面")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextPos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" refNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n    nextPos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nextPos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 采用 while 循环，调用 mount 函数挂载节点")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("再来看如下案例：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff6.a882df3d.png",alt:"img"}})]),s._v(" "),n("p",[s._v("在这个案例中，当“去掉”相同的前缀和后缀之后，三个索引的值为：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("j: 1\nprevEnd: 1\nnextEnd: 0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("这时条件 "),n("code",[s._v("j > nextEnd")]),s._v(" 并且 "),n("code",[s._v("j <= prevEnd")]),s._v(" 成立，通过上图可以很容的发现，旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-b")]),s._v(" 节点应该被移除，实际上更加通用的规则应该是：在旧 "),n("code",[s._v("children")]),s._v(" 中有位于索引 "),n("code",[s._v("j")]),s._v(" 到 "),n("code",[s._v("prevEnd")]),s._v(" 之间的节点，都应该被移除。如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff7.df9450ee.png",alt:"img"}})]),s._v(" "),n("p",[s._v("代码实现起来也很简单，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" prevEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// j -> nextEnd 之间的节点应该被添加")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextPos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" refNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n    nextPos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nextPos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// j -> prevEnd 之间的节点应该被移除")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" prevEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("现在我们来观察一下总体的代码结构：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// while 循环向后遍历，直到遇到拥有不同 key 值的节点为止")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 patch 函数更新")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// while 循环向前遍历，直到遇到拥有不同 key 值的节点为止")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 patch 函数更新")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  prevEnd"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n  nextEnd"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 满足条件，则说明从 j -> nextEnd 之间的节点应作为新节点插入")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" prevEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// j -> nextEnd 之间的节点应该被添加")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// j -> prevEnd 之间的节点应该被移除")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("p",[s._v("观察如上高亮的代码，我们发现，在两个 "),n("code",[s._v("while")]),s._v(" 循环中，索引 "),n("code",[s._v("j")]),s._v(" 和 索引 "),n("code",[s._v("prevEnd")]),s._v("、"),n("code",[s._v("nextEnd")]),s._v(" 是以“从两端向中间靠拢”的趋势在变化的，而在两个 "),n("code",[s._v("while")]),s._v(" 循环结束之后，我们会根据这三个索引的大小关系来决定应该做什么样的操作。现在我们思考一个问题，假设在第一个 "),n("code",[s._v("while")]),s._v(" 循环结束之后，索引 "),n("code",[s._v("j")]),s._v(" 的值已经大于 "),n("code",[s._v("prevEnd")]),s._v(" 或 "),n("code",[s._v("nextEnd")]),s._v("，那么还有必须执行第二个 "),n("code",[s._v("while")]),s._v(" 循环吗？答案是没有必要，这是因为一旦索引 "),n("code",[s._v("j")]),s._v(" 大于 "),n("code",[s._v("prevEnd")]),s._v(" 则说明旧 "),n("code",[s._v("children")]),s._v(" 中的所有节点都已经参与了 "),n("code",[s._v("patch")]),s._v("，类似的，如果索引 "),n("code",[s._v("j")]),s._v(" 大于 "),n("code",[s._v("nextEnd")]),s._v(" 则说明新 "),n("code",[s._v("children")]),s._v(" 中的所有节点都已经参与了 "),n("code",[s._v("patch")]),s._v("，这时当然没有必要再执行后续的操作了。所以出于性能的考虑，我们应该避免没有必要的代码执行，为了达到目的，可以使用 "),n("code",[s._v("javascript")]),s._v(" 中的 "),n("code",[s._v("label")]),s._v(" 语句，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("outer"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" prevEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v(" outer\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新相同的后缀节点")]),s._v("\n  prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("prevEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    prevEnd"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n    nextEnd"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" prevEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v(" outer\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("prevEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("我们定义了 "),n("code",[s._v("label")]),s._v(" 名字为 "),n("code",[s._v("outer")]),s._v(" 的 "),n("code",[s._v("label")]),s._v(" 语句块，并分别在两个 "),n("code",[s._v("while")]),s._v(" 循环中添加了判断语句，无论在哪个循环中，只要索引 "),n("code",[s._v("j")]),s._v(" 的值大于了 "),n("code",[s._v("prevEnd")]),s._v(" 或 "),n("code",[s._v("nextEnd")]),s._v(" 二者之一，我们就 "),n("code",[s._v("break")]),s._v(" 该语句块，从而避免了无用的代码执行。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/5yo3z824vp")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/5yo3z824vp",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"判断是否需要进行-dom-移动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#判断是否需要进行-dom-移动"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C-dom-%E7%A7%BB%E5%8A%A8",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 判断是否需要进行 DOM 移动")]),s._v(" "),n("p",[s._v("刚刚我们讲解了一个很重要的预处理思路：“去掉”相同的前置/后置节点。并且我们分析了在一些情况下这种预处理操作能够避免真正 "),n("code",[s._v("Diff")]),s._v(" 算法的执行：通过判断索引的大小关系，能够提前知道哪些元素被添加，哪些元素被移除。但这毕竟属于一种特殊情况，大部分情况下可能未必如此理想，来看如下案例：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff8.f618edee.png",alt:"img"}})]),s._v(" "),n("p",[s._v("观察上图中新旧 "),n("code",[s._v("children")]),s._v(" 中节点的顺序，我们发现，这个案例在应用预处理步骤之后，只有 "),n("code",[s._v("li-a")]),s._v(" 节点和 "),n("code",[s._v("li-e")]),s._v(" 节点能够被提前 "),n("code",[s._v("patch")]),s._v("。换句话说在这种情况下没有办法简单的通过预处理就能够结束 "),n("code",[s._v("Diff")]),s._v(" 逻辑。这时我们就需要进行下一步操作，实际上无论是 "),n("code",[s._v("React")]),s._v(" 的 "),n("code",[s._v("Diff")]),s._v(" 算法，还是 "),n("code",[s._v("Vue2(snabbdom)")]),s._v(" 的 "),n("code",[s._v("Diff")]),s._v(" 算法，其重点无非就是："),n("strong",[s._v("判断是否有节点需要移动，以及应该如何移动")]),s._v("和"),n("strong",[s._v("寻找出那些需要被添加或移除")]),s._v("的节点，而本节我们所讲解的算法也不例外，所以接下来的任务就是：判断那些节点需要移动，以及如何移动。")]),s._v(" "),n("p",[s._v("为了让事情更直观我们把该案例在应用预处理之后的状态用下图描述出来：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff9.c4746f37.png",alt:"img"}})]),s._v(" "),n("p",[s._v("观察上图可以发现，此时索引 "),n("code",[s._v("j")]),s._v(" 既不大于 "),n("code",[s._v("prevEnd")]),s._v(" 也不大于 "),n("code",[s._v("nextEnd")]),s._v("，所以如下代码将得不到执行：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 满足条件，则说明从 j -> nextEnd 之间的节点应作为新节点插入")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" prevEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// j -> nextEnd 之间的节点应该被添加")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// j -> prevEnd 之间的节点应该被移除")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("我们需要为这段代码添加 "),n("code",[s._v("else")]),s._v(" 语句块，用来处理该案例的情况，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 满足条件，则说明从 j -> nextEnd 之间的节点应作为新节点插入")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" prevEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// j -> nextEnd 之间的节点应该被添加")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// j -> prevEnd 之间的节点应该被移除")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在这里编写处理逻辑")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("知道了应该在哪里编写处理逻辑，那么接下来我们就讲解一下该算法的思路。首先，我们需要构造一个数组 "),n("code",[s._v("source")]),s._v("，该数组的长度等于新 "),n("code",[s._v("children")]),s._v(" 在经过预处理之后剩余未处理节点的数量，并且该数组中每个元素的初始值为 "),n("code",[s._v("-1")]),s._v("，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff10.f2a5a3e6.png",alt:"img"}})]),s._v(" "),n("p",[s._v("我们可以通过如下代码完成 "),n("code",[s._v("source")]),s._v(" 数组的构造：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" prevEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 构造 source 数组")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextLeft "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新 children 中剩余未处理节点的数量")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" source "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextLeft"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("那么这个数组的作用是什么呢？通过上图可以发现，该数组中的每一个元素分别与新 "),n("code",[s._v("children")]),s._v(" 中剩余未处理的节点对应，实际上 "),n("code",[s._v("source")]),s._v(" 数组将用来存储"),n("strong",[s._v("新 "),n("code",[s._v("children")]),s._v(" 中的节点在旧 "),n("code",[s._v("children")]),s._v(" 中的位置，后面将会使用它计算出一个最长递增子序列，并用于 DOM 移动")]),s._v("。如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff11.48afbeb3.png",alt:"img"}})]),s._v(" "),n("p",[s._v("我们可以通过两层 "),n("code",[s._v("for")]),s._v(" 循环来完成这个工作，外层循环用于遍历旧 "),n("code",[s._v("children")]),s._v("，内层循环用于遍历新 "),n("code",[s._v("children")]),s._v("：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevStart "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" j\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextStart "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" j\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧 children")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" prevEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历新 children")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" k"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 找到拥有相同 key 值的可复用节点")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// patch 更新")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 source 数组")]),s._v("\n      source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" nextStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("如上代码所示，外层循环逐个从旧 "),n("code",[s._v("children")]),s._v(" 中取出未处理的节点，并尝试在新 "),n("code",[s._v("children")]),s._v(" 中寻找拥有相同 "),n("code",[s._v("key")]),s._v(" 值的可复用节点，一旦找到了可复用节点，则调用 "),n("code",[s._v("patch")]),s._v(" 函数更新之。接着更新 "),n("code",[s._v("source")]),s._v(" 数组中对应位置的值，这里需要注意的是，由于 "),n("code",[s._v("k - nextStart")]),s._v(" 的值才是正确的位置索引，而非 "),n("code",[s._v("k")]),s._v(" 本身，并且外层循环中变量 "),n("code",[s._v("i")]),s._v(" 的值就代表了该节点在旧 "),n("code",[s._v("children")]),s._v(" 中的位置，所以直接将 "),n("code",[s._v("i")]),s._v(" 赋值给 "),n("code",[s._v("source[k - nextStart]")]),s._v(" 即可达到目的，最终的效果就如上图中所展示的那样。可以看到 "),n("code",[s._v("source")]),s._v(" 数组的第四个元素值仍然为初始值 "),n("code",[s._v("-1")]),s._v("，这是因为"),n("strong",[s._v("新 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("li-g")]),s._v(" 节点不存在于旧 "),n("code",[s._v("children")]),s._v(" 中")]),s._v("。除此之外，还有一件很重要的事儿需要做，即判断是否需要移动节点，判断的方式类似于 "),n("code",[s._v("React")]),s._v(" 所采用的方式，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevStart "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" j\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextStart "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" j\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" moved "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" pos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" prevEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" k"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// patch 更新")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 source 数组")]),s._v("\n      source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" nextStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判断是否需要移动")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        moved "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        pos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" k\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("变量 "),n("code",[s._v("k")]),s._v(" 代表我们在遍历新 "),n("code",[s._v("children")]),s._v(" 中遇到的节点的位置索引，变量 "),n("code",[s._v("pos")]),s._v(" 用来存储遇到的位置索引的最大值，一旦发现后来遇到索引比之前遇到的索引要小，即 "),n("code",[s._v("k < pos")]),s._v("，则说明需要移动操作，这时我们更新变量 "),n("code",[s._v("moved")]),s._v(" 的值为 "),n("code",[s._v("true")]),s._v("，"),n("code",[s._v("moved")]),s._v(" 变量将会在后面使用。")]),s._v(" "),n("p",[s._v("不过在进一步讲解之前，我们需要回头思考一下上面的代码存在怎样的问题？上面的代码中我们采用两层嵌套的循环，其时间复杂度为 "),n("code",[s._v("O(n1 * n2)")]),s._v("，其中 "),n("code",[s._v("n1")]),s._v(" 和 "),n("code",[s._v("n2")]),s._v(" 为新旧 "),n("code",[s._v("children")]),s._v(" 中节点的数量，我们也可以使用 "),n("code",[s._v("O(n^2)")]),s._v(" 来表示，当新旧 "),n("code",[s._v("children")]),s._v(" 中节点的数量较多时，则两层嵌套的循环会带来性能的问题，出于优化的目的，我们可以为新的 "),n("code",[s._v("children")]),s._v(" 中的节点构建一个 "),n("code",[s._v("key")]),s._v(" 到 "),n("code",[s._v("位置索引")]),s._v(" 的"),n("strong",[s._v("索引表")]),s._v("，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff12.566f24a9.png",alt:"img"}})]),s._v(" "),n("p",[n("code",[s._v("Index Map")]),s._v(" 中的键是节点的 "),n("code",[s._v("key")]),s._v("，值是节点在新 "),n("code",[s._v("children")]),s._v(" 中的位置索引，由于数据结构带来的优势，使得我们能够非常快速的定位旧 "),n("code",[s._v("children")]),s._v(" 中的节点在新 "),n("code",[s._v("children")]),s._v(" 中的位置，落实的代码如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevStart "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" j\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextStart "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" j\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" moved "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" pos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 构建索引表")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" keyIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" nextEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  keyIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧 children 的剩余未处理节点")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" prevEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过索引表快速找到新 children 中具有相同 key 的节点的位置")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" keyIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'undefined'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// patch 更新")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 source 数组")]),s._v("\n    source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" nextStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判断是否需要移动")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      moved "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      pos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" k\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 没找到")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("这是典型的"),n("strong",[s._v("用空间换时间")]),s._v("的方式，复杂度能够降低到 "),n("code",[s._v("O(n)")]),s._v("。但无论采用哪一种方式，最终我们的目的是"),n("strong",[s._v("对新旧 "),n("code",[s._v("children")]),s._v(" 中具有相同 "),n("code",[s._v("key")]),s._v(" 值的节点进行更新，同时检测是否需要移动操作")]),s._v("。在如上代码执行完毕之后，如果发现变量 "),n("code",[s._v("moved")]),s._v(" 的值为 "),n("code",[s._v("true")]),s._v("，则说明需要移动操作。")]),s._v(" "),n("p",[s._v("另外在上面的代码中，我们试图拿旧 "),n("code",[s._v("children")]),s._v(" 中的节点尝试去新 "),n("code",[s._v("children")]),s._v(" 中寻找具有相同 "),n("code",[s._v("key")]),s._v(" 值的节点，但并非总是能够找得到，当 "),n("code",[s._v("k === 'undefined'")]),s._v(" 时，说明该节点在新 "),n("code",[s._v("children")]),s._v(" 中已经不存在了，这时我们应该将其移除，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧 children 的剩余未处理节点")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" prevEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过索引表快速找到新 children 中具有相同 key 的节点的位置")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" keyIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'undefined'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 没找到，说明旧节点在新 children 中已经不存在了，应该移除")]),s._v("\n    container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("除此之外，我们还需要一个数量标识，用来代表"),n("strong",[s._v("已经更新过的节点的数量")]),s._v("。我们知道，"),n("strong",[s._v("已经更新过的节点数量")]),s._v("应该小于新 "),n("code",[s._v("children")]),s._v(" 中需要更新的节点数量，一旦更新过的节点数量超过了新 "),n("code",[s._v("children")]),s._v(" 中需要更新的节点数量，则说明该节点是多余的节点，我们也应该将其移除，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" patched "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历旧 children 的剩余未处理节点")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" prevEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  prevVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("patched "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextLeft"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过索引表快速找到新 children 中具有相同 key 的节点的位置")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" keyIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'undefined'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// patch 更新")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      patched"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新 source 数组")]),s._v("\n      source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" nextStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判断是否需要移动")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        moved "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        pos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" k\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 没找到，说明旧节点在新 children 中已经不存在了，应该移除")]),s._v("\n      container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 多余的节点，应该移除")]),s._v("\n    container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("p",[s._v("变量 "),n("code",[s._v("patched")]),s._v(" 将作为数量标识，它的初始值为 "),n("code",[s._v("0")]),s._v("，只有当条件 "),n("code",[s._v("patched < nextLeft")]),s._v(" 不成立时，说明该节点已经不存在与新 "),n("code",[s._v("children")]),s._v(" 中了，是一个多余的节点，于是我们将其移除。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/03o5plkv40")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/03o5plkv40",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"dom-移动的方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom-移动的方式"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#dom-%E7%A7%BB%E5%8A%A8%E7%9A%84%E6%96%B9%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" DOM 移动的方式")]),s._v(" "),n("p",[s._v("在上一小节，我们的主要目的有两个：1、判断出是否需要进行 DOM 移动操作，所以我们建立了 "),n("code",[s._v("moved")]),s._v(" 变量作为标识，当它的值为 "),n("code",[s._v("true")]),s._v(" 时则说明需要进行 DOM 移动；2、构建 "),n("code",[s._v("source")]),s._v(" 数组，它的长度与“去掉”相同的前置/后置节点后新 "),n("code",[s._v("children")]),s._v(" 中剩余未处理节点的数量相等，并存储着新 "),n("code",[s._v("children")]),s._v(" 中的节点在旧 "),n("code",[s._v("children")]),s._v(" 中位置，后面我们会根据 "),n("code",[s._v("source")]),s._v(" 数组计算出一个最长递增子序列，并用于 DOM 移动操作。如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff12.566f24a9.png",alt:"img"}})]),s._v(" "),n("p",[s._v("现在我们已经可以通过判断变量 "),n("code",[s._v("moved")]),s._v(" 的值来确定是否需要进行 DOM 移动操作：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("moved"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 moved 为真，则需要进行 DOM 移动操作")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("一旦需要进行 DOM 节点的移动，我们首先要做的就是根据 "),n("code",[s._v("source")]),s._v(" 数组计算一个最长递增子序列：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("moved"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 计算最长递增子序列")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" seq "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("lis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sources"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [ 0, 1 ]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("什么是最长递增子序列：给定一个数值序列，找到它的一个子序列，并且子序列中的值是递增的，子序列中的元素在原序列中不一定连续。")]),s._v(" "),n("p",[s._v("例如给定数值序列为：[ 0, 8, 4, 12 ]")]),s._v(" "),n("p",[s._v("那么它的最长递增子序列就是：[0, 8, 12]")]),s._v(" "),n("p",[s._v("当然答案可能有多种情况，例如：[0, 4, 12] 也是可以的")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("我们会在下一小节讲解 "),n("code",[s._v("lis")]),s._v(" 函数的实现。")]),s._v(" "),n("p",[s._v("上面的代码中，我们调用 "),n("code",[s._v("lis")]),s._v(" 函数求出数组 "),n("code",[s._v("source")]),s._v(" 的最长递增子序列为 "),n("code",[s._v("[ 0, 1 ]")]),s._v("。我们知道 "),n("code",[s._v("source")]),s._v(" 数组的值为 "),n("code",[s._v("[2, 3, 1, -1]")]),s._v("，很显然最长递增子序列应该是 "),n("code",[s._v("[ 2, 3 ]")]),s._v("，但为什么计算出的结果是 "),n("code",[s._v("[ 0, 1 ]")]),s._v(" 呢？其实 "),n("code",[s._v("[ 0, 1 ]")]),s._v(" 代表的是最长递增子序列中的各个元素在 "),n("code",[s._v("source")]),s._v(" 数组中的位置索引，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff14.7c7a1bfc.png",alt:"img"}})]),s._v(" "),n("p",[s._v("我们对新 "),n("code",[s._v("children")]),s._v(" 中的剩余未处理节点进行了重新编号，"),n("code",[s._v("li-c")]),s._v(" 节点的位置是 "),n("code",[s._v("0")]),s._v("，以此类推。而最长递增子序列是 "),n("code",[s._v("[ 0, 1 ]")]),s._v(" 这告诉我们："),n("strong",[s._v("新 "),n("code",[s._v("children")]),s._v(" 的剩余未处理节点中，位于位置 "),n("code",[s._v("0")]),s._v(" 和位置 "),n("code",[s._v("1")]),s._v(" 的节点的先后关系与他们在旧 "),n("code",[s._v("children")]),s._v(" 中的先后关系相同")]),s._v("。或者我们可以理解为"),n("strong",[s._v("位于位置 "),n("code",[s._v("0")]),s._v(" 和位置 "),n("code",[s._v("1")]),s._v(" 的节点是不需要被移动的节点")]),s._v("，即上图中 "),n("code",[s._v("li-c")]),s._v(" 节点和 "),n("code",[s._v("li-d")]),s._v(" 节点将在接下来的操作中不会被移动。换句话说只有 "),n("code",[s._v("li-b")]),s._v(" 节点和 "),n("code",[s._v("li-g")]),s._v(" 节点是可能被移动的节点，但是我们发现与 "),n("code",[s._v("li-g")]),s._v(" 节点位置对应的 "),n("code",[s._v("source")]),s._v(" 数组元素的值为 "),n("code",[s._v("-1")]),s._v("，这说明 "),n("code",[s._v("li-g")]),s._v(" 节点应该作为全新的节点被挂载，所以只有 "),n("code",[s._v("li-b")]),s._v(" 节点需要被移动。我们来看下图：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff15.087a1726.png",alt:"img"}})]),s._v(" "),n("p",[s._v("使用两个索引 "),n("code",[s._v("i")]),s._v(" 和 "),n("code",[s._v("j")]),s._v(" 分别指向新 "),n("code",[s._v("children")]),s._v(" 中剩余未处理节点的最后一个节点和最长递增子序列数组中的最后一个位置，并从后向前遍历，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("moved"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" seq "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("lis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// j 指向最长递增子序列的最后一个值")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" seq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从后向前遍历新 children 中的剩余未处理节点")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextLeft "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" seq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 说明该节点需要移动")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当 i === seq[j] 时，说明该位置的节点不需要移动")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 并让 j 指向下一个位置")]),s._v("\n      j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("变量 "),n("code",[s._v("j")]),s._v(" 指向最长递增子序列的最后一个位置，使用 "),n("code",[s._v("for")]),s._v(" 循环从后向前遍历新 "),n("code",[s._v("children")]),s._v(" 中剩余未处理的子节点，这里的技巧在于 "),n("code",[s._v("i")]),s._v(" 的值的范围是 "),n("code",[s._v("0")]),s._v(" 到 "),n("code",[s._v("nextLeft - 1")]),s._v("，这实际上就等价于我们对剩余节点进行了重新编号。接着判断当前节点的位置索引值 "),n("code",[s._v("i")]),s._v(" 是否与子序列中位于 "),n("code",[s._v("j")]),s._v(" 位置的值相等，如果不相等，则说明该节点需要被移动；如果相等则说明该节点不需要被移动，并且会让 "),n("code",[s._v("j")]),s._v(" 指向下一个位置。但是我们观察上图可以发现 "),n("code",[s._v("li-g")]),s._v(" 节点的位置索引是 "),n("code",[s._v("3")]),s._v("，它不等于 "),n("code",[s._v("1")]),s._v("("),n("code",[s._v("seq[j]")]),s._v(")，难道说明 "),n("code",[s._v("li-g")]),s._v(" 节点需要被移动吗？其实不是，我们还可以发现与 "),n("code",[s._v("li-g")]),s._v(" 节点位置对应的 "),n("code",[s._v("source")]),s._v(" 数组中的元素值为 "),n("code",[s._v("-1")]),s._v("，这说明 "),n("code",[s._v("li-g")]),s._v(" 节点应该作为全新的节点挂载，所以我们还需增加一个判断，优先检查一个节点是否是全新的节点：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("moved"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" seq "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("lis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// j 指向最长递增子序列的最后一个值")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" seq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从后向前遍历新 children 中的剩余未处理节点")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextLeft "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 作为全新的节点挂载")]),s._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该节点在新 children 中的真实位置索引")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" pos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" nextStart\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该节点下一个节点的位置索引")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextPos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        nextPos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length\n          "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nextPos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n          "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" seq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 说明该节点需要移动")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当 i === seq[j] 时，说明该位置的节点不需要移动")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 并让 j 指向下一个位置")]),s._v("\n      j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("p",[s._v("如上代码的关键在于，为了将节点挂载到正确的位置，我们需要找到当前节点的真实位置索引("),n("code",[s._v("i + nextStart")]),s._v(")，以及当前节点的后一个节点，并挂载该节点的前面即可。这样我们就完成了 "),n("code",[s._v("li-g")]),s._v(" 节点的挂载。接着循环会继续执行，索引 "),n("code",[s._v("i")]),s._v(" 将指向下一个位置，即指向 "),n("code",[s._v("li-b")]),s._v(" 节点，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff16.3bb06229.png",alt:"img"}})]),s._v(" "),n("p",[n("code",[s._v("li-b")]),s._v(" 节点的位置索引 "),n("code",[s._v("i")]),s._v(" 的值为 "),n("code",[s._v("2")]),s._v("，由于 "),n("code",[s._v("source[2]")]),s._v(" 的值为 "),n("code",[s._v("1")]),s._v("，不等于 "),n("code",[s._v("-1")]),s._v("，说明 "),n("code",[s._v("li-b")]),s._v(" 节点不是全新的节点。接着会判断 "),n("code",[s._v("i !== seq[j]")]),s._v("，很显然 "),n("code",[s._v("2 !== 1")]),s._v("，这说明 "),n("code",[s._v("li-b")]),s._v(" 节点是需要被移动的节点，那么应该如何移动呢？很简单，找到 "),n("code",[s._v("li-b")]),s._v(" 节点的后一个节点("),n("code",[s._v("li-g")]),s._v(")，将其插入到 "),n("code",[s._v("li-g")]),s._v(" 节点的前面即可，由于 "),n("code",[s._v("li-g")]),s._v(" 节点已经被挂载，所以我们能够拿到它对应的真实 DOM，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("moved"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" seq "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("lis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// j 指向最长递增子序列的最后一个值")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" seq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从后向前遍历新 children 中的剩余未处理节点")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextLeft "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 作为全新的节点挂载")]),s._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该节点在新 children 中的真实位置索引")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" pos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" nextStart\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该节点下一个节点的位置索引")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextPos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        nextPos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length\n          "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nextPos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n          "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" seq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 说明该节点需要移动")]),s._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该节点在新 children 中的真实位置索引")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" pos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" nextStart\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextVNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该节点下一个节点的位置索引")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" nextPos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移动")]),s._v("\n      container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        nextPos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length\n          "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nextPos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el\n          "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当 i === seq[j] 时，说明该位置的节点不需要移动")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 并让 j 指向下一个位置")]),s._v("\n      j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br")])]),n("p",[s._v("到了这里 "),n("code",[s._v("li-b")]),s._v(" 节点已经被我们移动到了正确的位置，接着会进行下一次循环，如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff17.21e18aa5.png",alt:"img"}})]),s._v(" "),n("p",[s._v("此时索引 "),n("code",[s._v("j")]),s._v(" 依然指向子序列的最后一个位置，索引 "),n("code",[s._v("i")]),s._v(" 的值为 "),n("code",[s._v("1")]),s._v("，它指向 "),n("code",[s._v("li-d")]),s._v(" 节点。同样的，由于 "),n("code",[s._v("source[1]")]),s._v(" 的值为 "),n("code",[s._v("3")]),s._v(" 不等于 "),n("code",[s._v("-1")]),s._v("，说明 "),n("code",[s._v("li-d")]),s._v(" 节点也不是全新的节点。接着判断 "),n("code",[s._v("li-d")]),s._v(" 节点的位置索引 "),n("code",[s._v("i")]),s._v(" 的值与子序列 "),n("code",[s._v("seq[j]")]),s._v(" 的值相等，都为 "),n("code",[s._v("1")]),s._v("，这说明 "),n("code",[s._v("li-d")]),s._v(" 节点不需要被移动，此时会把索引 "),n("code",[s._v("j")]),s._v(" 指向下一个位置，结束本次循环并开启下一次循环，下一次循环时的状态如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/diff18.6f45cb0f.png",alt:"img"}})]),s._v(" "),n("p",[n("code",[s._v("li-c")]),s._v(" 节点既不是新节点，也不需要被移动，至此循环结束，更新完成。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/4lrqpv0jm9")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/4lrqpv0jm9",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"求解最长递增子序列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#求解最长递增子序列"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E6%B1%82%E8%A7%A3%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 求解最长递增子序列")]),s._v(" "),n("p",[s._v("上一小节我们已经介绍了什么是最长递增子序列，同时我们使用 "),n("code",[s._v("lis")]),s._v(" 函数求解一个给定序列的最长递增子序列，本节我们就来探索一下如何求出给定序列的最长递增子序列。")]),s._v(" "),n("p",[s._v("设给定的序列如下：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("[ 0, 8, 4, 12, 2, 10 ]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("实际上，这是一个可以利用动态规划思想求解的问题。动态规划的思想是将一个大的问题分解成多个小的子问题，并尝试得到这些子问题的最优解，子问题的最优解有可能会在更大的问题中被利用，这样通过小问题的最优解最终求得大问题的最优解。那么对于一个序列而言，它的子问题是什么呢？很简单，序列是有长度的，所以我们可以通过序列的长度来划分子问题，如上序列所示，它有 "),n("code",[s._v("6")]),s._v(" 个元素，即该序列的长度为 "),n("code",[s._v("6")]),s._v("，所以我们可不可以将这个序列拆解为长度更短的序列呢？并优先求解这些长度更短的序列的最长递增子序列，进而求得原序列的最长递增子序列？答案是肯定的，假设我们取出原序列的最后一个数字单独作为一个序列，那么该序列就只有一个元素："),n("code",[s._v("[ 10 ]")]),s._v("，很显然这个只有一个元素的序列的长度为 "),n("code",[s._v("1")]),s._v("，已经不能更短了。那么序列 "),n("code",[s._v("[ 10 ]")]),s._v(" 的最长递增子序列是什么呢？因为只有一个元素，所以毫无递增可言，但我们需要一个约定："),n("strong",[s._v("当一个序列只有一个元素时，我们认为其递增子序列就是其本身")]),s._v("，所以序列 "),n("code",[s._v("[ 10 ]")]),s._v(" 的最长递增子序列也是 "),n("code",[s._v("[ 10 ]")]),s._v("，其长度也是 "),n("code",[s._v("1")]),s._v("。")]),s._v(" "),n("p",[s._v("接着我们将子问题进行扩大，现在我们取出原序列中的最后两个数字作为一个序列，即 "),n("code",[s._v("[ 2, 10 ]")]),s._v("。对于这个序列而言，我们可以把它看作是"),n("strong",[s._v("由序列 "),n("code",[s._v("[ 2 ]")]),s._v(" 和序列 "),n("code",[s._v("[ 10 ]")]),s._v(" 这两个序列所组成的")]),s._v("。并且我们观察这两个序列中的数字，发现满足条件 "),n("code",[s._v("2 < 10")]),s._v("，这满足了递增的要求，所以我们是否可以认为"),n("strong",[s._v("序列 "),n("code",[s._v("[ 2, 10 ]")]),s._v(" 的最长递增子序列等于序列 "),n("code",[s._v("[ 2 ]")]),s._v(" 和序列 "),n("code",[s._v("[ 10 ]")]),s._v(" 这两个序列的递增子序列“之和”")]),s._v("？答案是肯定的，而且庆幸的是，我们在上一步中已经求得了序列 "),n("code",[s._v("[ 10 ]")]),s._v(" 的最长递增子序列的长度是 "),n("code",[s._v("1")]),s._v("，同时序列 "),n("code",[s._v("[ 2 ]")]),s._v(" 也是一个只有一个元素的序列，所以它的最长递增子序列也是它本身，长度也是 "),n("code",[s._v("1")]),s._v("，最后我们将两者做和，可知序列 "),n("code",[s._v("[ 2, 10 ]")]),s._v(" 的最长递增子序列的长度应该是 "),n("code",[s._v("1 + 1 = 2")]),s._v("。实际上我们一眼就能够看得出来序列 "),n("code",[s._v("[ 2, 10 ]")]),s._v(" 的最长递增子序列也是 "),n("code",[s._v("[ 2, 10 ]")]),s._v("，其长度当然为 "),n("code",[s._v("2")]),s._v(" 啦。")]),s._v(" "),n("p",[s._v("为了不过于抽象，我们可以画出如下图所示的格子：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/lis1.a175cde6.png",alt:"img"}})]),s._v(" "),n("p",[s._v("我们为原序列中的每个数字分配一个格子，并且这些格子填充 "),n("code",[s._v("1")]),s._v(" 作为初始值：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/lis2.af71d744.png",alt:"img"}})]),s._v(" "),n("p",[s._v("根据前面的分析，我们分别求得子问题的序列 "),n("code",[s._v("[ 10 ]")]),s._v(" 和 "),n("code",[s._v("[ 2, 10 ]")]),s._v(" 的最长递增子序列的长度分别为 "),n("code",[s._v("1")]),s._v(" 和 "),n("code",[s._v("2")]),s._v("，所以我们修改对应的格子中的值，如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/lis3.78ad38df.png",alt:"img"}})]),s._v(" "),n("p",[s._v("如上图所示，原序列中数字 "),n("code",[s._v("10")]),s._v(" 对应的格子的值依然是 "),n("code",[s._v("1")]),s._v("，因为序列 "),n("code",[s._v("[ 10 ]")]),s._v(" 的最长递增子序列的长度是 "),n("code",[s._v("1")]),s._v("。而原序列中数字 "),n("code",[s._v("2")]),s._v(" 对应的格子的值为 "),n("code",[s._v("2")]),s._v("，这是因为序列 "),n("code",[s._v("[ 2, 10 ]")]),s._v(" 的最长递增子序列的长度是 "),n("code",[s._v("2")]),s._v("。所以你应该发现了格子中的值所代表的是"),n("strong",[s._v("以该格子所对应的数字为开头的递增子序列的最大长度")]),s._v("。")]),s._v(" "),n("p",[s._v("接下来我们继续扩大子问题，我们取出原序列中的最后三个数字作为子问题的序列："),n("code",[s._v("[ 12, 2, 10 ]")]),s._v("。同样的，对于这个序列而言，我们可以把它看作是由序列 "),n("code",[s._v("[ 12 ]")]),s._v(" 和序列 "),n("code",[s._v("[ 2, 10 ]")]),s._v(" 这两个序列所组成的。但是我们发现条件 "),n("code",[s._v("12 < 2")]),s._v(" 并不成立，这说明什么呢？实际上这说明："),n("strong",[s._v("以数字 "),n("code",[s._v("12")]),s._v(" 开头的递增子序列的最大长度就 等于 以数字 "),n("code",[s._v("2")]),s._v(" 开头的递增子序列的最大长度")]),s._v("。这时我们不需要修改原序列中数字 "),n("code",[s._v("12")]),s._v(" 所对应的格子的值，如下图所示该格子的值仍然是 "),n("code",[s._v("1")]),s._v("：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/lis4.aa68a822.png",alt:"img"}})]),s._v(" "),n("p",[s._v("但是这就结束了吗？还不行，大家思考一下，刚刚我们的判断条件是 "),n("code",[s._v("12 < 2")]),s._v("，这当然是不成立的，但大家不要忘了，序列 "),n("code",[s._v("[ 12, 2, 10 ]")]),s._v(" 中数字 "),n("code",[s._v("2")]),s._v(" 的后面还有一个数字 "),n("code",[s._v("10")]),s._v("，我们是否要继续判断条件 "),n("code",[s._v("12 < 10")]),s._v(" 是否成立呢？当然有必要，道理很简单，假设我们的序列是 "),n("code",[s._v("[ 12, 2, 15 ]")]),s._v(" 的话，你会发现，如果仅仅判断条件 "),n("code",[s._v("12 < 2")]),s._v(" 是不够的，虽然数字 "),n("code",[s._v("12")]),s._v(" 不能和数字 "),n("code",[s._v("2")]),s._v(" 构成递增的关系，但是数字 "),n("code",[s._v("12")]),s._v(" 却可以和数字 "),n("code",[s._v("15")]),s._v(" 构成递增的关系，因此我们得出"),n("strong",[s._v("当填充一个格子的值时，我们应该拿当前格子对应的数字逐个与其后面的所有格子对应的数字进行比较")]),s._v("，而不能仅仅与紧随其后的数字作比较。按照这个思路，我们继续判断条件 "),n("code",[s._v("12 < 10")]),s._v(" 是否成立，很显然是不成立的，所以原序列中数字 "),n("code",[s._v("12")]),s._v(" 对应的格子的值仍然不需要改动，依然是 "),n("code",[s._v("1")]),s._v("。")]),s._v(" "),n("p",[s._v("接着我们进一步扩大子问题，现在我们抽取原序列中最后的四个数字作为子问题的序列："),n("code",[s._v("[ 4, 12, 2, 10 ]")]),s._v("。还是同样的思路，我们可以把这个序列看作是由序列 "),n("code",[s._v("[ 4 ]")]),s._v(" 和序列 "),n("code",[s._v("[ 12, 2, 10 ]")]),s._v(" 所组成的，又因为条件 "),n("code",[s._v("4 < 12")]),s._v(" 成立，因此我们可以认为子问题序列的最长递增子序列的长度等于"),n("strong",[s._v("序列 "),n("code",[s._v("[ 4 ]")]),s._v(" 的最长递增子序列的长度与以数字 "),n("code",[s._v("12")]),s._v(" 开头的递增子序列的最大长度之和")]),s._v("，序列 "),n("code",[s._v("[ 4 ]")]),s._v(" 的最长递增子序列的长度很显然是 "),n("code",[s._v("1")]),s._v("，而以数字 "),n("code",[s._v("12")]),s._v(" 开头的递增子序列的最大长度实际上就是数字 "),n("code",[s._v("12")]),s._v(" 对应的格子中的数值，我们在上一步已经求得这个值是 "),n("code",[s._v("1")]),s._v("，因此我们修改数字 "),n("code",[s._v("4")]),s._v(" 对应的格子的值为 "),n("code",[s._v("1 + 1 = 2")]),s._v("：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/lis5.6891d76d.png",alt:"img"}})]),s._v(" "),n("p",[s._v("当然了，着同样还没有结束，我们还要判断条件 "),n("code",[s._v("4 < 2")]),s._v(" 和 "),n("code",[s._v("4 < 10")]),s._v(" 是否成立，原因我们在前面已经分析过了。条件 "),n("code",[s._v("4 < 2")]),s._v(" 不成立，所以什么都不做，但条件 "),n("code",[s._v("4 < 10")]),s._v(" 成立，我们找到数字 "),n("code",[s._v("10")]),s._v(" 对应的格子中的值："),n("code",[s._v("1")]),s._v("，将这个值加 "),n("code",[s._v("1")]),s._v(" 之后的值为 "),n("code",[s._v("2")]),s._v("，这与现在数字 "),n("code",[s._v("4")]),s._v(" 对应的格子中的值相等，所以也不需要改动。")]),s._v(" "),n("p",[s._v("到现在为止，不知道大家发现什么规律没有？如何计算一个格子中的值呢？实际很简单，规则是：")]),s._v(" "),n("ul",[n("li",[s._v("1、拿该格子对应的数字 "),n("code",[s._v("a")]),s._v(" 与其后面的所有格子对应的数字 "),n("code",[s._v("b")]),s._v(" 进行比较，如果条件 "),n("code",[s._v("a < b")]),s._v(" 成立，则用数字 "),n("code",[s._v("b")]),s._v(" 对应格子中的值加 "),n("code",[s._v("1")]),s._v("，并将结果填充到数字 "),n("code",[s._v("a")]),s._v(" 对应的格子中。")]),s._v(" "),n("li",[s._v("2、只有当计算出来的值大于数字 "),n("code",[s._v("a")]),s._v(" 所对应的格子中的值时，才需要更新格子中的数值。")])]),s._v(" "),n("p",[s._v("有了这两条规则，我们就很容易填充剩余格子的值了，接下来我们来填充原序列中数字 "),n("code",[s._v("8")]),s._v(" 所对应的格子的值。按照上面的分析，我们需要判断四个条件：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("8 < 4")])]),s._v(" "),n("li",[n("code",[s._v("8 < 12")])]),s._v(" "),n("li",[n("code",[s._v("8 < 2")])]),s._v(" "),n("li",[n("code",[s._v("8 < 10")])])]),s._v(" "),n("p",[s._v("很显然条件 "),n("code",[s._v("8 < 4")]),s._v(" 不成立，什么都不做；条件 "),n("code",[s._v("8 < 12")]),s._v(" 成立，拿出数字 "),n("code",[s._v("12")]),s._v(" 对应格子中的值："),n("code",[s._v("1")]),s._v("，为这个值再加 "),n("code",[s._v("1")]),s._v(" 得出的值为 "),n("code",[s._v("2")]),s._v("，大于数字 "),n("code",[s._v("8")]),s._v(" 对应格子的当前值，所以更新该格子的值为 "),n("code",[s._v("2")]),s._v("；条件 "),n("code",[s._v("8 < 2")]),s._v(" 也不成立，什么都不做；条件 "),n("code",[s._v("8 < 10")]),s._v(" 成立，拿出数字 "),n("code",[s._v("10")]),s._v(" 对应格子中的值 "),n("code",[s._v("1")]),s._v("，为这个值再加 "),n("code",[s._v("1")]),s._v(" 得出的值为 "),n("code",[s._v("2")]),s._v("，不大于数字 "),n("code",[s._v("8")]),s._v(" 所对应格子中的值，所以什么都不需要做，最终我们为数字 "),n("code",[s._v("8")]),s._v(" 所对应的格子填充的值是 "),n("code",[s._v("2")]),s._v("：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/lis6.188e964d.png",alt:"img"}})]),s._v(" "),n("p",[s._v("现在，就剩下原序列中数字 "),n("code",[s._v("0")]),s._v(" 对应的格子的值还没有被更新了，按照之前的思路，我们需要判断的条件如下：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("0 < 8")])]),s._v(" "),n("li",[n("code",[s._v("0 < 4")])]),s._v(" "),n("li",[n("code",[s._v("0 < 12")])]),s._v(" "),n("li",[n("code",[s._v("0 < 2")])]),s._v(" "),n("li",[n("code",[s._v("0 < 10")])])]),s._v(" "),n("p",[s._v("条件 "),n("code",[s._v("0 < 8")]),s._v(" 成立，拿出数字 "),n("code",[s._v("8")]),s._v(" 对应格子中的值 "),n("code",[s._v("2")]),s._v("，为这个值再加 "),n("code",[s._v("1")]),s._v(" 得出的值为 "),n("code",[s._v("3")]),s._v("，大于数字 "),n("code",[s._v("0")]),s._v(" 对应格子的当前值，所以更新该格子的值为 "),n("code",[s._v("3")]),s._v("。重复执行上面介绍的步骤，最终原序列中数字 "),n("code",[s._v("0")]),s._v(" 对应格子的值就是 "),n("code",[s._v("3")]),s._v("：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/lis7.4e6c0065.png",alt:"img"}})]),s._v(" "),n("p",[s._v("如上图所示，现在所有格子的值都已经更新完毕，接下来我们要做的就是根据这些值，找到整个序列的最长递增子序列。那么应该如何寻找呢？很简单，实际上这些格子中的最大值就代表了整个序列的递增子序列的最大长度，上图中数字 "),n("code",[s._v("0")]),s._v(" 对应格子的值为 "),n("code",[s._v("3")]),s._v("，是最大值，因此原序列的最长递增子序列一定是以数字 "),n("code",[s._v("0")]),s._v(" 开头的：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/lis8.0fdc2268.png",alt:"img"}})]),s._v(" "),n("p",[s._v("接着你需要在该值为 "),n("code",[s._v("3")]),s._v(" 的格子后面的所有格子中寻找数值等于 "),n("code",[s._v("2")]),s._v(" 的格子，你发现，有三个格子满足条件，分别是原序列中数字 "),n("code",[s._v("8")]),s._v("、"),n("code",[s._v("4")]),s._v("、"),n("code",[s._v("2")]),s._v(" 所对应的格子。假设你选取的是数字 "),n("code",[s._v("4")]),s._v("：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/lis9.d98aa048.png",alt:"img"}})]),s._v(" "),n("p",[s._v("同样的，你需要继续在数字 "),n("code",[s._v("4")]),s._v(" 对应的格子后面的所有格子中寻找到数值为 "),n("code",[s._v("1")]),s._v(" 的格子，你发现有两个格子是满足条件的，分别是原序列中数字 "),n("code",[s._v("12")]),s._v(" 和数字 "),n("code",[s._v("10")]),s._v(" 所对应的格子，我们再次随机选取一个值，假设我们选择的是数字 "),n("code",[s._v("10")]),s._v("：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/lis10.f667c339.png",alt:"img"}})]),s._v(" "),n("p",[s._v("由于格子中的最小值就是数字 "),n("code",[s._v("1")]),s._v("，因此我们不需要继续寻找了。观察上图可以发现，我们选取出来的三个数字其实就是原序列的最长递增子序列："),n("code",[s._v("[ 0, 4, 10 ]")]),s._v("。当然，你可能已经发现了，答案并非只有一个，例如：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://hcysun.me/vue-design/assets/img/lis11.4c2ca168.png",alt:"img"}})]),s._v(" "),n("p",[s._v("关键在于，有三个格子的数值是 "),n("code",[s._v("2")]),s._v("，因此你可以有三种选择：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("[ 0, 8 ]")])]),s._v(" "),n("li",[n("code",[s._v("[ 0, 4 ]")])]),s._v(" "),n("li",[n("code",[s._v("[ 0, 2 ]")])])]),s._v(" "),n("p",[s._v("当你选择的是 "),n("code",[s._v("[ 0, 8 ]")]),s._v(" 时，又因为数字 "),n("code",[s._v("8")]),s._v(" 对应的格子后面的格子中，有两个数值为 "),n("code",[s._v("1")]),s._v(" 的格子可供选择，所以你还有两种选择：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("[ 0, 8, 12 ]")])]),s._v(" "),n("li",[n("code",[s._v("[ 0, 8, 10 ]")])])]),s._v(" "),n("p",[s._v("同样的，如果你选择的是 "),n("code",[s._v("[ 0, 4 ]")]),s._v("，也有两个选择：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("[ 0, 4, 12 ]")])]),s._v(" "),n("li",[n("code",[s._v("[ 0, 4, 10 ]")])])]),s._v(" "),n("p",[s._v("但当你选择 "),n("code",[s._v("[ 0, 2 ]")]),s._v(" 时，你就只有一个选择：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("[ 0, 2, 10 ]")])])]),s._v(" "),n("p",[s._v("这是因为数字 "),n("code",[s._v("2")]),s._v(" 所对应的格子后面，只有一个格子的数值是 "),n("code",[s._v("1")]),s._v("，即数字 "),n("code",[s._v("10")]),s._v(" 所对应的那个格子，因此你只有一种选择。换句话说当你选择 "),n("code",[s._v("[ 0, 2 ]")]),s._v(" 时，即使数字 "),n("code",[s._v("12")]),s._v(" 对应的格子的值也是 "),n("code",[s._v("1")]),s._v("，你也不能选择它，因为数字 "),n("code",[s._v("12")]),s._v(" 对应的格子在数字 "),n("code",[s._v("2")]),s._v(" 对应的格子之前。")]),s._v(" "),n("p",[s._v("以上，就是我们求得给定序列的"),n("strong",[s._v("所有")]),s._v("最长递增子序列的算法。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("上面的讲解中我们优先选择数值为 "),n("code",[s._v("3")]),s._v(" 的格子，实际上我们也可以从小往大的选择，即先选择数值为 "),n("code",[s._v("1")]),s._v(" 的格子，道理是一样。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/32wjmo7omq")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/32wjmo7omq",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"不足之处"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不足之处"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-diff.html#%E4%B8%8D%E8%B6%B3%E4%B9%8B%E5%A4%84",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 不足之处")]),s._v(" "),n("p",[s._v("实际上，我们确实花费了很大的篇幅来尽可能全面的讲解 "),n("code",[s._v("Virtual DOM")]),s._v(" 核心的 "),n("code",[s._v("Diff")]),s._v(" 算法，然而这里面仍然存在诸多不足之处，例如我们在移除一个 DOM 节点时，直接调用了 Web 平台的 "),n("code",[s._v("removeChild")]),s._v(" 方法，这是因为在以上讲解中，我们始终假设新旧 "),n("code",[s._v("children")]),s._v(" 中的 "),n("code",[s._v("VNode")]),s._v(" 都是真实 DOM 的描述，而不包含组件的描述或其他类型 "),n("code",[s._v("VNode")]),s._v(" 的描述，但实际上 "),n("code",[s._v("children")]),s._v(" 中 "),n("code",[s._v("VNode")]),s._v(" 的类型可以是任意的，因此我们不能简单的通过 Web 平台的 "),n("code",[s._v("removeChild")]),s._v(" 方法进行 DOM 移除操作。这时我们需要封装一个专用函数："),n("code",[s._v("removeVNode")]),s._v("，该函数专门负责移除一个 "),n("code",[s._v("VNode")]),s._v("，它会判断该 "),n("code",[s._v("VNode")]),s._v(" 的类型，并采用合适的方式将其所渲染的真实 DOM 移除。大家思考一下，如果将要被移除的 "),n("code",[s._v("VNode")]),s._v(" 是一个组件的描述，那是否还应该在移除之前或之后分别调用 "),n("code",[s._v("beforeUnmount")]),s._v(" 以及 "),n("code",[s._v("unmounted")]),s._v(" 等生命周期钩子函数呢？答案当然是肯定的。不过，本节讲解的内容虽然存在不足，但至少思路是完全正确的，在此基础上，你可以发挥自己的想象或者结合真正 "),n("code",[s._v("Vue3")]),s._v(" 的源码去进一步的提升。")]),s._v(" "),n("h1",{attrs:{id:"自定义渲染器和异步渲染"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义渲染器和异步渲染"}},[s._v("#")]),s._v(" 自定义渲染器和异步渲染")]),s._v(" "),n("p",[s._v("在本章之前，我们花费了很大的篇幅全面的讲解了一个普通渲染器的实现原理，它可以将 "),n("code",[s._v("Virtual DOM")]),s._v(" 渲染为 Web 平台的真实 DOM。本章我们将在上一章的基础上讲解更加高级的渲染器：自定义渲染器("),n("code",[s._v("Custom renderer")]),s._v(")以及异步渲染。")]),s._v(" "),n("h2",{attrs:{id:"自定义渲染器的原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义渲染器的原理"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-advanced.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B8%B2%E6%9F%93%E5%99%A8%E7%9A%84%E5%8E%9F%E7%90%86",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 自定义渲染器的原理")]),s._v(" "),n("p",[s._v("渲染器是围绕 "),n("code",[s._v("Virtual DOM")]),s._v(" 而存在的，在 Web 平台下它能够把 "),n("code",[s._v("Virtual DOM")]),s._v(" 渲染为浏览器中的真实 DOM 对象，通过前面几章的讲解，相信你已经能够认识到渲染器的实现原理，为了能够将 "),n("code",[s._v("Virtual DOM")]),s._v(" 渲染为真实 DOM，渲染器内部需要调用浏览器提供的 DOM 编程接口，下面罗列了在出上一章中我们曾经使用到的那些浏览器为我们提供的 DOM 编程接口：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("document.createElement / createElementNS")]),s._v("：创建标签元素。")]),s._v(" "),n("li",[n("code",[s._v("document.createTextNode")]),s._v("：创建文本元素。")]),s._v(" "),n("li",[n("code",[s._v("el.nodeValue")]),s._v("：修改文本元素的内容。")]),s._v(" "),n("li",[n("code",[s._v("el.removeChild")]),s._v("：移除 DOM 元素。")]),s._v(" "),n("li",[n("code",[s._v("el.insertBefore")]),s._v("：插入 DOM 元素。")]),s._v(" "),n("li",[n("code",[s._v("el.appendChild")]),s._v("：追加 DOM 元素。")]),s._v(" "),n("li",[n("code",[s._v("el.parentNode")]),s._v("：获取父元素。")]),s._v(" "),n("li",[n("code",[s._v("el.nextSibling")]),s._v("：获取下一个兄弟元素。")]),s._v(" "),n("li",[n("code",[s._v("document.querySelector")]),s._v("：挂载 "),n("code",[s._v("Portal")]),s._v(" 类型的 "),n("code",[s._v("VNode")]),s._v(" 时，用它查找挂载点。")])]),s._v(" "),n("p",[s._v("这些 DOM 编程接口完成了 Web 平台(或者说浏览器)下对 DOM 的增加、删除、查找的工作，它是 Web  平台独有的，所以如果渲染器自身强依赖于这些方法(函数)，那么这个渲染器也只能够运行在浏览器中，它不具备跨平台的能力。换句话说，如果想要实现一个平台无关的渲染器，那么渲染器自身必须不能强依赖于任何一个平台下特有的接口，而是应该提供一个抽象层，将 “DOM”  的增加、删除、查找等操作使用抽象接口实现，具体到某个平台下时，由开发者决定如何使用该平台下的接口实现这个抽象层，这就是自定义渲染器的本质。")]),s._v(" "),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("在下文中，我们将使用 “元素” 一词指代所有平台中的元素对象，例如在 Web 平台下 “元素” 一词指的就是 DOM 元素。")]),s._v(" "),n("p",[s._v("渲染器除了负责对元素的增加、删除、查找之外，它还负责修改某个特定元素自身的属性/特性，例如 Web 平台中元素具有 "),n("code",[s._v("id")]),s._v("、"),n("code",[s._v("href")]),s._v(" 等属性/特性。在上一章中，我们使用 "),n("code",[s._v("patchData")]),s._v(" 函数来完成元素自身属性/特性的更新，如下代码用于修改一个元素的类名列表("),n("code",[s._v("class")]),s._v(")：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// patchData.js")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'class'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n  el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("className "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextValue\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("这段代码同样也只能运行在浏览器中，为了渲染器能够跨平台，那么修改一个元素自身的属性/特性的工作也应该作为可自定义的一部分才行，因此，一个跨平台的渲染器应该至少包含两个可自定义的部分："),n("strong",[s._v("可自定义元素的增加、删除、查找等操作")]),s._v("、"),n("strong",[s._v("可自定义元素自身属性/特性的修改操作")]),s._v("。这样对于任何一个元素来说，它的增删改查都已经变成了可自定义的部分，我们只需要“告知”渲染器在对元素进行增删改查时应该做哪些具体的操作即可。")]),s._v(" "),n("p",[s._v("接下来我们就着手将一个普通渲染器修改为拥有自定义能力的渲染器，在之前的讲解中，我们将渲染器的代码存放在了 "),n("code",[s._v("render.js")]),s._v(" 文件中，如下是整个 "),n("code",[s._v("render.js")]),s._v(" 文件的核心代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导出渲染器")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ========== 挂载 ==========")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountFragment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountPortal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountStatefulComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountFunctionalComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ========== patch ==========")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  container")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchFragment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchPortal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// https://en.wikipedia.org/wiki/Longest_increasing_subsequence")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("lis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("arr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])]),n("p",[s._v("观察如上代码结构，可以发现一个渲染器由两部分组成："),n("code",[s._v("mount")]),s._v(" 和 "),n("code",[s._v("patch")]),s._v("。在 "),n("code",[s._v("mount")]),s._v(" 和 "),n("code",[s._v("patch")]),s._v(" 中都会调用浏览器提供的 DOM 编程接口来完成真正的渲染工作。为了将浏览器提供的 DOM 编程接口与渲染器的代码分离，我们可以将如上代码封装到一个叫做 "),n("code",[s._v("createRenderer")]),s._v(" 的函数中，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("options")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ========== 挂载 ==========")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountFragment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountPortal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountStatefulComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountFunctionalComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ========== patch ==========")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    nextChildFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    container")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchFragment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchPortal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nextVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// https://en.wikipedia.org/wiki/Longest_increasing_subsequence")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("lis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("arr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br")])]),n("p",[n("code",[s._v("createRenderer")]),s._v(" 函数的返回值就是之前的 "),n("code",[s._v("render")]),s._v(" 函数，也就是说调用 "),n("code",[s._v("createRenderer")]),s._v(" 函数可以创建一个渲染器。"),n("code",[s._v("createRenderer")]),s._v(" 函数接收一个参数 "),n("code",[s._v("options")]),s._v("，该参数的作用是为了允许外界有能力将操作元素的具体实现以选项的方式传递进来。")]),s._v(" "),n("p",[s._v("那么 "),n("code",[s._v("options")]),s._v(" 参数中应该包含哪些选项呢？其实前面我们已经分析过了，只要是需要自定义的部分就应该作为选项传递进来，所以参数 "),n("code",[s._v("options")]),s._v(" 中至少要包含两部分：一部分是元素的增加、删除、查找；另外一部分是元素的修改，即 "),n("code",[s._v("patchData")]),s._v(" 函数。如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// nodeOps 是一个对象，该对象包含了所有用于操作节点的方法")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// more...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  patchData\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("基于此，在 "),n("code",[s._v("createRenderer")]),s._v(" 函数内部我们就可以通过解构的方式从 "),n("code",[s._v("options")]),s._v(" 参数中得到具体的方法：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("options")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// options.nodeOps 选项中包含了本章开头罗列的所有操作 DOM 的方法")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// options.patchData 选项就是 patchData 函数")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      createElement"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" platformCreateElement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      createText"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" platformCreateText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      setText"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" platformSetText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等价于 Web 平台的 el.nodeValue")]),s._v("\n      appendChild"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" platformAppendChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      insertBefore"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" platformInsertBefore"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      removeChild"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" platformRemoveChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      parentNode"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" platformParentNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      nextSibling"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" platformNextSibling"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      querySelector"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" platformQuerySelector\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    patchData"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" platformPatchData\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" options\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ========== 挂载 ==========")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ========== patch ==========")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("p",[s._v("如上代码所示，"),n("code",[s._v("options.nodeOps")]),s._v(" 选项是一个对象，它包含了所有用于对元素进行增、删、查的操作，"),n("code",[s._v("options.patchData")]),s._v(" 选项是一个函数，用于处理某个特定元素上的属性/特定，这些内容都是在创建渲染器时由外界来决定的。")]),s._v(" "),n("p",[s._v("接下来我们要做的就是将渲染器中原本使用了 Web 平台进行 DOM 操作的地方修改成使用通过解构得到的函数进行替代，例如在创建 DOM 元素时，原来的实现如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  isSVG "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" isSVG "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ELEMENT_SVG")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" isSVG\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElementNS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://www.w3.org/2000/svg'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("现在我们应该使用 "),n("code",[s._v("platformCreateElement")]),s._v(" 函数替代 "),n("code",[s._v("document.createElement(NS)")]),s._v("：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mountElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" refNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  isSVG "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" isSVG "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" VNodeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ELEMENT_SVG")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" el "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("platformCreateElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("类似的，其他所有涉及 DOM 操作的地方都应该使用这些通过解构得到的抽象接口替代。当这部分工作完成之后，接下来要做的就是对这些用于操作节点的抽象方法进行实现，如下代码所示，我们实现了 Web 平台下创建 DOM 节点的方法：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" isSVG\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElementNS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://www.w3.org/2000/svg'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("再举一个例子，下面这条语句是我们之前实现的渲染器中用于移除旧 "),n("code",[s._v("children")]),s._v(" 中节点的代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("现在我们将之替换为 "),n("code",[s._v("platformRemoveChild")]),s._v(" 函数：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("platformRemoveChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prevVNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("为了让这段代码在 Web 平台正常工作，我们需要在创建渲染器时实现 "),n("code",[s._v("nodeOps.removeChild")]),s._v(" 函数：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" isSVG\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElementNS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://www.w3.org/2000/svg'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("也许你已经想到了，当我们实现了所有 "),n("code",[s._v("nodeOps")]),s._v(" 下的规定的抽象接口之后，实际上就完成了一个面向 Web 平台的渲染器，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" isSVG\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElementNS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://www.w3.org/2000/svg'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createTextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nodeValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" text\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ref")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ref"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("parentNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("node")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parentNode\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("nextSibling")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("node")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nextSibling\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("querySelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("querySelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selector"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br")])]),n("p",[s._v("当然了，如上代码所创建的渲染器只能够完成 Web 平台中对 DOM 的增加、删除和查找的功能，为了能够修改 DOM 元素自身的属性和特性，我们还需要在创建渲染器时将 "),n("code",[s._v("patchData")]),s._v(" 函数作为选项传递过去，好在我们之前已经封装了 "),n("code",[s._v("patchData")]),s._v(" 函数，现在直接拿过来用即可：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" patchData "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./patchData'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 省略...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  patchData\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("TIP")]),s._v(" "),n("p",[s._v("完整代码&在线体验地址：https://codesandbox.io/s/mq8v65qyry")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codesandbox.io/s/mq8v65qyry",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("以上我们就完成了对渲染器的抽象，使它成为一个平台无关的工具。并基于此实现了一个 Web 平台的渲染器，专门用于浏览器环境。")]),s._v(" "),n("h2",{attrs:{id:"自定义渲染器的应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义渲染器的应用"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"http://hcysun.me/vue-design/zh/renderer-advanced.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B8%B2%E6%9F%93%E5%99%A8%E7%9A%84%E5%BA%94%E7%94%A8",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),s._v(" 自定义渲染器的应用")]),s._v(" "),n("p",[n("code",[s._v("Vue3")]),s._v(" 提供了一个叫做 "),n("code",[s._v("@vue/runtime-test")]),s._v(" 的包，其作用是方便开发者在无 DOM 环境时有能力对组件的渲染内容进行测试，这实际上就是对自定义渲染器的应用。本节我们尝试来实现与 "),n("code",[s._v("@vue/runtime-test")]),s._v(" 具有相同功能的渲染器。")]),s._v(" "),n("p",[s._v("原理其实很简单，如下代码所示，这是用于 Web 平台下创建真实 DOM 元素的代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" isSVG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" isSVG\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElementNS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://www.w3.org/2000/svg'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("其中 "),n("code",[s._v("nodeOps.createElement")]),s._v(" 函数会返回一个真实的 DOM 对象，在其内部调用的是浏览器为我们提供的 "),n("code",[s._v("document.createElement/NS")]),s._v(" 函数。实际上 "),n("code",[s._v("nodeOps.createElement")]),s._v(" 函数的真正意图是："),n("strong",[s._v("创建一个元素")]),s._v("，然而并没有规定这个元素应该由谁来创建，或这个元素应该具有什么样的特征，这就是自定义的核心所在。因此，我们完全使 "),n("code",[s._v("nodeOps.createElement")]),s._v(" 函数返回一个普通对象来代指一个元素，后续的所有操作都是基于我们所规定的元素而进行，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" customElement "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        type"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ELEMENT'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        tag\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" customElement\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("在这段代码中，我们自行规定了 "),n("code",[s._v("nodeOps.createElement")]),s._v(" 函数所返回的元素的格式，即 "),n("code",[s._v("customElement")]),s._v(" 对象，它包含两个属性，分别是 用来代表元素类型的 "),n("code",[s._v("type")]),s._v(" 属性以及用来代表元素名称的 "),n("code",[s._v("tag")]),s._v(" 属性。虽然看上去很奇怪，但这确实是一个完全符合要求的实现。这么做的结果就是："),n("strong",[n("code",[s._v("nodeOps.createElement")]),s._v(" 函数所创建的元素不来自于浏览器的 DOM 编程接口，更不来自于任何其他平台的 API")]),s._v("，因此，如上代码所创建的渲染器也将是一个平台无关的渲染器。这就是为什么 "),n("code",[s._v("@vue/runtime-test")]),s._v(" 可以运行在 "),n("code",[s._v("NodeJs")]),s._v(" 中的原因。")]),s._v(" "),n("p",[s._v("当然了，如上代码中 "),n("code",[s._v("customElement")]),s._v(" 只有两个属性，实际上这并不能满足需求，即使元素的格式由我们自行定义，但还是要有一定的限制，例如元素会有子节点，子节点也需要保存对父节点的引用，元素自身也会有属性/特性等等。一个最小且完整的元素定义应该包含以下属性：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" customElement "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 元素的类型：ELEMENT ---\x3e 标签元素；TEXT ---\x3e 文本")]),s._v("\n  tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当 type === 'ELEMENT' 时，tag 属性为标签名字")]),s._v("\n  parentNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对父节点的引用")]),s._v("\n  children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子节点")]),s._v("\n  props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当 type === 'ELEMENT' 时，props 中存储着元素的属性/特性")]),s._v("\n  eventListeners"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当 type === 'ELEMENT' 时，eventListeners 中存储着元素的事件信息")]),s._v("\n  text  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当 type === 'TEXT' 时，text 存储着文本内容")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("现在 "),n("code",[s._v("customElement")]),s._v(" 就是一个能完全代替真实 DOM 对象的模拟实现了，我们用它修改之前的代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" customElement "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        type"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ELEMENT'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        parentNode"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        children"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        props"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        eventListeners"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" customElement\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("如上代码所示，由于 "),n("code",[s._v("nodeOps.createElement")]),s._v(" 函数用于创建元素节点，因此 "),n("code",[s._v("type")]),s._v(" 属性的值为 "),n("code",[s._v("'ELEMENT'")]),s._v("；刚刚创建的元素还不能确定其父节点，因此 "),n("code",[s._v("parentNode")]),s._v(" 为 "),n("code",[s._v("null")]),s._v("；用于存储子节点的 "),n("code",[s._v("children")]),s._v(" 属性被初始化为一个数组，"),n("code",[s._v("props")]),s._v(" 属性和 "),n("code",[s._v("eventListeners")]),s._v(" 被初始化为空对象；最后的 "),n("code",[s._v("text")]),s._v(" 为 "),n("code",[s._v("null")]),s._v("，因为它不是一个文本节点。")]),s._v(" "),n("p",[s._v("现在创建元素节点的功能已经实现，那么创建文本节点呢？如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" customElement "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 省略... */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" customElement\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" customElement "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        type"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'TEXT'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        parentNode"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" text\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" customElement\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("文本元素的 "),n("code",[s._v("type")]),s._v(" 类型值为 "),n("code",[s._v("'TEXT'")]),s._v("，"),n("code",[s._v("parentNode")]),s._v(" 同样被初始化为 "),n("code",[s._v("unll")]),s._v("，"),n("code",[s._v("text")]),s._v(" 属性存储着文本节点的内容。由于文本元素没有子节点、属性/特性、事件等信息，因此不需要其他描述信息。")]),s._v(" "),n("p",[s._v("文本节点与元素节点的创建都已经实现，接下来我们看看当元素被追加时应该如何处理，即 "),n("code",[s._v("nodeOps.appendChild")]),s._v(" 函数的实现：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" customElement "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 省略... */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" customElement\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" customElement "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 省略... */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" customElement\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 简历父子关系")]),s._v("\n      child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parentNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parent\n      parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("如上高亮代码所示，追加节点时我们要做的就是建立节点间正确的父子关系，在 Web 平台下，当我们调用 "),n("code",[s._v("el.appendChild")]),s._v(" 函数时，父子关系是由浏览器负责建立的，但在模拟实现中，这个关系需要我们自己来维护。不过好在这很简单，让子元素的 "),n("code",[s._v("parentNode")]),s._v(" 指向父元素，同时将子元素添加到父元素的 "),n("code",[s._v("children")]),s._v(" 数组中即可。")]),s._v(" "),n("p",[s._v("类似的，如下是 "),n("code",[s._v("nodeOps.removeChild")]),s._v(" 函数的实现：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 省略... */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 省略... */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 简历父子关系")]),s._v("\n      child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parentNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parent\n      parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 找到将要移除的元素 child 在父元素的 children 中的位置")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("indexOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果找到了，则将其删除")]),s._v("\n        parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("splice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 没找到，说明渲染器出了问题，例如没有在 nodeOps.appendChild 函数中维护正确的父子关系等")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这时需要打印错误信息，以提示开发者")]),s._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'target: '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'parent: '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'target 不是 parent 的子节点'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 清空父子链")]),s._v("\n      child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parentNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("p",[s._v("如上高亮代码所示，在移除节点时，思路也很简单，首先需要在父节点的 "),n("code",[s._v("children")]),s._v(" 属性中查找即将要被移除的节点的位置索引，如果找到了，那么就直接将其从父节点的 "),n("code",[s._v("children")]),s._v(" 数组中移除即可。如果没有找到则说明渲染器出问题了，例如在你实现自定义渲染器时没有在 "),n("code",[s._v("nodeOps.appendChild")]),s._v(" 函数或 "),n("code",[s._v("nodeOps.insertBefore")]),s._v(" 函数中维护正确的父子关系，这时我们需要打印错误信息以提示开发者。最后不要忘记清空父子链。")]),s._v(" "),n("p",[s._v("通过如上的讲解，你可能已经领会到了，我们所做的其实就是在模拟 Web 平台在操作元素时的行为，并且这个模拟的思路也及其简单。实际上，当我们实现了所有 "),n("code",[s._v("nodeOps")]),s._v(" 下的抽象函数之后，那么这个类似于 "),n("code",[s._v("@vue/runtime-test")]),s._v(" 的自定义渲染器就基本完成了。当然，不要忘记的是我们还需要实现 "),n("code",[s._v("patchData")]),s._v(" 函数，这可能比你想象的要简单的多，如下高亮代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 省略... */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 省略... */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 省略... */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 省略... */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 其他 nodeOps 函数的实现")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("patchData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    prevValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    nextValue")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将属性添加到元素的 props 对象下")]),s._v("\n    el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextValue\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 我们将属性名字中前两个字符是 'o' 和 'n' 的属性认为是事件绑定")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'o'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'n'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果是事件，则将事件添加到元素的 eventListeners 对象下")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" event "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toLowerCase")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("eventListeners "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("eventListeners "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextValue\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("在创建渲染器时我们需要实现 "),n("code",[s._v("patchData")]),s._v(" 函数的功能，它的功能是用来更新元素自身的属性/特性的，在之前的讲解中我们实现了 Web 平台中 "),n("code",[s._v("patchData")]),s._v(" 函数，然而在这个模拟实现中，我们要做的事情就少了很多。只需要把元素的属性添加到元素的 "),n("code",[s._v("props")]),s._v(" 对象中即可，同时如果是事件的话，我们也只需要将其添加到元素的 "),n("code",[s._v("eventListeners")]),s._v(" 对象中就可以了。")]),s._v(" "),n("p",[s._v("实际上，本节我们所实现的自定义渲染器，就能够满足我们对组件测试的需求，我们可以利用它来测试组件所渲染内容的正确性。如果你想要进一步提升该自定义渲染器的能力，例如希望该渲染器有能力在控制台中打印出操作元素的信息，也很简单，我们以创建元素为例，如下代码所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" customElement "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        type"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ELEMENT'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        parentNode"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        children"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        props"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        eventListeners"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("table")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        type"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CREATE ELEMENT'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        targetNode"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" customElement\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" customElement\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("只需要在 "),n("code",[s._v("nodeOps.createElement")]),s._v(" 函数中调用 "),n("code",[s._v("console.table")]),s._v(" 进行打印你想要的信息即可，例如我们打印了一个对象，该对象包含 "),n("code",[s._v("type")]),s._v(" 属性用于指示当前操作元素的类型，所以对于创建元素来说，我们为 "),n("code",[s._v("type")]),s._v(" 属性赋值了字符串 "),n("code",[s._v("'CREATE ELEMENT'")]),s._v("，同时将目标节点也打印了出来(即 "),n("code",[s._v("targetNode")]),s._v(")。类似的，追加节点可以打印如下信息：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" render "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  nodeOps"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("tag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 省略... */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 简历父子关系")]),s._v("\n      child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parentNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parent\n      parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("table")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        type"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'APPEND'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        targetNode"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        parentNode"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" parent\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("怎么样，是不是很简单。当然了这只是自定义渲染器的应用之一，对于自定义渲染器来说，它可发挥的空间还是非常大的，举几个例子：")]),s._v(" "),n("ul",[n("li",[s._v("渲染到 "),n("code",[s._v("PDF")]),s._v("，我们可以实现一个自定义渲染器如 "),n("code",[s._v("vue-pdf-renderer")]),s._v("，它能够将 "),n("code",[s._v("Vue")]),s._v(" 组件渲染为 "),n("code",[s._v("PDF")]),s._v(" 文件。")]),s._v(" "),n("li",[s._v("渲染到文件系统，我们可以实现一个 "),n("code",[s._v("vue-file-renderer")]),s._v("，它可以根据 "),n("code",[s._v("VNode")]),s._v(" 的结构在本地渲染与该结构相同的文件目录。")]),s._v(" "),n("li",[n("code",[s._v("canvas")]),s._v(" 渲染器，我们可以实现一个 "),n("code",[s._v("vue-canvas-renderer")]),s._v("，它可以从渲染器的层面渲染 "),n("code",[s._v("canvas")]),s._v("，而非组件层面。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);